"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@blocknote";
exports.ids = ["vendor-chunks/@blocknote"];
exports.modules = {

/***/ "(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/regex.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/regex.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9jb3JlL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvcmVnZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWMsRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLFVBQVUsR0FBRyx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96ZW5ib2FyZC8uL25vZGVfbW9kdWxlcy9AYmxvY2tub3RlL2NvcmUvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9yZWdleC5qcz9lNDdlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IC9eKD86WzAtOWEtZl17OH0tWzAtOWEtZl17NH0tWzEtNV1bMC05YS1mXXszfS1bODlhYl1bMC05YS1mXXszfS1bMC05YS1mXXsxMn18MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwKSQvaTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/regex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/rng.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/rng.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9jb3JlL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvcm5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QjtBQUM1Qix1Q0FBdUM7O0FBRXZDO0FBQ2U7QUFDZjtBQUNBLElBQUksNERBQXFCO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3plbmJvYXJkLy4vbm9kZV9tb2R1bGVzL0BibG9ja25vdGUvY29yZS9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JuZy5qcz9hM2I0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbmNvbnN0IHJuZHM4UG9vbCA9IG5ldyBVaW50OEFycmF5KDI1Nik7IC8vICMgb2YgcmFuZG9tIHZhbHVlcyB0byBwcmUtYWxsb2NhdGVcblxubGV0IHBvb2xQdHIgPSBybmRzOFBvb2wubGVuZ3RoO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICBpZiAocG9vbFB0ciA+IHJuZHM4UG9vbC5sZW5ndGggLSAxNikge1xuICAgIGNyeXB0by5yYW5kb21GaWxsU3luYyhybmRzOFBvb2wpO1xuICAgIHBvb2xQdHIgPSAwO1xuICB9XG5cbiAgcmV0dXJuIHJuZHM4UG9vbC5zbGljZShwb29sUHRyLCBwb29sUHRyICs9IDE2KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/rng.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/stringify.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/stringify.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9jb3JlL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvc3RyaW5naWZ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNGdCQUE0Z0I7QUFDNWdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sd0RBQVE7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUVBQWUsU0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL3plbmJvYXJkLy4vbm9kZV9tb2R1bGVzL0BibG9ja25vdGUvY29yZS9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3N0cmluZ2lmeS5qcz81NGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG5jb25zdCBieXRlVG9IZXggPSBbXTtcblxuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXgucHVzaCgoaSArIDB4MTAwKS50b1N0cmluZygxNikuc3Vic3RyKDEpKTtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICAvLyBOb3RlOiBCZSBjYXJlZnVsIGVkaXRpbmcgdGhpcyBjb2RlISAgSXQncyBiZWVuIHR1bmVkIGZvciBwZXJmb3JtYW5jZVxuICAvLyBhbmQgd29ya3MgaW4gd2F5cyB5b3UgbWF5IG5vdCBleHBlY3QuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQvcHVsbC80MzRcbiAgY29uc3QgdXVpZCA9IChieXRlVG9IZXhbYXJyW29mZnNldCArIDBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDNdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA1XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDZdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgN11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA4XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDldXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTNdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTVdXSkudG9Mb3dlckNhc2UoKTsgLy8gQ29uc2lzdGVuY3kgY2hlY2sgZm9yIHZhbGlkIFVVSUQuICBJZiB0aGlzIHRocm93cywgaXQncyBsaWtlbHkgZHVlIHRvIG9uZVxuICAvLyBvZiB0aGUgZm9sbG93aW5nOlxuICAvLyAtIE9uZSBvciBtb3JlIGlucHV0IGFycmF5IHZhbHVlcyBkb24ndCBtYXAgdG8gYSBoZXggb2N0ZXQgKGxlYWRpbmcgdG9cbiAgLy8gXCJ1bmRlZmluZWRcIiBpbiB0aGUgdXVpZClcbiAgLy8gLSBJbnZhbGlkIGlucHV0IHZhbHVlcyBmb3IgdGhlIFJGQyBgdmVyc2lvbmAgb3IgYHZhcmlhbnRgIGZpZWxkc1xuXG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgcmV0dXJuIHV1aWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/stringify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/v4.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/v4.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9jb3JlL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvdjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJCO0FBQ1k7O0FBRXZDO0FBQ0E7QUFDQSxpREFBaUQsK0NBQUcsS0FBSzs7QUFFekQ7QUFDQSxtQ0FBbUM7O0FBRW5DO0FBQ0E7O0FBRUEsb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFNBQVMseURBQVM7QUFDbEI7O0FBRUEsaUVBQWUsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3plbmJvYXJkLy4vbm9kZV9tb2R1bGVzL0BibG9ja25vdGUvY29yZS9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y0LmpzP2JhNzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGNvbnN0IHJuZHMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpOyAvLyBQZXIgNC40LCBzZXQgYml0cyBmb3IgdmVyc2lvbiBhbmQgYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgXG5cbiAgcm5kc1s2XSA9IHJuZHNbNl0gJiAweDBmIHwgMHg0MDtcbiAgcm5kc1s4XSA9IHJuZHNbOF0gJiAweDNmIHwgMHg4MDsgLy8gQ29weSBieXRlcyB0byBidWZmZXIsIGlmIHByb3ZpZGVkXG5cbiAgaWYgKGJ1Zikge1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICBidWZbb2Zmc2V0ICsgaV0gPSBybmRzW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBidWY7XG4gIH1cblxuICByZXR1cm4gc3RyaW5naWZ5KHJuZHMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2NDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/v4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/validate.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/validate.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9jb3JlL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvdmFsaWRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7O0FBRS9CO0FBQ0EscUNBQXFDLGlEQUFLO0FBQzFDOztBQUVBLGlFQUFlLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96ZW5ib2FyZC8uL25vZGVfbW9kdWxlcy9AYmxvY2tub3RlL2NvcmUvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS92YWxpZGF0ZS5qcz85MjgzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSRUdFWCBmcm9tICcuL3JlZ2V4LmpzJztcblxuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIFJFR0VYLnRlc3QodXVpZCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/validate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/core/dist/style.css":
/*!*****************************************************!*\
  !*** ./node_modules/@blocknote/core/dist/style.css ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"730a64dbb042\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9jb3JlL2Rpc3Qvc3R5bGUuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVuYm9hcmQvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9jb3JlL2Rpc3Qvc3R5bGUuY3NzPzVmZDMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI3MzBhNjRkYmIwNDJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/dist/style.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/core/dist/blocknote.js":
/*!********************************************************!*\
  !*** ./node_modules/@blocknote/core/dist/blocknote.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockNoteEditor: () => (/* binding */ xn),\n/* harmony export */   CustomBlockSerializerExtension: () => (/* binding */ qe),\n/* harmony export */   FormattingToolbarProsemirrorPlugin: () => (/* binding */ Ro),\n/* harmony export */   FormattingToolbarView: () => (/* binding */ Do),\n/* harmony export */   HyperlinkToolbarProsemirrorPlugin: () => (/* binding */ Uo),\n/* harmony export */   ImageToolbarProsemirrorPlugin: () => (/* binding */ Ho),\n/* harmony export */   ImageToolbarView: () => (/* binding */ _o),\n/* harmony export */   SideMenuProsemirrorPlugin: () => (/* binding */ Xo),\n/* harmony export */   SideMenuView: () => (/* binding */ jo),\n/* harmony export */   SlashMenuProsemirrorPlugin: () => (/* binding */ Je),\n/* harmony export */   UnreachableCaseError: () => (/* binding */ Pe),\n/* harmony export */   blockStyles: () => (/* binding */ Bn),\n/* harmony export */   camelToDataKebab: () => (/* binding */ dt),\n/* harmony export */   createBlockSpec: () => (/* binding */ go),\n/* harmony export */   createTipTapBlock: () => (/* binding */ F),\n/* harmony export */   defaultBlockSchema: () => (/* binding */ jt),\n/* harmony export */   defaultProps: () => (/* binding */ C),\n/* harmony export */   formatKeyboardShortcut: () => (/* binding */ Mn),\n/* harmony export */   formattingToolbarPluginKey: () => (/* binding */ Oo),\n/* harmony export */   getBlockNoteExtensions: () => (/* binding */ ro),\n/* harmony export */   getDefaultSlashMenuItems: () => (/* binding */ Ko),\n/* harmony export */   hyperlinkToolbarPluginKey: () => (/* binding */ Vo),\n/* harmony export */   imageToolbarPluginKey: () => (/* binding */ z),\n/* harmony export */   isAppleOS: () => (/* binding */ Ne),\n/* harmony export */   mergeCSSClasses: () => (/* binding */ S),\n/* harmony export */   parse: () => (/* binding */ mo),\n/* harmony export */   propsToAttributes: () => (/* binding */ ho),\n/* harmony export */   render: () => (/* binding */ fo),\n/* harmony export */   setupSuggestionsMenu: () => (/* binding */ Ye),\n/* harmony export */   sideMenuPluginKey: () => (/* binding */ qo),\n/* harmony export */   slashMenuPluginKey: () => (/* binding */ tt),\n/* harmony export */   uploadToTmpFilesDotOrg_DEV_ONLY: () => (/* binding */ In)\n/* harmony export */ });\n/* harmony import */ var _tiptap_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tiptap/core */ \"(ssr)/./node_modules/@tiptap/core/dist/index.js\");\n/* harmony import */ var _tiptap_extension_bold__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tiptap/extension-bold */ \"(ssr)/./node_modules/@tiptap/extension-bold/dist/index.js\");\n/* harmony import */ var _tiptap_extension_code__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tiptap/extension-code */ \"(ssr)/./node_modules/@tiptap/extension-code/dist/index.js\");\n/* harmony import */ var _tiptap_extension_collaboration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tiptap/extension-collaboration */ \"(ssr)/./node_modules/@tiptap/extension-collaboration/dist/index.js\");\n/* harmony import */ var _tiptap_extension_collaboration_cursor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tiptap/extension-collaboration-cursor */ \"(ssr)/./node_modules/@tiptap/extension-collaboration-cursor/dist/index.js\");\n/* harmony import */ var _tiptap_extension_dropcursor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tiptap/extension-dropcursor */ \"(ssr)/./node_modules/@tiptap/extension-dropcursor/dist/index.js\");\n/* harmony import */ var _tiptap_extension_gapcursor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tiptap/extension-gapcursor */ \"(ssr)/./node_modules/@tiptap/extension-gapcursor/dist/index.js\");\n/* harmony import */ var _tiptap_extension_hard_break__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tiptap/extension-hard-break */ \"(ssr)/./node_modules/@tiptap/extension-hard-break/dist/index.js\");\n/* harmony import */ var _tiptap_extension_history__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tiptap/extension-history */ \"(ssr)/./node_modules/@tiptap/extension-history/dist/index.js\");\n/* harmony import */ var _tiptap_extension_italic__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tiptap/extension-italic */ \"(ssr)/./node_modules/@tiptap/extension-italic/dist/index.js\");\n/* harmony import */ var _tiptap_extension_link__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tiptap/extension-link */ \"(ssr)/./node_modules/@tiptap/extension-link/dist/index.js\");\n/* harmony import */ var _tiptap_extension_strike__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tiptap/extension-strike */ \"(ssr)/./node_modules/@tiptap/extension-strike/dist/index.js\");\n/* harmony import */ var _tiptap_extension_text__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tiptap/extension-text */ \"(ssr)/./node_modules/@tiptap/extension-text/dist/index.js\");\n/* harmony import */ var _tiptap_extension_underline__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tiptap/extension-underline */ \"(ssr)/./node_modules/@tiptap/extension-underline/dist/index.js\");\n/* harmony import */ var prosemirror_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! prosemirror-model */ \"(ssr)/./node_modules/prosemirror-model/dist/index.js\");\n/* harmony import */ var prosemirror_state__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! prosemirror-state */ \"(ssr)/./node_modules/prosemirror-state/dist/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/@blocknote/core/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var prosemirror_view__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! prosemirror-view */ \"(ssr)/./node_modules/prosemirror-view/dist/index.js\");\n/* harmony import */ var rehype_parse__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rehype-parse */ \"(ssr)/./node_modules/rehype-parse/lib/index.js\");\n/* harmony import */ var rehype_remark__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rehype-remark */ \"(ssr)/./node_modules/rehype-remark/lib/index.js\");\n/* harmony import */ var rehype_stringify__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rehype-stringify */ \"(ssr)/./node_modules/rehype-stringify/lib/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! remark-gfm */ \"(ssr)/./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_parse__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! remark-parse */ \"(ssr)/./node_modules/remark-parse/lib/index.js\");\n/* harmony import */ var remark_rehype__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! remark-rehype */ \"(ssr)/./node_modules/remark-rehype/lib/index.js\");\n/* harmony import */ var remark_rehype__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! remark-rehype */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/index.js\");\n/* harmony import */ var remark_stringify__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! remark-stringify */ \"(ssr)/./node_modules/remark-stringify/lib/index.js\");\n/* harmony import */ var unified__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! unified */ \"(ssr)/./node_modules/unified/lib/index.js\");\n/* harmony import */ var hast_util_from_dom__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! hast-util-from-dom */ \"(ssr)/./node_modules/hast-util-from-dom/lib/index.js\");\nvar Yt = Object.defineProperty;\nvar Jt = (n, e, t) => e in n ? Yt(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t;\nvar u = (n, e, t) => (Jt(n, typeof e != \"symbol\" ? e + \"\" : e, t), t);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Me = \"_bnEditor_12je0_3\", Be = \"_bnRoot_12je0_19\", xe = \"_defaultStyles_12je0_34\", Ie = \"_dragPreview_12je0_57\", D = {\n  bnEditor: Me,\n  bnRoot: Be,\n  defaultStyles: xe,\n  dragPreview: Ie,\n  \"collaboration-cursor__caret\": \"_collaboration-cursor__caret_12je0_63\",\n  \"collaboration-cursor__label\": \"_collaboration-cursor__label_12je0_74\"\n};\nfunction bt(n) {\n  const e = n.attrs.id, t = n.firstChild, o = t.type, r = n.childCount === 2 ? n.lastChild.childCount : 0;\n  return {\n    id: e,\n    node: n,\n    contentNode: t,\n    contentType: o,\n    numChildBlocks: r\n  };\n}\nfunction b(n, e) {\n  const o = n.nodeSize - 2;\n  if (e <= 1)\n    for (e = 1 + 1; n.resolve(e).parent.type.name !== \"blockContainer\" && e < o; )\n      e++;\n  else if (e >= o)\n    for (e = o - 1; n.resolve(e).parent.type.name !== \"blockContainer\" && e > 1; )\n      e--;\n  n.resolve(e).parent.type.name === \"blockGroup\" && e++;\n  const r = n.resolve(e), i = r.depth;\n  let s = r.node(i), l = i;\n  for (; ; ) {\n    if (l < 0)\n      throw new Error(\n        \"Could not find blockContainer node. This can only happen if the underlying BlockNote schema has been edited.\"\n      );\n    if (s.type.name === \"blockContainer\")\n      break;\n    l -= 1, s = r.node(l);\n  }\n  const { id: a, contentNode: d, contentType: c, numChildBlocks: m } = bt(s), h = r.start(l), p = r.end(l);\n  return {\n    id: a,\n    node: s,\n    contentNode: d,\n    contentType: c,\n    numChildBlocks: m,\n    startPos: h,\n    endPos: p,\n    depth: l\n  };\n}\nconst C = {\n  backgroundColor: {\n    default: \"default\"\n  },\n  textColor: {\n    default: \"default\"\n  },\n  textAlignment: {\n    default: \"left\",\n    values: [\"left\", \"center\", \"right\", \"justify\"]\n  }\n}, Ae = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n  name: \"blockBackgroundColor\",\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          backgroundColor: {\n            default: C.backgroundColor.default,\n            parseHTML: (n) => n.hasAttribute(\"data-background-color\") ? n.getAttribute(\"data-background-color\") : C.backgroundColor.default,\n            renderHTML: (n) => n.backgroundColor !== C.backgroundColor.default && {\n              \"data-background-color\": n.backgroundColor\n            }\n          }\n        }\n      }\n    ];\n  },\n  addCommands() {\n    return {\n      setBlockBackgroundColor: (n, e) => ({ state: t, view: o }) => {\n        const r = b(t.doc, n);\n        return r === void 0 ? !1 : (t.tr.setNodeAttribute(\n          r.startPos - 1,\n          \"backgroundColor\",\n          e\n        ), o.focus(), !0);\n      }\n    };\n  }\n}), _e = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Mark.create({\n  name: \"backgroundColor\",\n  addAttributes() {\n    return {\n      color: {\n        default: void 0,\n        parseHTML: (n) => n.getAttribute(\"data-background-color\"),\n        renderHTML: (n) => ({\n          \"data-background-color\": n.color\n        })\n      }\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (n) => typeof n == \"string\" ? !1 : n.hasAttribute(\"data-background-color\") ? { color: n.getAttribute(\"data-background-color\") } : !1\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: n }) {\n    return [\"span\", n, 0];\n  },\n  addCommands() {\n    return {\n      setBackgroundColor: (n) => ({ commands: e }) => n !== C.backgroundColor.default ? e.setMark(this.name, { color: n }) : e.unsetMark(this.name)\n    };\n  }\n});\nfunction He(n, e = JSON.stringify) {\n  const t = {};\n  return n.filter((o) => {\n    const r = e(o);\n    return Object.prototype.hasOwnProperty.call(t, r) ? !1 : t[r] = !0;\n  });\n}\nfunction Le(n) {\n  const e = n.filter(\n    (o, r) => n.indexOf(o) !== r\n  );\n  return He(e);\n}\nconst j = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n  name: \"uniqueID\",\n  // we’ll set a very high priority to make sure this runs first\n  // and is compatible with `appendTransaction` hooks of other extensions\n  priority: 1e4,\n  addOptions() {\n    return {\n      attributeName: \"id\",\n      types: [],\n      generateID: () => {\n        if (typeof window < \"u\" && window.__TEST_OPTIONS) {\n          const n = window.__TEST_OPTIONS;\n          return n.mockID === void 0 ? n.mockID = 0 : n.mockID++, n.mockID.toString();\n        }\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_14__[\"default\"])();\n      },\n      filterTransaction: null\n    };\n  },\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          [this.options.attributeName]: {\n            default: null,\n            parseHTML: (n) => n.getAttribute(`data-${this.options.attributeName}`),\n            renderHTML: (n) => ({\n              [`data-${this.options.attributeName}`]: n[this.options.attributeName]\n            })\n          }\n        }\n      }\n    ];\n  },\n  // check initial content for missing ids\n  // onCreate() {\n  //   // Don’t do this when the collaboration extension is active\n  //   // because this may update the content, so Y.js tries to merge these changes.\n  //   // This leads to empty block nodes.\n  //   // See: https://github.com/ueberdosis/tiptap/issues/2400\n  //   if (\n  //     this.editor.extensionManager.extensions.find(\n  //       (extension) => extension.name === \"collaboration\"\n  //     )\n  //   ) {\n  //     return;\n  //   }\n  //   const { view, state } = this.editor;\n  //   const { tr, doc } = state;\n  //   const { types, attributeName, generateID } = this.options;\n  //   const nodesWithoutId = findChildren(doc, (node) => {\n  //     return (\n  //       types.includes(node.type.name) && node.attrs[attributeName] === null\n  //     );\n  //   });\n  //   nodesWithoutId.forEach(({ node, pos }) => {\n  //     tr.setNodeMarkup(pos, undefined, {\n  //       ...node.attrs,\n  //       [attributeName]: generateID(),\n  //     });\n  //   });\n  //   tr.setMeta(\"addToHistory\", false);\n  //   view.dispatch(tr);\n  // },\n  addProseMirrorPlugins() {\n    let n = null, e = !1;\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n        key: new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"uniqueID\"),\n        appendTransaction: (t, o, r) => {\n          const i = t.some((f) => f.docChanged) && !o.doc.eq(r.doc), s = this.options.filterTransaction && t.some((f) => {\n            let k, v;\n            return !(!((v = (k = this.options).filterTransaction) === null || v === void 0) && v.call(k, f));\n          });\n          if (!i || s)\n            return;\n          const { tr: l } = r, { types: a, attributeName: d, generateID: c } = this.options, m = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.combineTransactionSteps)(\n            o.doc,\n            t\n          ), { mapping: h } = m;\n          if ((0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.getChangedRanges)(m).forEach(({ newRange: f }) => {\n            const k = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.findChildrenInRange)(\n              r.doc,\n              f,\n              (E) => a.includes(E.type.name)\n            ), v = k.map(({ node: E }) => E.attrs[d]).filter((E) => E !== null), w = Le(v);\n            k.forEach(({ node: E, pos: _ }) => {\n              let y;\n              const M = (y = l.doc.nodeAt(_)) === null || y === void 0 ? void 0 : y.attrs[d];\n              if (M === null) {\n                l.setNodeMarkup(_, void 0, {\n                  ...E.attrs,\n                  [d]: c()\n                });\n                return;\n              }\n              const { deleted: ot } = h.invert().mapResult(_);\n              ot && w.includes(M) && l.setNodeMarkup(_, void 0, {\n                ...E.attrs,\n                [d]: c()\n              });\n            });\n          }), !!l.steps.length)\n            return l;\n        },\n        // we register a global drag handler to track the current drag source element\n        view(t) {\n          const o = (r) => {\n            let i;\n            n = !((i = t.dom.parentElement) === null || i === void 0) && i.contains(r.target) ? t.dom.parentElement : null;\n          };\n          return window.addEventListener(\"dragstart\", o), {\n            destroy() {\n              window.removeEventListener(\"dragstart\", o);\n            }\n          };\n        },\n        props: {\n          // `handleDOMEvents` is called before `transformPasted`\n          // so we can do some checks before\n          handleDOMEvents: {\n            // only create new ids for dropped content while holding `alt`\n            // or content is dragged from another editor\n            drop: (t, o) => {\n              let r;\n              return (n !== t.dom.parentElement || ((r = o.dataTransfer) === null || r === void 0 ? void 0 : r.effectAllowed) === \"copy\") && (n = null, e = !0), !1;\n            },\n            // always create new ids on pasted content\n            paste: () => (e = !0, !1)\n          },\n          // we’ll remove ids for every pasted node\n          // so we can create a new one within `appendTransaction`\n          transformPasted: (t) => {\n            if (!e)\n              return t;\n            const { types: o, attributeName: r } = this.options, i = (s) => {\n              const l = [];\n              return s.forEach((a) => {\n                if (a.isText) {\n                  l.push(a);\n                  return;\n                }\n                if (!o.includes(a.type.name)) {\n                  l.push(a.copy(i(a.content)));\n                  return;\n                }\n                const d = a.type.create(\n                  {\n                    ...a.attrs,\n                    [r]: null\n                  },\n                  i(a.content),\n                  a.marks\n                );\n                l.push(d);\n              }), prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Fragment.from(l);\n            };\n            return e = !1, new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Slice(\n              i(t.content),\n              t.openStart,\n              t.openEnd\n            );\n          }\n        }\n      })\n    ];\n  }\n}), Ne = () => /Mac/.test(navigator.platform) || /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent);\nfunction Mn(n) {\n  return Ne() ? n.replace(\"Mod\", \"⌘\") : n.replace(\"Mod\", \"Ctrl\");\n}\nfunction S(...n) {\n  return n.filter((e) => e).join(\" \");\n}\nclass Pe extends Error {\n  constructor(e) {\n    super(`Unreachable case: ${e}`);\n  }\n}\nconst yt = /* @__PURE__ */ new Set([\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"code\"\n]), vt = /* @__PURE__ */ new Set([\"textColor\", \"backgroundColor\"]);\nfunction at(n, e) {\n  const t = [];\n  for (const [o, r] of Object.entries(n.styles))\n    yt.has(o) ? t.push(e.mark(o)) : vt.has(o) && t.push(e.mark(o, { color: r }));\n  return n.text.split(/(\\n)/g).filter((o) => o.length > 0).map((o) => o === `\n` ? e.nodes.hardBreak.create() : e.text(o, t));\n}\nfunction De(n, e) {\n  const t = e.marks.link.create({\n    href: n.href\n  });\n  return wt(n.content, e).map((o) => {\n    if (o.type.name === \"text\")\n      return o.mark([...o.marks, t]);\n    if (o.type.name === \"hardBreak\")\n      return o;\n    throw new Error(\"unexpected node type\");\n  });\n}\nfunction wt(n, e) {\n  const t = [];\n  if (typeof n == \"string\")\n    return t.push(\n      ...at({ type: \"text\", text: n, styles: {} }, e)\n    ), t;\n  for (const o of n)\n    t.push(...at(o, e));\n  return t;\n}\nfunction Ct(n, e) {\n  const t = [];\n  for (const o of n)\n    if (o.type === \"link\")\n      t.push(...De(o, e));\n    else if (o.type === \"text\")\n      t.push(...wt([o], e));\n    else\n      throw new Pe(o);\n  return t;\n}\nfunction V(n, e) {\n  let t = n.id;\n  t === void 0 && (t = j.options.generateID());\n  let o = n.type;\n  o === void 0 && (o = \"paragraph\");\n  let r;\n  if (!n.content)\n    r = e.nodes[o].create(n.props);\n  else if (typeof n.content == \"string\")\n    r = e.nodes[o].create(\n      n.props,\n      e.text(n.content)\n    );\n  else {\n    const l = Ct(n.content, e);\n    r = e.nodes[o].create(n.props, l);\n  }\n  const i = [];\n  if (n.children)\n    for (const l of n.children)\n      i.push(V(l, e));\n  const s = e.nodes.blockGroup.create({}, i);\n  return e.nodes.blockContainer.create(\n    {\n      id: t,\n      ...n.props\n    },\n    i.length > 0 ? [r, s] : r\n  );\n}\nfunction Oe(n) {\n  const e = [];\n  let t;\n  return n.content.forEach((o) => {\n    if (o.type.name === \"hardBreak\") {\n      t ? t.type === \"text\" ? t.text += `\n` : t.type === \"link\" && (t.content[t.content.length - 1].text += `\n`) : t = {\n        type: \"text\",\n        text: `\n`,\n        styles: {}\n      };\n      return;\n    }\n    const r = {};\n    let i;\n    for (const s of o.marks)\n      if (s.type.name === \"link\")\n        i = s;\n      else if (yt.has(s.type.name))\n        r[s.type.name] = !0;\n      else if (vt.has(s.type.name))\n        r[s.type.name] = s.attrs.color;\n      else\n        throw Error(\"Mark is of an unrecognized type: \" + s.type.name);\n    t ? t.type === \"text\" ? i ? (e.push(t), t = {\n      type: \"link\",\n      href: i.attrs.href,\n      content: [\n        {\n          type: \"text\",\n          text: o.textContent,\n          styles: r\n        }\n      ]\n    }) : JSON.stringify(t.styles) === JSON.stringify(r) ? t.text += o.textContent : (e.push(t), t = {\n      type: \"text\",\n      text: o.textContent,\n      styles: r\n    }) : t.type === \"link\" && (i ? t.href === i.attrs.href ? JSON.stringify(\n      t.content[t.content.length - 1].styles\n    ) === JSON.stringify(r) ? t.content[t.content.length - 1].text += o.textContent : t.content.push({\n      type: \"text\",\n      text: o.textContent,\n      styles: r\n    }) : (e.push(t), t = {\n      type: \"link\",\n      href: i.attrs.href,\n      content: [\n        {\n          type: \"text\",\n          text: o.textContent,\n          styles: r\n        }\n      ]\n    }) : (e.push(t), t = {\n      type: \"text\",\n      text: o.textContent,\n      styles: r\n    })) : i ? t = {\n      type: \"link\",\n      href: i.attrs.href,\n      content: [\n        {\n          type: \"text\",\n          text: o.textContent,\n          styles: r\n        }\n      ]\n    } : t = {\n      type: \"text\",\n      text: o.textContent,\n      styles: r\n    };\n  }), t && e.push(t), e;\n}\nfunction x(n, e, t) {\n  if (n.type.name !== \"blockContainer\")\n    throw Error(\n      \"Node must be of type blockContainer, but is of type\" + n.type.name + \".\"\n    );\n  const o = t == null ? void 0 : t.get(n);\n  if (o)\n    return o;\n  const r = bt(n);\n  let i = r.id;\n  i === null && (i = j.options.generateID());\n  const s = {};\n  for (const [c, m] of Object.entries({\n    ...n.attrs,\n    ...r.contentNode.attrs\n  })) {\n    const h = e[r.contentType.name];\n    if (!h)\n      throw Error(\n        \"Block is of an unrecognized type: \" + r.contentType.name\n      );\n    const p = h.propSchema;\n    c in p ? s[c] = m : c !== \"id\" && !(c in C) && console.warn(\"Block has an unrecognized attribute: \" + c);\n  }\n  const l = e[r.contentType.name], a = [];\n  for (let c = 0; c < r.numChildBlocks; c++)\n    a.push(\n      x(n.lastChild.child(c), e, t)\n    );\n  const d = {\n    id: i,\n    type: l.node.name,\n    props: s,\n    content: l.node.config.content === \"inline*\" ? Oe(r.contentNode) : void 0,\n    children: a\n  };\n  return t == null || t.set(n, d), d;\n}\nconst lt = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"previous-blocks\"), Re = {\n  // Numbered List Items\n  index: \"index\",\n  // Headings\n  level: \"level\",\n  // All Blocks\n  type: \"type\",\n  depth: \"depth\",\n  \"depth-change\": \"depth-change\"\n}, ze = () => {\n  let n;\n  return new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n    key: lt,\n    view(e) {\n      return {\n        update: async (t, o) => {\n          var r;\n          ((r = this.key) == null ? void 0 : r.getState(t.state).updatedBlocks.size) > 0 && (n = setTimeout(() => {\n            t.dispatch(\n              t.state.tr.setMeta(lt, { clearUpdate: !0 })\n            );\n          }, 0));\n        },\n        destroy: () => {\n          n && clearTimeout(n);\n        }\n      };\n    },\n    state: {\n      init() {\n        return {\n          // Block attributes, by block ID, from just before the previous transaction.\n          prevTransactionOldBlockAttrs: {},\n          // Block attributes, by block ID, from just before the current transaction.\n          currentTransactionOldBlockAttrs: {},\n          // Set of IDs of blocks whose attributes changed from the current transaction.\n          updatedBlocks: /* @__PURE__ */ new Set()\n        };\n      },\n      apply(e, t, o, r) {\n        if (t.currentTransactionOldBlockAttrs = {}, t.updatedBlocks.clear(), !e.docChanged || o.doc.eq(r.doc))\n          return t;\n        const i = {}, s = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.findChildren)(o.doc, (d) => d.attrs.id), l = new Map(\n          s.map((d) => [d.node.attrs.id, d])\n        ), a = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.findChildren)(r.doc, (d) => d.attrs.id);\n        for (const d of a) {\n          const c = l.get(d.node.attrs.id), m = c == null ? void 0 : c.node.firstChild, h = d.node.firstChild;\n          if (c && m && h) {\n            const p = {\n              index: h.attrs.index,\n              level: h.attrs.level,\n              type: h.type.name,\n              depth: r.doc.resolve(d.pos).depth\n            };\n            let f = {\n              index: m.attrs.index,\n              level: m.attrs.level,\n              type: m.type.name,\n              depth: o.doc.resolve(c.pos).depth\n            };\n            i[d.node.attrs.id] = f, e.getMeta(\"numberedListIndexing\") && (d.node.attrs.id in t.prevTransactionOldBlockAttrs && (f = t.prevTransactionOldBlockAttrs[d.node.attrs.id]), p.type === \"numberedListItem\" && (f.index = p.index)), t.currentTransactionOldBlockAttrs[d.node.attrs.id] = f, JSON.stringify(f) !== JSON.stringify(p) && (f[\"depth-change\"] = f.depth - p.depth, t.updatedBlocks.add(d.node.attrs.id));\n          }\n        }\n        return t.prevTransactionOldBlockAttrs = i, t;\n      }\n    },\n    props: {\n      decorations(e) {\n        const t = this.getState(e);\n        if (t.updatedBlocks.size === 0)\n          return;\n        const o = [];\n        return e.doc.descendants((r, i) => {\n          if (!r.attrs.id || !t.updatedBlocks.has(r.attrs.id))\n            return;\n          const s = t.currentTransactionOldBlockAttrs[r.attrs.id], l = {};\n          for (const [d, c] of Object.entries(s))\n            l[\"data-prev-\" + Re[d]] = c || \"none\";\n          const a = prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.Decoration.node(i, i + r.nodeSize, {\n            ...l\n          });\n          o.push(a);\n        }), prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.DecorationSet.create(e.doc, o);\n      }\n    }\n  });\n}, Et = \"_blockOuter_xo7pf_5\", St = \"_block_xo7pf_5\", Tt = \"_reactNodeViewRenderer_xo7pf_17\", Mt = \"_blockContent_xo7pf_22\", Bt = \"_blockGroup_xo7pf_42\", xt = \"_wrapper_xo7pf_226\", It = \"_addImageButton_xo7pf_234\", At = \"_addImageButtonIcon_xo7pf_250\", _t = \"_addImageButtonText_xo7pf_256\", Ht = \"_imageAndCaptionWrapper_xo7pf_260\", Lt = \"_imageWrapper_xo7pf_266\", Nt = \"_image_xo7pf_260\", Pt = \"_resizeHandle_xo7pf_279\", Dt = \"_caption_xo7pf_294\", Ot = \"_isEmpty_xo7pf_300\", Rt = \"_inlineContent_xo7pf_300\", zt = \"_isFilter_xo7pf_301\", Vt = \"_hasAnchor_xo7pf_313\", g = {\n  blockOuter: Et,\n  block: St,\n  reactNodeViewRenderer: Tt,\n  blockContent: Mt,\n  blockGroup: Bt,\n  wrapper: xt,\n  addImageButton: It,\n  addImageButtonIcon: At,\n  addImageButtonText: _t,\n  imageAndCaptionWrapper: Ht,\n  imageWrapper: Lt,\n  image: Nt,\n  resizeHandle: Pt,\n  caption: Dt,\n  isEmpty: Ot,\n  inlineContent: Rt,\n  isFilter: zt,\n  hasAnchor: Vt\n}, Bn = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  addImageButton: It,\n  addImageButtonIcon: At,\n  addImageButtonText: _t,\n  block: St,\n  blockContent: Mt,\n  blockGroup: Bt,\n  blockOuter: Et,\n  caption: Dt,\n  default: g,\n  hasAnchor: Vt,\n  image: Nt,\n  imageAndCaptionWrapper: Ht,\n  imageWrapper: Lt,\n  inlineContent: Rt,\n  isEmpty: Ot,\n  isFilter: zt,\n  reactNodeViewRenderer: Tt,\n  resizeHandle: Pt,\n  wrapper: xt\n}, Symbol.toStringTag, { value: \"Module\" })), Ve = {\n  blockColor: \"data-block-color\",\n  blockStyle: \"data-block-style\",\n  id: \"data-id\",\n  depth: \"data-depth\",\n  depthChange: \"data-depth-change\"\n}, Ue = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"non-editable-block\"), Fe = () => new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n  key: Ue,\n  props: {\n    handleKeyDown: (n, e) => {\n      \"node\" in n.state.selection && e.preventDefault();\n    }\n  }\n}), We = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Node.create({\n  name: \"blockContainer\",\n  group: \"blockContainer\",\n  // A block always contains content, and optionally a blockGroup which contains nested blocks\n  content: \"blockContent blockGroup?\",\n  // Ensures content-specific keyboard handlers trigger first.\n  priority: 50,\n  defining: !0,\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (n) => {\n          if (typeof n == \"string\")\n            return !1;\n          const e = {};\n          for (const [t, o] of Object.entries(Ve))\n            n.getAttribute(o) && (e[t] = n.getAttribute(o));\n          return n.getAttribute(\"data-node-type\") === \"blockContainer\" ? e : !1;\n        }\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: n }) {\n    var t;\n    const e = ((t = this.options.domAttributes) == null ? void 0 : t.blockContainer) || {};\n    return [\n      \"div\",\n      (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.mergeAttributes)(n, {\n        class: g.blockOuter,\n        \"data-node-type\": \"block-outer\"\n      }),\n      [\n        \"div\",\n        (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.mergeAttributes)(\n          {\n            ...e,\n            class: S(g.block, e.class),\n            \"data-node-type\": this.name\n          },\n          n\n        ),\n        0\n      ]\n    ];\n  },\n  addCommands() {\n    return {\n      // Creates a new text block at a given position.\n      BNCreateBlock: (n) => ({ state: e, dispatch: t }) => {\n        const o = e.schema.nodes.blockContainer.createAndFill();\n        return t && e.tr.insert(n, o), !0;\n      },\n      // Deletes a block at a given position.\n      BNDeleteBlock: (n) => ({ state: e, dispatch: t }) => {\n        const o = b(e.doc, n);\n        if (o === void 0)\n          return !1;\n        const { startPos: r, endPos: i } = o;\n        return t && e.tr.deleteRange(r, i), !0;\n      },\n      // Updates a block at a given position.\n      BNUpdateBlock: (n, e) => ({ state: t, dispatch: o }) => {\n        const r = b(t.doc, n);\n        if (r === void 0)\n          return !1;\n        const { startPos: i, endPos: s, node: l, contentNode: a } = r;\n        if (o) {\n          if (e.children !== void 0) {\n            const p = [];\n            for (const f of e.children)\n              p.push(V(f, t.schema));\n            l.childCount === 2 ? t.tr.replace(\n              i + a.nodeSize + 1,\n              s - 1,\n              new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Slice(prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Fragment.from(p), 0, 0)\n            ) : t.tr.insert(\n              i + a.nodeSize,\n              t.schema.nodes.blockGroup.create({}, p)\n            );\n          }\n          if (e.content !== void 0) {\n            let p = [];\n            typeof e.content == \"string\" ? p.push(t.schema.text(e.content)) : p = Ct(e.content, t.schema), t.tr.replace(\n              i + 1,\n              i + a.nodeSize - 1,\n              new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Slice(prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Fragment.from(p), 0, 0)\n            );\n          }\n          const d = a.type.name, c = e.type || d, m = t.schema.nodes[d].spec.content, h = t.schema.nodes[c].spec.content;\n          m === \"inline*\" && h === \"\" ? t.tr.replaceWith(\n            i,\n            s,\n            t.schema.nodes[c].create({\n              ...a.attrs,\n              ...e.props\n            })\n          ).setSelection(\n            new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.NodeSelection(t.tr.doc.resolve(i))\n          ) : t.tr.setNodeMarkup(\n            i,\n            e.type === void 0 ? void 0 : t.schema.nodes[e.type],\n            {\n              ...a.attrs,\n              ...e.props\n            }\n          ), t.tr.setNodeMarkup(i - 1, void 0, {\n            ...l.attrs,\n            ...e.props\n          });\n        }\n        return !0;\n      },\n      // Appends the text contents of a block to the nearest previous block, given a position between them. Children of\n      // the merged block are moved out of it first, rather than also being merged.\n      //\n      // In the example below, the position passed into the function is between Block1 and Block2.\n      //\n      // Block1\n      //    Block2\n      // Block3\n      //    Block4\n      //        Block5\n      //\n      // Becomes:\n      //\n      // Block1\n      //    Block2Block3\n      // Block4\n      //     Block5\n      BNMergeBlocks: (n) => ({ state: e, dispatch: t }) => {\n        const o = e.doc.resolve(n + 1).node().type.name === \"blockContainer\", r = e.doc.resolve(n - 1).node().type.name === \"blockContainer\";\n        if (!o || !r)\n          return !1;\n        const i = b(\n          e.doc,\n          n + 1\n        ), { node: s, contentNode: l, startPos: a, endPos: d, depth: c } = i;\n        if (s.childCount === 2) {\n          const p = e.doc.resolve(\n            a + l.nodeSize + 1\n          ), f = e.doc.resolve(d - 1), k = p.blockRange(f);\n          t && e.tr.lift(k, c - 1);\n        }\n        let m = n - 1, h = b(e.doc, m);\n        for (; h.numChildBlocks > 0; )\n          if (m--, h = b(e.doc, m), h === void 0)\n            return !1;\n        return t && (t(\n          e.tr.deleteRange(a, a + l.nodeSize).replace(\n            m - 1,\n            a,\n            new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Slice(l.content, 0, 0)\n          ).scrollIntoView()\n        ), e.tr.setSelection(\n          new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.TextSelection(e.doc.resolve(m - 1))\n        )), !0;\n      },\n      // Splits a block at a given position. Content after the position is moved to a new block below, at the same\n      // nesting level.\n      BNSplitBlock: (n, e) => ({ state: t, dispatch: o }) => {\n        const r = b(t.doc, n);\n        if (r === void 0)\n          return !1;\n        const { contentNode: i, contentType: s, startPos: l, endPos: a, depth: d } = r, c = t.doc.cut(l + 1, n), m = t.doc.cut(n, a - 1), h = t.schema.nodes.blockContainer.createAndFill(), p = a + 1, f = p + 2;\n        return o && (t.tr.insert(p, h), t.tr.replace(\n          f,\n          f + 1,\n          m.content.size > 0 ? new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Slice(\n            prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Fragment.from(m),\n            d + 2,\n            d + 2\n          ) : void 0\n        ), e && t.tr.setBlockType(\n          f,\n          f,\n          t.schema.node(s).type,\n          i.attrs\n        ), t.tr.setSelection(\n          new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.TextSelection(t.doc.resolve(f))\n        ), t.tr.replace(\n          l + 1,\n          a - 1,\n          c.content.size > 0 ? new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Slice(\n            prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Fragment.from(c),\n            d + 2,\n            d + 2\n          ) : void 0\n        )), !0;\n      }\n    };\n  },\n  addProseMirrorPlugins() {\n    return [ze(), Fe()];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Backspace: () => this.editor.commands.first(({ commands: t }) => [\n        // Deletes the selection if it's not empty.\n        () => t.deleteSelection(),\n        // Undoes an input rule if one was triggered in the last editor state change.\n        () => t.undoInputRule(),\n        // Reverts block content type to a paragraph if the selection is at the start of the block.\n        () => t.command(({ state: o }) => {\n          const { contentType: r } = b(\n            o.doc,\n            o.selection.from\n          ), i = o.selection.$anchor.parentOffset === 0, s = r.name === \"paragraph\";\n          return i && !s ? t.BNUpdateBlock(o.selection.from, {\n            type: \"paragraph\",\n            props: {}\n          }) : !1;\n        }),\n        // Removes a level of nesting if the block is indented if the selection is at the start of the block.\n        () => t.command(({ state: o }) => o.selection.$anchor.parentOffset === 0 ? t.liftListItem(\"blockContainer\") : !1),\n        // Merges block with the previous one if it isn't indented, isn't the first block in the doc, and the selection\n        // is at the start of the block.\n        () => t.command(({ state: o }) => {\n          const { depth: r, startPos: i } = b(\n            o.doc,\n            o.selection.from\n          ), s = o.selection.$anchor.parentOffset === 0, l = o.selection.anchor === o.selection.head, a = i === 2, d = i - 1;\n          return !a && s && l && r === 2 ? t.BNMergeBlocks(d) : !1;\n        })\n      ]),\n      Enter: () => this.editor.commands.first(({ commands: t }) => [\n        // Removes a level of nesting if the block is empty & indented, while the selection is also empty & at the start\n        // of the block.\n        () => t.command(({ state: o }) => {\n          const { node: r, depth: i } = b(\n            o.doc,\n            o.selection.from\n          ), s = o.selection.$anchor.parentOffset === 0, l = o.selection.anchor === o.selection.head, a = r.textContent.length === 0, d = i > 2;\n          return s && l && a && d ? t.liftListItem(\"blockContainer\") : !1;\n        }),\n        // Creates a new block and moves the selection to it if the current one is empty, while the selection is also\n        // empty & at the start of the block.\n        () => t.command(({ state: o, chain: r }) => {\n          const { node: i, endPos: s } = b(\n            o.doc,\n            o.selection.from\n          ), l = o.selection.$anchor.parentOffset === 0, a = o.selection.anchor === o.selection.head, d = i.textContent.length === 0;\n          if (l && a && d) {\n            const c = s + 1, m = c + 2;\n            return r().BNCreateBlock(c).setTextSelection(m).run(), !0;\n          }\n          return !1;\n        }),\n        // Splits the current block, moving content inside that's after the cursor to a new text block below. Also\n        // deletes the selection beforehand, if it's not empty.\n        () => t.command(({ state: o, chain: r }) => {\n          const { node: i } = b(\n            o.doc,\n            o.selection.from\n          );\n          return i.textContent.length === 0 ? !1 : (r().deleteSelection().BNSplitBlock(o.selection.from, !1).run(), !0);\n        })\n      ]),\n      // Always returning true for tab key presses ensures they're not captured by the browser. Otherwise, they blur the\n      // editor since the browser will try to use tab for keyboard navigation.\n      Tab: () => (this.editor.commands.sinkListItem(\"blockContainer\"), !0),\n      \"Shift-Tab\": () => (this.editor.commands.liftListItem(\"blockContainer\"), !0),\n      \"Mod-Alt-0\": () => this.editor.commands.BNCreateBlock(\n        this.editor.state.selection.anchor + 2\n      )\n    };\n  }\n}), $e = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Node.create({\n  name: \"blockGroup\",\n  group: \"blockGroup\",\n  content: \"blockContainer+\",\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (n) => typeof n == \"string\" ? !1 : n.getAttribute(\"data-node-type\") === \"blockGroup\" ? null : !1\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: n }) {\n    var t;\n    const e = ((t = this.options.domAttributes) == null ? void 0 : t.blockGroup) || {};\n    return [\n      \"div\",\n      (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.mergeAttributes)(\n        {\n          ...e,\n          class: S(\n            g.blockGroup,\n            e.class\n          ),\n          \"data-node-type\": \"blockGroup\"\n        },\n        n\n      ),\n      0\n    ];\n  }\n}), Ge = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Node.create({\n  name: \"doc\",\n  topNode: !0,\n  content: \"blockGroup\"\n}), je = (n) => {\n  const e = prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.DOMSerializer.fromSchema(n);\n  return new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.DOMSerializer(\n    {\n      ...e.nodes\n      // TODO: If a serializer is defined in the config for a custom block, it\n      //  should be added here. We still need to figure out how the serializer\n      //  should be defined in the custom blocks API though, and implement that,\n      //  before we can do this.\n    },\n    e.marks\n  );\n}, qe = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n  addProseMirrorPlugins() {\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n        props: {\n          clipboardSerializer: je(this.editor.schema)\n        }\n      })\n    ];\n  }\n});\nclass U {\n  constructor() {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    u(this, \"callbacks\", {});\n  }\n  on(e, t) {\n    return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(t), () => this.off(e, t);\n  }\n  emit(e, ...t) {\n    const o = this.callbacks[e];\n    o && o.forEach((r) => r.apply(this, t));\n  }\n  off(e, t) {\n    const o = this.callbacks[e];\n    o && (t ? this.callbacks[e] = o.filter((r) => r !== t) : delete this.callbacks[e]);\n  }\n  removeAllListeners() {\n    this.callbacks = {};\n  }\n}\nconst Xe = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.findParentNode)(\n  (n) => n.type.name === \"blockContainer\"\n);\nclass Ke {\n  constructor(e, t, o = () => {\n  }) {\n    u(this, \"suggestionsMenuState\");\n    u(this, \"updateSuggestionsMenu\");\n    u(this, \"pluginState\");\n    u(this, \"handleScroll\", () => {\n      var e;\n      if ((e = this.suggestionsMenuState) != null && e.show) {\n        const t = document.querySelector(\n          `[data-decoration-id=\"${this.pluginState.decorationId}\"]`\n        );\n        this.suggestionsMenuState.referencePos = t.getBoundingClientRect(), this.updateSuggestionsMenu();\n      }\n    });\n    this.editor = e, this.pluginKey = t, this.pluginState = J(), this.updateSuggestionsMenu = () => {\n      if (!this.suggestionsMenuState)\n        throw new Error(\"Attempting to update uninitialized suggestions menu\");\n      o(this.suggestionsMenuState);\n    }, document.addEventListener(\"scroll\", this.handleScroll);\n  }\n  update(e, t) {\n    const o = this.pluginKey.getState(t), r = this.pluginKey.getState(e.state), i = !o.active && r.active, s = o.active && !r.active, l = o.active && r.active;\n    if (!i && !l && !s)\n      return;\n    if (this.pluginState = s ? o : r, s || !this.editor.isEditable) {\n      this.suggestionsMenuState.show = !1, this.updateSuggestionsMenu();\n      return;\n    }\n    const a = document.querySelector(\n      `[data-decoration-id=\"${this.pluginState.decorationId}\"]`\n    );\n    this.editor.isEditable && (this.suggestionsMenuState = {\n      show: !0,\n      referencePos: a.getBoundingClientRect(),\n      filteredItems: this.pluginState.items,\n      keyboardHoveredItemIndex: this.pluginState.keyboardHoveredItemIndex\n    }, this.updateSuggestionsMenu());\n  }\n  destroy() {\n    document.removeEventListener(\"scroll\", this.handleScroll);\n  }\n}\nfunction J() {\n  return {\n    active: !1,\n    triggerCharacter: void 0,\n    queryStartPos: void 0,\n    items: [],\n    keyboardHoveredItemIndex: void 0,\n    notFoundCount: 0,\n    decorationId: void 0\n  };\n}\nconst Ye = (n, e, t, o, r = () => [], i = () => {\n}) => {\n  if (o.length !== 1)\n    throw new Error(\"'char' should be a single character\");\n  let s;\n  const l = (a) => {\n    a.dispatch(a.state.tr.setMeta(t, { deactivate: !0 }));\n  };\n  return {\n    plugin: new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n      key: t,\n      view: () => (s = new Ke(\n        n,\n        t,\n        e\n      ), s),\n      state: {\n        // Initialize the plugin's internal state.\n        init() {\n          return J();\n        },\n        // Apply changes to the plugin state from an editor transaction.\n        apply(a, d, c, m) {\n          var p, f, k, v;\n          if (a.getMeta(\"orderedListIndexing\") !== void 0)\n            return d;\n          if ((p = a.getMeta(t)) != null && p.activate)\n            return {\n              active: !0,\n              triggerCharacter: ((f = a.getMeta(t)) == null ? void 0 : f.triggerCharacter) || \"\",\n              queryStartPos: m.selection.from,\n              items: r(\"\"),\n              keyboardHoveredItemIndex: 0,\n              // TODO: Maybe should be 1 if the menu has no possible items? Probably redundant since a menu with no items\n              //  is useless in practice.\n              notFoundCount: 0,\n              decorationId: `id_${Math.floor(Math.random() * 4294967295)}`\n            };\n          if (!d.active)\n            return d;\n          const h = { ...d };\n          if (h.items = r(\n            m.doc.textBetween(\n              d.queryStartPos,\n              m.selection.from\n            )\n          ), h.notFoundCount = 0, h.items.length === 0 && (h.notFoundCount = Math.max(\n            0,\n            d.notFoundCount + (m.selection.from - c.selection.from)\n          )), // Highlighting text should hide the menu.\n          m.selection.from !== m.selection.to || // Transactions with plugin metadata {deactivate: true} should hide the menu.\n          (k = a.getMeta(t)) != null && k.deactivate || // Certain mouse events should hide the menu.\n          // TODO: Change to global mousedown listener.\n          a.getMeta(\"focus\") || a.getMeta(\"blur\") || a.getMeta(\"pointer\") || // Moving the caret before the character which triggered the menu should hide it.\n          d.active && m.selection.from < d.queryStartPos || // Entering more than 3 characters, after the last query that matched with at least 1 menu item, should hide\n          // the menu.\n          h.notFoundCount > 3)\n            return J();\n          if (((v = a.getMeta(t)) == null ? void 0 : v.selectedItemIndexChanged) !== void 0) {\n            let w = a.getMeta(t).selectedItemIndexChanged;\n            w < 0 ? w = d.items.length - 1 : w >= d.items.length && (w = 0), h.keyboardHoveredItemIndex = w;\n          } else\n            c.selection.from !== m.selection.from && (h.keyboardHoveredItemIndex = 0);\n          return h;\n        }\n      },\n      props: {\n        handleKeyDown(a, d) {\n          const c = this.getState(a.state).active;\n          if (d.key === o && !c)\n            return a.dispatch(\n              a.state.tr.insertText(o).scrollIntoView().setMeta(t, {\n                activate: !0,\n                triggerCharacter: o\n              })\n            ), !0;\n          if (!c)\n            return !1;\n          const {\n            triggerCharacter: m,\n            queryStartPos: h,\n            items: p,\n            keyboardHoveredItemIndex: f\n          } = t.getState(a.state);\n          return d.key === \"ArrowUp\" ? (a.dispatch(\n            a.state.tr.setMeta(t, {\n              selectedItemIndexChanged: f - 1\n            })\n          ), !0) : d.key === \"ArrowDown\" ? (a.dispatch(\n            a.state.tr.setMeta(t, {\n              selectedItemIndexChanged: f + 1\n            })\n          ), !0) : d.key === \"Enter\" ? (l(a), n._tiptapEditor.chain().focus().deleteRange({\n            from: h - m.length,\n            to: n._tiptapEditor.state.selection.from\n          }).run(), i({\n            item: p[f],\n            editor: n\n          }), !0) : d.key === \"Escape\" ? (l(a), !0) : !1;\n        },\n        // Setup decorator on the currently active suggestion.\n        decorations(a) {\n          const { active: d, decorationId: c, queryStartPos: m, triggerCharacter: h } = this.getState(a);\n          if (!d)\n            return null;\n          if (h === \"\") {\n            const p = Xe(a.selection);\n            if (p)\n              return prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.DecorationSet.create(a.doc, [\n                prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.Decoration.node(\n                  p.pos,\n                  p.pos + p.node.nodeSize,\n                  {\n                    nodeName: \"span\",\n                    class: \"suggestion-decorator\",\n                    \"data-decoration-id\": c\n                  }\n                )\n              ]);\n          }\n          return prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.DecorationSet.create(a.doc, [\n            prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.Decoration.inline(\n              m - h.length,\n              m,\n              {\n                nodeName: \"span\",\n                class: \"suggestion-decorator\",\n                \"data-decoration-id\": c\n              }\n            )\n          ]);\n        }\n      }\n    }),\n    itemCallback: (a) => {\n      l(n._tiptapEditor.view), n._tiptapEditor.chain().focus().deleteRange({\n        from: s.pluginState.queryStartPos - s.pluginState.triggerCharacter.length,\n        to: n._tiptapEditor.state.selection.from\n      }).run(), i({\n        item: a,\n        editor: n\n      });\n    }\n  };\n}, tt = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"SlashMenuPlugin\");\nclass Je extends U {\n  constructor(t, o) {\n    super();\n    u(this, \"plugin\");\n    u(this, \"itemCallback\");\n    const r = Ye(\n      t,\n      (i) => {\n        this.emit(\"update\", i);\n      },\n      tt,\n      \"/\",\n      (i) => o.filter(\n        ({ name: s, aliases: l }) => s.toLowerCase().startsWith(i.toLowerCase()) || l && l.filter(\n          (a) => a.toLowerCase().startsWith(i.toLowerCase())\n        ).length !== 0\n      ),\n      ({ item: i, editor: s }) => i.execute(s)\n    );\n    this.plugin = r.plugin, this.itemCallback = r.itemCallback;\n  }\n  onUpdate(t) {\n    return this.on(\"update\", t);\n  }\n}\nconst Ze = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"blocknote-placeholder\"), Qe = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n  name: \"placeholder\",\n  addOptions() {\n    return {\n      emptyEditorClass: \"is-editor-empty\",\n      emptyNodeClass: \"is-empty\",\n      isFilterClass: \"is-filter\",\n      hasAnchorClass: \"has-anchor\",\n      placeholder: \"Write something …\",\n      showOnlyWhenEditable: !0,\n      showOnlyCurrent: !0,\n      includeChildren: !1\n    };\n  },\n  addProseMirrorPlugins() {\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n        key: Ze,\n        props: {\n          decorations: (n) => {\n            const { doc: e, selection: t } = n, o = tt.getState(n), r = this.editor.isEditable || !this.options.showOnlyWhenEditable, { anchor: i } = t, s = [];\n            if (r)\n              return e.descendants((l, a) => {\n                const d = i >= a && i <= a + l.nodeSize, c = !l.isLeaf && !l.childCount;\n                if ((d || !this.options.showOnlyCurrent) && c) {\n                  const m = [this.options.emptyNodeClass];\n                  this.editor.isEmpty && m.push(this.options.emptyEditorClass), d && m.push(this.options.hasAnchorClass), (o == null ? void 0 : o.triggerCharacter) === \"\" && (o != null && o.active) && m.push(this.options.isFilterClass);\n                  const h = prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.Decoration.node(a, a + l.nodeSize, {\n                    class: m.join(\" \")\n                  });\n                  s.push(h);\n                }\n                return this.options.includeChildren;\n              }), prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.DecorationSet.create(e, s);\n          }\n        }\n      })\n    ];\n  }\n}), to = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n  name: \"textAlignment\",\n  addGlobalAttributes() {\n    return [\n      {\n        // Attribute is applied to block content instead of container so that child blocks don't inherit the text\n        // alignment styling.\n        types: [\"paragraph\", \"heading\", \"bulletListItem\", \"numberedListItem\"],\n        attributes: {\n          textAlignment: {\n            default: \"left\",\n            parseHTML: (n) => n.getAttribute(\"data-text-alignment\"),\n            renderHTML: (n) => n.textAlignment !== \"left\" && {\n              \"data-text-alignment\": n.textAlignment\n            }\n          }\n        }\n      }\n    ];\n  },\n  addCommands() {\n    return {\n      setTextAlignment: (n) => ({ state: e }) => {\n        const t = [], o = b(\n          e.doc,\n          e.selection.from\n        );\n        if (o === void 0)\n          return !1;\n        let r = o.startPos;\n        for (; r < e.selection.to; )\n          e.doc.resolve(r).node().type.spec.group === \"blockContent\" ? (t.push(r - 1), r += e.doc.resolve(r).node().nodeSize - 1) : r += 1;\n        for (const i of t)\n          e.tr.setNodeAttribute(i, \"textAlignment\", n);\n        return !0;\n      }\n    };\n  }\n}), eo = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n  name: \"blockTextColor\",\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          textColor: {\n            default: C.textColor.default,\n            parseHTML: (n) => n.hasAttribute(\"data-text-color\") ? n.getAttribute(\"data-text-color\") : C.textColor.default,\n            renderHTML: (n) => n.textColor !== C.textColor.default && {\n              \"data-text-color\": n.textColor\n            }\n          }\n        }\n      }\n    ];\n  },\n  addCommands() {\n    return {\n      setBlockTextColor: (n, e) => ({ state: t, view: o }) => {\n        const r = b(t.doc, n);\n        return r === void 0 ? !1 : (t.tr.setNodeAttribute(r.startPos - 1, \"textColor\", e), o.focus(), !0);\n      }\n    };\n  }\n}), oo = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Mark.create({\n  name: \"textColor\",\n  addAttributes() {\n    return {\n      color: {\n        default: void 0,\n        parseHTML: (n) => n.getAttribute(\"data-text-color\"),\n        renderHTML: (n) => ({\n          \"data-text-color\": n.color\n        })\n      }\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (n) => typeof n == \"string\" ? !1 : n.hasAttribute(\"data-text-color\") ? { color: n.getAttribute(\"data-text-color\") } : !1\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: n }) {\n    return [\"span\", n, 0];\n  },\n  addCommands() {\n    return {\n      setTextColor: (n) => ({ commands: e }) => n !== C.textColor.default ? e.setMark(this.name, { color: n }) : e.unsetMark(this.name)\n    };\n  }\n}), no = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n  name: \"trailingNode\",\n  addProseMirrorPlugins() {\n    const n = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(this.name);\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n        key: n,\n        appendTransaction: (e, t, o) => {\n          const { doc: r, tr: i, schema: s } = o, l = n.getState(o), a = r.content.size - 2, d = s.nodes.blockContainer, c = s.nodes.paragraph;\n          if (l)\n            return i.insert(\n              a,\n              d.create(void 0, c.create())\n            );\n        },\n        state: {\n          init: (e, t) => {\n          },\n          apply: (e, t) => {\n            if (!e.docChanged)\n              return t;\n            let o = e.doc.lastChild;\n            if (!o || o.type.name !== \"blockGroup\")\n              throw new Error(\"Expected blockGroup\");\n            if (o = o.lastChild, !o || o.type.name !== \"blockContainer\")\n              throw new Error(\"Expected blockContainer\");\n            const r = o.firstChild;\n            if (!r)\n              throw new Error(\"Expected blockContent\");\n            return o.nodeSize > 4 || r.type.spec.content !== \"inline*\";\n          }\n        }\n      })\n    ];\n  }\n}), ro = (n) => {\n  var t;\n  const e = [\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.extensions.ClipboardTextSerializer,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.extensions.Commands,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.extensions.Editable,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.extensions.FocusEvents,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.extensions.Tabindex,\n    // DevTools,\n    _tiptap_extension_gapcursor__WEBPACK_IMPORTED_MODULE_5__.Gapcursor,\n    // DropCursor,\n    Qe.configure({\n      emptyNodeClass: g.isEmpty,\n      hasAnchorClass: g.hasAnchor,\n      isFilterClass: g.isFilter,\n      includeChildren: !0,\n      showOnlyCurrent: !1\n    }),\n    j.configure({\n      types: [\"blockContainer\"]\n    }),\n    _tiptap_extension_hard_break__WEBPACK_IMPORTED_MODULE_6__.HardBreak,\n    // Comments,\n    // basics:\n    _tiptap_extension_text__WEBPACK_IMPORTED_MODULE_11__.Text,\n    // marks:\n    _tiptap_extension_bold__WEBPACK_IMPORTED_MODULE_0__.Bold,\n    _tiptap_extension_code__WEBPACK_IMPORTED_MODULE_1__.Code,\n    _tiptap_extension_italic__WEBPACK_IMPORTED_MODULE_8__.Italic,\n    _tiptap_extension_strike__WEBPACK_IMPORTED_MODULE_10__.Strike,\n    _tiptap_extension_underline__WEBPACK_IMPORTED_MODULE_12__.Underline,\n    _tiptap_extension_link__WEBPACK_IMPORTED_MODULE_9__.Link,\n    oo,\n    eo,\n    _e,\n    Ae,\n    to,\n    // nodes\n    Ge,\n    We.configure({\n      domAttributes: n.domAttributes\n    }),\n    $e.configure({\n      domAttributes: n.domAttributes\n    }),\n    ...Object.values(n.blockSchema).map(\n      (o) => o.node.configure({\n        editor: n.editor,\n        domAttributes: n.domAttributes\n      })\n    ),\n    qe,\n    _tiptap_extension_dropcursor__WEBPACK_IMPORTED_MODULE_4__.Dropcursor.configure({ width: 5, color: \"#ddeeff\" }),\n    // This needs to be at the bottom of this list, because Key events (such as enter, when selecting a /command),\n    // should be handled before Enter handlers in other components like splitListItem\n    no\n  ];\n  if (n.collaboration) {\n    if (e.push(\n      _tiptap_extension_collaboration__WEBPACK_IMPORTED_MODULE_2__[\"default\"].configure({\n        fragment: n.collaboration.fragment\n      })\n    ), (t = n.collaboration.provider) != null && t.awareness) {\n      const o = (r) => {\n        const i = document.createElement(\"span\");\n        i.classList.add(D[\"collaboration-cursor__caret\"]), i.setAttribute(\"style\", `border-color: ${r.color}`);\n        const s = document.createElement(\"span\");\n        s.classList.add(D[\"collaboration-cursor__label\"]), s.setAttribute(\"style\", `background-color: ${r.color}`), s.insertBefore(document.createTextNode(r.name), null);\n        const l = document.createTextNode(\"⁠\"), a = document.createTextNode(\"⁠\");\n        return i.insertBefore(l, null), i.insertBefore(s, null), i.insertBefore(a, null), i;\n      };\n      e.push(\n        _tiptap_extension_collaboration_cursor__WEBPACK_IMPORTED_MODULE_3__[\"default\"].configure({\n          user: n.collaboration.user,\n          render: n.collaboration.renderCursor || o,\n          provider: n.collaboration.provider\n        })\n      );\n    }\n  } else\n    e.push(_tiptap_extension_history__WEBPACK_IMPORTED_MODULE_7__.History);\n  return e;\n};\nfunction et(n, e) {\n  let t, o;\n  if (e.firstChild.descendants((r, i) => t ? !1 : r.type.name !== \"blockContainer\" || r.attrs.id !== n ? !0 : (t = r, o = i + 1, !1)), t === void 0 || o === void 0)\n    throw Error(\"Could not find block in the editor with matching ID.\");\n  return {\n    node: t,\n    posBeforeNode: o\n  };\n}\nfunction Ut(n, e, t = \"before\", o) {\n  const r = typeof e == \"string\" ? e : e.id, i = [];\n  for (const d of n)\n    i.push(V(d, o.schema));\n  let s = -1;\n  const { node: l, posBeforeNode: a } = et(r, o.state.doc);\n  if (t === \"before\" && (s = a), t === \"after\" && (s = a + l.nodeSize), t === \"nested\") {\n    if (l.childCount < 2) {\n      s = a + l.firstChild.nodeSize + 1;\n      const d = o.state.schema.nodes.blockGroup.create(\n        {},\n        i\n      );\n      o.view.dispatch(\n        o.state.tr.insert(s, d)\n      );\n      return;\n    }\n    s = a + l.firstChild.nodeSize + 2;\n  }\n  o.view.dispatch(o.state.tr.insert(s, i));\n}\nfunction io(n, e, t) {\n  const o = typeof n == \"string\" ? n : n.id, { posBeforeNode: r } = et(o, t.state.doc);\n  t.commands.BNUpdateBlock(r + 1, e);\n}\nfunction Ft(n, e) {\n  const t = new Set(\n    n.map(\n      (r) => typeof r == \"string\" ? r : r.id\n    )\n  );\n  let o = 0;\n  if (e.state.doc.descendants((r, i) => {\n    if (t.size === 0)\n      return !1;\n    if (r.type.name !== \"blockContainer\" || !t.has(r.attrs.id))\n      return !0;\n    t.delete(r.attrs.id);\n    const s = e.state.doc.nodeSize;\n    e.commands.BNDeleteBlock(i - o + 1);\n    const l = e.state.doc.nodeSize;\n    return o += s - l, !1;\n  }), t.size > 0) {\n    const r = [...t].join(`\n`);\n    throw Error(\n      \"Blocks with the following IDs could not be found in the editor: \" + r\n    );\n  }\n}\nfunction so(n, e, t) {\n  Ut(e, n[0], \"before\", t), Ft(n, t);\n}\nfunction ao() {\n  const n = (e) => {\n    let t = e.children.length;\n    for (let o = 0; o < t; o++) {\n      const r = e.children[o];\n      if (r.type === \"element\" && (n(r), r.tagName === \"u\"))\n        if (r.children.length > 0) {\n          e.children.splice(o, 1, ...r.children);\n          const i = r.children.length - 1;\n          t += i, o += i;\n        } else\n          e.children.splice(o, 1), t--, o--;\n    }\n  };\n  return n;\n}\nfunction lo(n) {\n  const e = /* @__PURE__ */ new Set([\n    ...n.orderedListItemBlockTypes,\n    ...n.unorderedListItemBlockTypes\n  ]), t = (o) => {\n    let r = o.children.length, i;\n    for (let s = 0; s < r; s++) {\n      const a = o.children[s].children[0], d = a.children[0], c = a.children.length === 2 ? a.children[1] : null, m = e.has(\n        d.properties.dataContentType\n      ), h = m ? n.orderedListItemBlockTypes.has(\n        d.properties.dataContentType\n      ) ? \"ol\" : \"ul\" : null;\n      if (c !== null && t(c), i && i.tagName !== h) {\n        o.children.splice(\n          s - i.children.length,\n          i.children.length,\n          i\n        );\n        const p = i.children.length - 1;\n        s -= p, r -= p, i = void 0;\n      }\n      if (m) {\n        i || (i = (0,hast_util_from_dom__WEBPACK_IMPORTED_MODULE_18__.fromDom)(\n          document.createElement(h)\n        ));\n        const p = (0,hast_util_from_dom__WEBPACK_IMPORTED_MODULE_18__.fromDom)(\n          document.createElement(\"li\")\n        );\n        p.children.push(d.children[0]), c !== null && p.children.push(...c.children), i.children.push(p);\n      } else if (c !== null) {\n        o.children.splice(s + 1, 0, ...c.children), o.children[s] = d.children[0];\n        const p = c.children.length;\n        s += p, r += p;\n      } else\n        o.children[s] = d.children[0];\n    }\n    i && o.children.splice(\n      r - i.children.length,\n      i.children.length,\n      i\n    );\n  };\n  return t;\n}\nasync function Wt(n, e) {\n  const t = document.createElement(\"div\"), o = prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.DOMSerializer.fromSchema(e);\n  for (const i of n) {\n    const s = V(i, e), l = o.serializeNode(s);\n    t.appendChild(l);\n  }\n  return (await (0,unified__WEBPACK_IMPORTED_MODULE_19__.unified)().use(rehype_parse__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { fragment: !0 }).use(lo, {\n    orderedListItemBlockTypes: /* @__PURE__ */ new Set([\"numberedListItem\"]),\n    unorderedListItemBlockTypes: /* @__PURE__ */ new Set([\"bulletListItem\"])\n  }).use(rehype_stringify__WEBPACK_IMPORTED_MODULE_21__[\"default\"]).process(t.innerHTML)).value;\n}\nasync function $t(n, e, t) {\n  const o = document.createElement(\"div\");\n  o.innerHTML = n.trim();\n  const i = prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.DOMParser.fromSchema(t).parse(o), s = [];\n  for (let l = 0; l < i.firstChild.childCount; l++)\n    s.push(x(i.firstChild.child(l), e));\n  return s;\n}\nasync function co(n, e) {\n  return (await (0,unified__WEBPACK_IMPORTED_MODULE_19__.unified)().use(rehype_parse__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { fragment: !0 }).use(ao).use(rehype_remark__WEBPACK_IMPORTED_MODULE_22__[\"default\"]).use(remark_gfm__WEBPACK_IMPORTED_MODULE_23__[\"default\"]).use(remark_stringify__WEBPACK_IMPORTED_MODULE_24__[\"default\"]).process(await Wt(n, e))).value;\n}\nfunction uo(n, e) {\n  const t = e.value ? e.value + `\n` : \"\", o = {};\n  e.lang && (o[\"data-language\"] = e.lang);\n  let r = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: o,\n    children: [{ type: \"text\", value: t }]\n  };\n  return e.meta && (r.data = { meta: e.meta }), n.patch(e, r), r = n.applyData(e, r), r = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {},\n    children: [r]\n  }, n.patch(e, r), r;\n}\nasync function po(n, e, t) {\n  const o = await (0,unified__WEBPACK_IMPORTED_MODULE_19__.unified)().use(remark_parse__WEBPACK_IMPORTED_MODULE_25__[\"default\"]).use(remark_gfm__WEBPACK_IMPORTED_MODULE_23__[\"default\"]).use(remark_rehype__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n    handlers: {\n      ...remark_rehype__WEBPACK_IMPORTED_MODULE_27__.handlers,\n      code: uo\n    }\n  }).use(rehype_stringify__WEBPACK_IMPORTED_MODULE_21__[\"default\"]).process(n);\n  return $t(o.value, e, t);\n}\nfunction dt(n) {\n  return \"data-\" + n.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nfunction ho(n) {\n  const e = {};\n  return Object.entries(n.propSchema).forEach(([t, o]) => {\n    e[t] = {\n      default: o.default,\n      keepOnSplit: !0,\n      // Props are displayed in kebab-case as HTML attributes. If a prop's\n      // value is the same as its default, we don't display an HTML\n      // attribute for it.\n      parseHTML: (r) => r.getAttribute(dt(t)),\n      renderHTML: (r) => r[t] !== o.default ? {\n        [dt(t)]: r[t]\n      } : {}\n    };\n  }), e;\n}\nfunction mo(n) {\n  return [\n    {\n      tag: \"div[data-content-type=\" + n.type + \"]\"\n    }\n  ];\n}\nfunction fo(n, e) {\n  const t = document.createElement(\"div\");\n  t.setAttribute(\"data-content-type\", n.type);\n  for (const [r, i] of Object.entries(e))\n    t.setAttribute(r, i);\n  let o;\n  return n.containsInlineContent ? (o = document.createElement(\"div\"), t.appendChild(o)) : o = void 0, o !== void 0 ? {\n    dom: t,\n    contentDOM: o\n  } : {\n    dom: t\n  };\n}\nfunction go(n) {\n  return {\n    node: F({\n      name: n.type,\n      content: n.containsInlineContent ? \"inline*\" : \"\",\n      selectable: !0,\n      addAttributes() {\n        return ho(n);\n      },\n      parseHTML() {\n        return mo(n);\n      },\n      renderHTML({ HTMLAttributes: t }) {\n        return fo(n, t);\n      },\n      addNodeView() {\n        return ({ HTMLAttributes: t, getPos: o }) => {\n          var p, f;\n          const r = document.createElement(\"div\"), i = ((p = this.options.domAttributes) == null ? void 0 : p.blockContent) || {};\n          for (const [k, v] of Object.entries(\n            i\n          ))\n            k !== \"class\" && r.setAttribute(k, v);\n          r.className = S(\n            g.blockContent,\n            i.class\n          ), r.setAttribute(\"data-content-type\", n.type);\n          for (const [k, v] of Object.entries(t))\n            r.setAttribute(k, v);\n          const s = this.options.editor;\n          if (typeof o == \"boolean\")\n            throw new Error(\n              \"Cannot find node position as getPos is a boolean, not a function.\"\n            );\n          const l = o(), c = s._tiptapEditor.state.doc.resolve(l).node().attrs.id, m = s.getBlock(c);\n          if (m.type !== n.type)\n            throw new Error(\"Block type does not match\");\n          const h = n.render(m, s);\n          if (n.containsInlineContent) {\n            const k = h.contentDOM, v = ((f = this.options.domAttributes) == null ? void 0 : f.inlineContent) || {};\n            for (const [w, E] of Object.entries(\n              v\n            ))\n              w !== \"class\" && k.setAttribute(w, E);\n            k.className = S(\n              k.className,\n              g.inlineContent,\n              v.class\n            );\n          }\n          return r.appendChild(h.dom), \"contentDOM\" in h ? {\n            dom: r,\n            contentDOM: h.contentDOM,\n            destroy: h.destroy\n          } : {\n            dom: r,\n            destroy: h.destroy\n          };\n        };\n      }\n    }),\n    propSchema: n.propSchema\n  };\n}\nfunction F(n) {\n  return _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Node.create({\n    ...n,\n    group: \"blockContent\",\n    content: n.content\n  });\n}\nconst ko = {\n  ...C,\n  level: { default: 1, values: [1, 2, 3] }\n}, bo = F({\n  name: \"heading\",\n  content: \"inline*\",\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        // instead of \"level\" attributes, use \"data-level\"\n        parseHTML: (n) => n.getAttribute(\"data-level\"),\n        renderHTML: (n) => ({\n          \"data-level\": n.level.toString()\n        })\n      }\n    };\n  },\n  addInputRules() {\n    return [\n      ...[1, 2, 3].map((n) => new _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.InputRule({\n        find: new RegExp(`^(#{${n}})\\\\s$`),\n        handler: ({ state: e, chain: t, range: o }) => {\n          t().BNUpdateBlock(e.selection.from, {\n            type: \"heading\",\n            props: {\n              level: n\n            }\n          }).deleteRange({ from: o.from, to: o.to });\n        }\n      }))\n    ];\n  },\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-Alt-1\": () => this.editor.commands.BNUpdateBlock(this.editor.state.selection.anchor, {\n        type: \"heading\",\n        props: {\n          level: 1\n        }\n      }),\n      \"Mod-Alt-2\": () => this.editor.commands.BNUpdateBlock(this.editor.state.selection.anchor, {\n        type: \"heading\",\n        props: {\n          level: 2\n        }\n      }),\n      \"Mod-Alt-3\": () => this.editor.commands.BNUpdateBlock(this.editor.state.selection.anchor, {\n        type: \"heading\",\n        props: {\n          level: 3\n        }\n      })\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"h1\",\n        attrs: { level: 1 },\n        node: \"heading\"\n      },\n      {\n        tag: \"h2\",\n        attrs: { level: 2 },\n        node: \"heading\"\n      },\n      {\n        tag: \"h3\",\n        attrs: { level: 3 },\n        node: \"heading\"\n      }\n    ];\n  },\n  renderHTML({ node: n, HTMLAttributes: e }) {\n    var r, i;\n    const t = ((r = this.options.domAttributes) == null ? void 0 : r.blockContent) || {}, o = ((i = this.options.domAttributes) == null ? void 0 : i.inlineContent) || {};\n    return [\n      \"div\",\n      (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.mergeAttributes)(e, {\n        ...t,\n        class: S(\n          g.blockContent,\n          t.class\n        ),\n        \"data-content-type\": this.name\n      }),\n      [\n        `h${n.attrs.level}`,\n        {\n          ...o,\n          class: S(\n            g.inlineContent,\n            o.class\n          )\n        },\n        0\n      ]\n    ];\n  }\n}), yo = {\n  node: bo,\n  propSchema: ko\n}, Gt = (n) => {\n  const { node: e, contentType: t } = b(\n    n.state.doc,\n    n.state.selection.from\n  ), o = n.state.selection.anchor === n.state.selection.head;\n  return !t.name.endsWith(\"ListItem\") || !o ? !1 : n.commands.first(({ state: r, chain: i, commands: s }) => [\n    () => (\n      // Changes list item block to a text block if the content is empty.\n      s.command(() => e.textContent.length === 0 ? s.BNUpdateBlock(r.selection.from, {\n        type: \"paragraph\",\n        props: {}\n      }) : !1)\n    ),\n    () => (\n      // Splits the current block, moving content inside that's after the cursor to a new block of the same type\n      // below.\n      s.command(() => e.textContent.length > 0 ? (i().deleteSelection().BNSplitBlock(r.selection.from, !0).run(), !0) : !1)\n    )\n  ]);\n}, vo = {\n  ...C\n}, wo = F({\n  name: \"bulletListItem\",\n  content: \"inline*\",\n  addInputRules() {\n    return [\n      // Creates an unordered list when starting with \"-\", \"+\", or \"*\".\n      new _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.InputRule({\n        find: new RegExp(\"^[-+*]\\\\s$\"),\n        handler: ({ state: n, chain: e, range: t }) => {\n          e().BNUpdateBlock(n.selection.from, {\n            type: \"bulletListItem\",\n            props: {}\n          }).deleteRange({ from: t.from, to: t.to });\n        }\n      })\n    ];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => Gt(this.editor),\n      \"Mod-Shift-7\": () => this.editor.commands.BNUpdateBlock(this.editor.state.selection.anchor, {\n        type: \"bulletListItem\",\n        props: {}\n      })\n    };\n  },\n  parseHTML() {\n    return [\n      // Case for regular HTML list structure.\n      {\n        tag: \"li\",\n        getAttrs: (n) => {\n          if (typeof n == \"string\")\n            return !1;\n          const e = n.parentElement;\n          return e === null ? !1 : e.tagName === \"UL\" ? {} : !1;\n        },\n        node: \"bulletListItem\"\n      },\n      // Case for BlockNote list structure.\n      {\n        tag: \"p\",\n        getAttrs: (n) => {\n          if (typeof n == \"string\")\n            return !1;\n          const e = n.parentElement;\n          return e === null ? !1 : e.getAttribute(\"data-content-type\") === \"bulletListItem\" ? {} : !1;\n        },\n        priority: 300,\n        node: \"bulletListItem\"\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: n }) {\n    var o, r;\n    const e = ((o = this.options.domAttributes) == null ? void 0 : o.blockContent) || {}, t = ((r = this.options.domAttributes) == null ? void 0 : r.inlineContent) || {};\n    return [\n      \"div\",\n      (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.mergeAttributes)(n, {\n        ...e,\n        class: S(\n          g.blockContent,\n          e.class\n        ),\n        \"data-content-type\": this.name\n      }),\n      [\n        \"p\",\n        {\n          ...t,\n          class: S(\n            g.inlineContent,\n            t.class\n          )\n        },\n        0\n      ]\n    ];\n  }\n}), Co = {\n  node: wo,\n  propSchema: vo\n}, Eo = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"numbered-list-indexing\"), So = () => new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n  key: Eo,\n  appendTransaction: (n, e, t) => {\n    const o = t.tr;\n    o.setMeta(\"numberedListIndexing\", !0);\n    let r = !1;\n    return t.doc.descendants((i, s) => {\n      if (i.type.name === \"blockContainer\" && i.firstChild.type.name === \"numberedListItem\") {\n        let l = \"1\";\n        const a = s === 1, d = b(o.doc, s + 1);\n        if (d === void 0)\n          return;\n        if (!a) {\n          const h = b(o.doc, s - 2);\n          if (h === void 0)\n            return;\n          if (!(d.depth !== h.depth)) {\n            const f = h.contentNode;\n            if (h.contentType.name === \"numberedListItem\") {\n              const w = f.attrs.index;\n              l = (parseInt(w) + 1).toString();\n            }\n          }\n        }\n        d.contentNode.attrs.index !== l && (r = !0, o.setNodeMarkup(s + 1, void 0, {\n          index: l\n        }));\n      }\n    }), r ? o : null;\n  }\n}), To = {\n  ...C\n}, Mo = F({\n  name: \"numberedListItem\",\n  content: \"inline*\",\n  addAttributes() {\n    return {\n      index: {\n        default: null,\n        parseHTML: (n) => n.getAttribute(\"data-index\"),\n        renderHTML: (n) => ({\n          \"data-index\": n.index\n        })\n      }\n    };\n  },\n  addInputRules() {\n    return [\n      // Creates an ordered list when starting with \"1.\".\n      new _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.InputRule({\n        find: new RegExp(\"^1\\\\.\\\\s$\"),\n        handler: ({ state: n, chain: e, range: t }) => {\n          e().BNUpdateBlock(n.selection.from, {\n            type: \"numberedListItem\",\n            props: {}\n          }).deleteRange({ from: t.from, to: t.to });\n        }\n      })\n    ];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => Gt(this.editor),\n      \"Mod-Shift-8\": () => this.editor.commands.BNUpdateBlock(this.editor.state.selection.anchor, {\n        type: \"numberedListItem\",\n        props: {}\n      })\n    };\n  },\n  addProseMirrorPlugins() {\n    return [So()];\n  },\n  parseHTML() {\n    return [\n      // Case for regular HTML list structure.\n      // (e.g.: when pasting from other apps)\n      {\n        tag: \"li\",\n        getAttrs: (n) => {\n          if (typeof n == \"string\")\n            return !1;\n          const e = n.parentElement;\n          return e === null ? !1 : e.tagName === \"OL\" ? {} : !1;\n        },\n        node: \"numberedListItem\"\n      },\n      // Case for BlockNote list structure.\n      // (e.g.: when pasting from blocknote)\n      {\n        tag: \"p\",\n        getAttrs: (n) => {\n          if (typeof n == \"string\")\n            return !1;\n          const e = n.parentElement;\n          return e === null ? !1 : e.getAttribute(\"data-content-type\") === \"numberedListItem\" ? {} : !1;\n        },\n        priority: 300,\n        node: \"numberedListItem\"\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: n }) {\n    var o, r;\n    const e = ((o = this.options.domAttributes) == null ? void 0 : o.blockContent) || {}, t = ((r = this.options.domAttributes) == null ? void 0 : r.inlineContent) || {};\n    return [\n      \"div\",\n      (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.mergeAttributes)(n, {\n        ...e,\n        class: S(\n          g.blockContent,\n          e.class\n        ),\n        \"data-content-type\": this.name\n      }),\n      // we use a <p> tag, because for <li> tags we'd need to add a <ul> parent for around siblings to be semantically correct,\n      // which would be quite cumbersome\n      [\n        \"p\",\n        {\n          ...t,\n          class: S(\n            g.inlineContent,\n            t.class\n          )\n        },\n        0\n      ]\n    ];\n  }\n}), Bo = {\n  node: Mo,\n  propSchema: To\n}, xo = {\n  ...C\n}, Io = F({\n  name: \"paragraph\",\n  content: \"inline*\",\n  parseHTML() {\n    return [\n      {\n        tag: \"p\",\n        priority: 200,\n        node: \"paragraph\"\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: n }) {\n    var o, r;\n    const e = ((o = this.options.domAttributes) == null ? void 0 : o.blockContent) || {}, t = ((r = this.options.domAttributes) == null ? void 0 : r.inlineContent) || {};\n    return [\n      \"div\",\n      (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.mergeAttributes)(\n        {\n          ...e,\n          class: S(\n            g.blockContent,\n            e.class\n          ),\n          \"data-content-type\": this.name\n        },\n        n\n      ),\n      [\n        \"p\",\n        {\n          ...t,\n          class: S(\n            g.inlineContent,\n            t.class\n          )\n        },\n        0\n      ]\n    ];\n  }\n}), Ao = {\n  node: Io,\n  propSchema: xo\n};\nclass _o {\n  constructor(e, t, o) {\n    u(this, \"imageToolbarState\");\n    u(this, \"updateImageToolbar\");\n    u(this, \"prevWasEditable\", null);\n    u(this, \"shouldShow\", (e) => \"node\" in e.selection && e.selection.node.type.name === \"image\" && e.selection.node.attrs.src === \"\");\n    u(this, \"mouseDownHandler\", () => {\n      var e;\n      (e = this.imageToolbarState) != null && e.show && (this.imageToolbarState.show = !1, this.updateImageToolbar());\n    });\n    // For dragging the whole editor.\n    u(this, \"dragstartHandler\", () => {\n      var e;\n      (e = this.imageToolbarState) != null && e.show && (this.imageToolbarState.show = !1, this.updateImageToolbar());\n    });\n    u(this, \"blurHandler\", (e) => {\n      var o;\n      const t = this.pmView.dom.parentElement;\n      // An element is clicked.\n      e && e.relatedTarget && // Element is inside the editor.\n      (t === e.relatedTarget || t.contains(e.relatedTarget)) || (o = this.imageToolbarState) != null && o.show && (this.imageToolbarState.show = !1, this.updateImageToolbar());\n    });\n    u(this, \"scrollHandler\", () => {\n      var e;\n      if ((e = this.imageToolbarState) != null && e.show) {\n        const t = document.querySelector(\n          `[data-node-type=\"blockContainer\"][data-id=\"${this.imageToolbarState.block.id}\"]`\n        );\n        this.imageToolbarState.referencePos = t.getBoundingClientRect(), this.updateImageToolbar();\n      }\n    });\n    this.pluginKey = e, this.pmView = t, this.updateImageToolbar = () => {\n      if (!this.imageToolbarState)\n        throw new Error(\"Attempting to update uninitialized image toolbar\");\n      o(this.imageToolbarState);\n    }, t.dom.addEventListener(\"mousedown\", this.mouseDownHandler), t.dom.addEventListener(\"dragstart\", this.dragstartHandler), t.dom.addEventListener(\"blur\", this.blurHandler), document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n  update(e, t) {\n    var r, i;\n    const o = this.pluginKey.getState(e.state);\n    if (!((r = this.imageToolbarState) != null && r.show) && o.block) {\n      const s = document.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${o.block.id}\"]`\n      );\n      this.imageToolbarState = {\n        show: !0,\n        referencePos: s.getBoundingClientRect(),\n        block: o.block\n      }, this.updateImageToolbar();\n      return;\n    }\n    (!e.state.selection.eq(t.selection) || !e.state.doc.eq(t.doc)) && (i = this.imageToolbarState) != null && i.show && (this.imageToolbarState.show = !1, this.updateImageToolbar());\n  }\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.mouseDownHandler), this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler), this.pmView.dom.removeEventListener(\"blur\", this.blurHandler), document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n}\nconst z = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"ImageToolbarPlugin\");\nclass Ho extends U {\n  constructor(t) {\n    super();\n    u(this, \"view\");\n    u(this, \"plugin\");\n    this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n      key: z,\n      view: (o) => (this.view = new _o(\n        // editor,\n        z,\n        o,\n        (r) => {\n          this.emit(\"update\", r);\n        }\n      ), this.view),\n      state: {\n        init: () => ({\n          block: void 0\n        }),\n        apply: (o) => {\n          var i;\n          return {\n            block: (i = o.getMeta(z)) == null ? void 0 : i.block\n          };\n        }\n      }\n    });\n  }\n  onUpdate(t) {\n    return this.on(\"update\", t);\n  }\n}\nconst Lo = {\n  textAlignment: C.textAlignment,\n  backgroundColor: C.backgroundColor,\n  // Image url.\n  url: {\n    default: \"\"\n  },\n  // Image caption.\n  caption: {\n    default: \"\"\n  },\n  // Image width in px.\n  width: {\n    default: 512\n  }\n}, ct = (n) => {\n  switch (n) {\n    case \"left\":\n      return \"flex-start\";\n    case \"center\":\n      return \"center\";\n    case \"right\":\n      return \"flex-end\";\n    default:\n      return \"flex-start\";\n  }\n}, ut = 64, No = (n, e) => {\n  const t = document.createElement(\"div\");\n  t.className = g.wrapper, t.style.alignItems = ct(\n    n.props.textAlignment\n  );\n  const o = document.createElement(\"div\");\n  o.className = g.addImageButton, o.style.display = n.props.url === \"\" ? \"\" : \"none\";\n  const r = document.createElement(\"div\");\n  r.className = g.addImageButtonIcon;\n  const i = document.createElement(\"p\");\n  i.className = g.addImageButtonText, i.innerText = \"Add Image\";\n  const s = document.createElement(\"div\");\n  s.className = g.imageAndCaptionWrapper, s.style.display = n.props.url !== \"\" ? \"\" : \"none\";\n  const l = document.createElement(\"div\");\n  l.className = g.imageWrapper, l.style.display = n.props.url !== \"\" ? \"\" : \"none\";\n  const a = document.createElement(\"img\");\n  a.className = g.image, a.src = n.props.url, a.alt = \"placeholder\", a.contentEditable = \"false\", a.draggable = !1, a.style.width = `${Math.min(\n    n.props.width,\n    e.domElement.firstElementChild.clientWidth\n  )}px`;\n  const d = document.createElement(\"div\");\n  d.className = g.resizeHandle, d.style.left = \"4px\";\n  const c = document.createElement(\"div\");\n  c.className = g.resizeHandle, c.style.right = \"4px\";\n  const m = document.createElement(\"p\");\n  m.className = g.caption, m.innerText = n.props.caption, m.style.padding = n.props.caption ? \"4px\" : \"\";\n  const h = () => {\n    var q;\n    const y = ((q = e.getSelection()) == null ? void 0 : q.blocks) || [];\n    [e.getTextCursorPosition().block, ...y].find(\n      (Kt) => Kt.id === n.id\n    ) !== void 0 ? (o.style.outline = \"4px solid rgb(100, 160, 255)\", s.style.outline = \"4px solid rgb(100, 160, 255)\") : (o.style.outline = \"\", s.style.outline = \"\");\n  };\n  e.onEditorContentChange(h), e.onEditorSelectionChange(h);\n  let p;\n  const f = (y) => {\n    if (!p)\n      return;\n    let M;\n    ct(n.props.textAlignment) === \"center\" ? p.handleUsed === \"left\" ? M = p.initialWidth + (p.initialClientX - y.clientX) * 2 : M = p.initialWidth + (y.clientX - p.initialClientX) * 2 : p.handleUsed === \"left\" ? M = p.initialWidth + p.initialClientX - y.clientX : M = p.initialWidth + y.clientX - p.initialClientX, M < ut ? a.style.width = `${ut}px` : M > e.domElement.firstElementChild.clientWidth ? a.style.width = `${e.domElement.firstElementChild.clientWidth}px` : a.style.width = `${M}px`;\n  }, k = (y) => {\n    p && ((!y.target || !l.contains(y.target)) && l.contains(d) && l.contains(c) && (d.style.display = \"none\", c.style.display = \"none\"), p = void 0, e.updateBlock(n, {\n      type: \"image\",\n      props: {\n        // Removes \"px\" from the end of the width string and converts to float.\n        width: parseFloat(a.style.width.slice(0, -2))\n      }\n    }));\n  }, v = (y) => {\n    y.preventDefault();\n  }, w = () => {\n    e._tiptapEditor.view.dispatch(\n      e._tiptapEditor.state.tr.setMeta(z, {\n        block: n\n      })\n    );\n  }, E = (y) => {\n    y.preventDefault(), d.style.display = \"block\", c.style.display = \"block\", p = {\n      handleUsed: \"left\",\n      initialWidth: n.props.width,\n      initialClientX: y.clientX\n    };\n  }, _ = (y) => {\n    y.preventDefault(), d.style.display = \"block\", c.style.display = \"block\", p = {\n      handleUsed: \"right\",\n      initialWidth: n.props.width,\n      initialClientX: y.clientX\n    };\n  };\n  return t.appendChild(o), o.appendChild(r), o.appendChild(i), t.appendChild(s), s.appendChild(l), l.appendChild(a), l.appendChild(d), l.appendChild(c), s.appendChild(m), window.addEventListener(\"mousemove\", f), window.addEventListener(\"mouseup\", k), o.addEventListener(\"mousedown\", v), o.addEventListener(\"click\", w), d.addEventListener(\n    \"mousedown\",\n    E\n  ), c.addEventListener(\n    \"mousedown\",\n    _\n  ), {\n    dom: t,\n    destroy: () => {\n      window.removeEventListener(\"mousemove\", f), window.removeEventListener(\"mouseup\", k), o.removeEventListener(\n        \"mousedown\",\n        v\n      ), o.removeEventListener(\"click\", w), d.removeEventListener(\n        \"mousedown\",\n        E\n      ), c.removeEventListener(\n        \"mousedown\",\n        _\n      );\n    }\n  };\n}, Po = go({\n  type: \"image\",\n  propSchema: Lo,\n  containsInlineContent: !1,\n  render: No\n}), jt = {\n  paragraph: Ao,\n  heading: yo,\n  bulletListItem: Co,\n  numberedListItem: Bo,\n  image: Po\n};\nclass Do {\n  constructor(e, t, o) {\n    u(this, \"formattingToolbarState\");\n    u(this, \"updateFormattingToolbar\");\n    u(this, \"preventHide\", !1);\n    u(this, \"preventShow\", !1);\n    u(this, \"prevWasEditable\", null);\n    u(this, \"shouldShow\", ({ view: e, state: t, from: o, to: r }) => {\n      const { doc: i, selection: s } = t, { empty: l } = s, a = !i.textBetween(o, r).length && (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.isTextSelection)(t.selection);\n      return !(!e.hasFocus() || l || a);\n    });\n    u(this, \"viewMousedownHandler\", () => {\n      this.preventShow = !0;\n    });\n    u(this, \"viewMouseupHandler\", () => {\n      this.preventShow = !1, setTimeout(() => this.update(this.pmView));\n    });\n    // For dragging the whole editor.\n    u(this, \"dragstartHandler\", () => {\n      var e;\n      (e = this.formattingToolbarState) != null && e.show && (this.formattingToolbarState.show = !1, this.updateFormattingToolbar());\n    });\n    u(this, \"focusHandler\", () => {\n      setTimeout(() => this.update(this.pmView));\n    });\n    u(this, \"blurHandler\", (e) => {\n      var o;\n      if (this.preventHide) {\n        this.preventHide = !1;\n        return;\n      }\n      const t = this.pmView.dom.parentElement;\n      // An element is clicked.\n      e && e.relatedTarget && // Element is inside the editor.\n      (t === e.relatedTarget || t.contains(e.relatedTarget)) || (o = this.formattingToolbarState) != null && o.show && (this.formattingToolbarState.show = !1, this.updateFormattingToolbar());\n    });\n    u(this, \"scrollHandler\", () => {\n      var e;\n      (e = this.formattingToolbarState) != null && e.show && (this.formattingToolbarState.referencePos = this.getSelectionBoundingBox(), this.updateFormattingToolbar());\n    });\n    this.editor = e, this.pmView = t, this.updateFormattingToolbar = () => {\n      if (!this.formattingToolbarState)\n        throw new Error(\n          \"Attempting to update uninitialized formatting toolbar\"\n        );\n      o(this.formattingToolbarState);\n    }, t.dom.addEventListener(\"mousedown\", this.viewMousedownHandler), t.dom.addEventListener(\"mouseup\", this.viewMouseupHandler), t.dom.addEventListener(\"dragstart\", this.dragstartHandler), t.dom.addEventListener(\"focus\", this.focusHandler), t.dom.addEventListener(\"blur\", this.blurHandler), document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n  update(e, t) {\n    var h, p;\n    const { state: o, composing: r } = e, { doc: i, selection: s } = o, l = t && t.doc.eq(i) && t.selection.eq(s);\n    if ((this.prevWasEditable === null || this.prevWasEditable === this.editor.isEditable) && (r || l))\n      return;\n    this.prevWasEditable = this.editor.isEditable;\n    const { ranges: a } = s, d = Math.min(...a.map((f) => f.$from.pos)), c = Math.max(...a.map((f) => f.$to.pos)), m = (h = this.shouldShow) == null ? void 0 : h.call(this, {\n      view: e,\n      state: o,\n      from: d,\n      to: c\n    });\n    if (this.editor.isEditable && !this.preventShow && (m || this.preventHide)) {\n      this.formattingToolbarState = {\n        show: !0,\n        referencePos: this.getSelectionBoundingBox()\n      }, this.updateFormattingToolbar();\n      return;\n    }\n    if ((p = this.formattingToolbarState) != null && p.show && !this.preventHide && (!m || this.preventShow || !this.editor.isEditable)) {\n      this.formattingToolbarState.show = !1, this.updateFormattingToolbar();\n      return;\n    }\n  }\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.viewMousedownHandler), this.pmView.dom.removeEventListener(\"mouseup\", this.viewMouseupHandler), this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler), this.pmView.dom.removeEventListener(\"focus\", this.focusHandler), this.pmView.dom.removeEventListener(\"blur\", this.blurHandler), document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n  getSelectionBoundingBox() {\n    const { state: e } = this.pmView, { selection: t } = e, { ranges: o } = t, r = Math.min(...o.map((s) => s.$from.pos)), i = Math.max(...o.map((s) => s.$to.pos));\n    if ((0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.isNodeSelection)(t)) {\n      const s = this.pmView.nodeDOM(r);\n      if (s)\n        return s.getBoundingClientRect();\n    }\n    return (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.posToDOMRect)(this.pmView, r, i);\n  }\n}\nconst Oo = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\n  \"FormattingToolbarPlugin\"\n);\nclass Ro extends U {\n  constructor(t) {\n    super();\n    u(this, \"view\");\n    u(this, \"plugin\");\n    this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n      key: Oo,\n      view: (o) => (this.view = new Do(t, o, (r) => {\n        this.emit(\"update\", r);\n      }), this.view)\n    });\n  }\n  onUpdate(t) {\n    return this.on(\"update\", t);\n  }\n}\nclass zo {\n  constructor(e, t, o) {\n    u(this, \"hyperlinkToolbarState\");\n    u(this, \"updateHyperlinkToolbar\");\n    u(this, \"menuUpdateTimer\");\n    u(this, \"startMenuUpdateTimer\");\n    u(this, \"stopMenuUpdateTimer\");\n    u(this, \"mouseHoveredHyperlinkMark\");\n    u(this, \"mouseHoveredHyperlinkMarkRange\");\n    u(this, \"keyboardHoveredHyperlinkMark\");\n    u(this, \"keyboardHoveredHyperlinkMarkRange\");\n    u(this, \"hyperlinkMark\");\n    u(this, \"hyperlinkMarkRange\");\n    u(this, \"mouseOverHandler\", (e) => {\n      if (this.mouseHoveredHyperlinkMark = void 0, this.mouseHoveredHyperlinkMarkRange = void 0, this.stopMenuUpdateTimer(), e.target instanceof HTMLAnchorElement && e.target.nodeName === \"A\") {\n        const t = e.target, o = this.pmView.posAtDOM(t, 0) + 1, r = this.pmView.state.doc.resolve(\n          o\n        ), i = r.marks();\n        for (const s of i)\n          if (s.type.name === this.pmView.state.schema.mark(\"link\").type.name) {\n            this.mouseHoveredHyperlinkMark = s, this.mouseHoveredHyperlinkMarkRange = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.getMarkRange)(\n              r,\n              s.type,\n              s.attrs\n            ) || void 0;\n            break;\n          }\n      }\n      return this.startMenuUpdateTimer(), !1;\n    });\n    u(this, \"clickHandler\", (e) => {\n      var o;\n      const t = this.pmView.dom.parentElement;\n      // Toolbar is open.\n      this.hyperlinkMark && // An element is clicked.\n      e && e.target && // The clicked element is not the editor.\n      !(t === e.target || t.contains(e.target)) && (o = this.hyperlinkToolbarState) != null && o.show && (this.hyperlinkToolbarState.show = !1, this.updateHyperlinkToolbar());\n    });\n    u(this, \"scrollHandler\", () => {\n      var e;\n      this.hyperlinkMark !== void 0 && (e = this.hyperlinkToolbarState) != null && e.show && (this.hyperlinkToolbarState.referencePos = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.posToDOMRect)(\n        this.pmView,\n        this.hyperlinkMarkRange.from,\n        this.hyperlinkMarkRange.to\n      ), this.updateHyperlinkToolbar());\n    });\n    this.editor = e, this.pmView = t, this.updateHyperlinkToolbar = () => {\n      if (!this.hyperlinkToolbarState)\n        throw new Error(\"Attempting to update uninitialized hyperlink toolbar\");\n      o(this.hyperlinkToolbarState);\n    }, this.startMenuUpdateTimer = () => {\n      this.menuUpdateTimer = setTimeout(() => {\n        this.update();\n      }, 250);\n    }, this.stopMenuUpdateTimer = () => (this.menuUpdateTimer && (clearTimeout(this.menuUpdateTimer), this.menuUpdateTimer = void 0), !1), this.pmView.dom.addEventListener(\"mouseover\", this.mouseOverHandler), document.addEventListener(\"click\", this.clickHandler, !0), document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n  editHyperlink(e, t) {\n    var r;\n    const o = this.pmView.state.tr.insertText(\n      t,\n      this.hyperlinkMarkRange.from,\n      this.hyperlinkMarkRange.to\n    );\n    o.addMark(\n      this.hyperlinkMarkRange.from,\n      this.hyperlinkMarkRange.from + t.length,\n      this.pmView.state.schema.mark(\"link\", { href: e })\n    ), this.pmView.dispatch(o), this.pmView.focus(), (r = this.hyperlinkToolbarState) != null && r.show && (this.hyperlinkToolbarState.show = !1, this.updateHyperlinkToolbar());\n  }\n  deleteHyperlink() {\n    var e;\n    this.pmView.dispatch(\n      this.pmView.state.tr.removeMark(\n        this.hyperlinkMarkRange.from,\n        this.hyperlinkMarkRange.to,\n        this.hyperlinkMark.type\n      ).setMeta(\"preventAutolink\", !0)\n    ), this.pmView.focus(), (e = this.hyperlinkToolbarState) != null && e.show && (this.hyperlinkToolbarState.show = !1, this.updateHyperlinkToolbar());\n  }\n  update() {\n    var t;\n    if (!this.pmView.hasFocus())\n      return;\n    const e = this.hyperlinkMark;\n    if (this.hyperlinkMark = void 0, this.hyperlinkMarkRange = void 0, this.keyboardHoveredHyperlinkMark = void 0, this.keyboardHoveredHyperlinkMarkRange = void 0, this.pmView.state.selection.empty) {\n      const o = this.pmView.state.selection.$from.marks();\n      for (const r of o)\n        if (r.type.name === this.pmView.state.schema.mark(\"link\").type.name) {\n          this.keyboardHoveredHyperlinkMark = r, this.keyboardHoveredHyperlinkMarkRange = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.getMarkRange)(\n            this.pmView.state.selection.$from,\n            r.type,\n            r.attrs\n          ) || void 0;\n          break;\n        }\n    }\n    if (this.mouseHoveredHyperlinkMark && (this.hyperlinkMark = this.mouseHoveredHyperlinkMark, this.hyperlinkMarkRange = this.mouseHoveredHyperlinkMarkRange), this.keyboardHoveredHyperlinkMark && (this.hyperlinkMark = this.keyboardHoveredHyperlinkMark, this.hyperlinkMarkRange = this.keyboardHoveredHyperlinkMarkRange), this.hyperlinkMark && this.editor.isEditable) {\n      this.hyperlinkToolbarState = {\n        show: !0,\n        referencePos: (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_13__.posToDOMRect)(\n          this.pmView,\n          this.hyperlinkMarkRange.from,\n          this.hyperlinkMarkRange.to\n        ),\n        url: this.hyperlinkMark.attrs.href,\n        text: this.pmView.state.doc.textBetween(\n          this.hyperlinkMarkRange.from,\n          this.hyperlinkMarkRange.to\n        )\n      }, this.updateHyperlinkToolbar();\n      return;\n    }\n    if ((t = this.hyperlinkToolbarState) != null && t.show && e && (!this.hyperlinkMark || !this.editor.isEditable)) {\n      this.hyperlinkToolbarState.show = !1, this.updateHyperlinkToolbar();\n      return;\n    }\n  }\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mouseover\", this.mouseOverHandler), document.removeEventListener(\"scroll\", this.scrollHandler), document.removeEventListener(\"click\", this.clickHandler, !0);\n  }\n}\nconst Vo = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\n  \"HyperlinkToolbarPlugin\"\n);\nclass Uo extends U {\n  constructor(t) {\n    super();\n    u(this, \"view\");\n    u(this, \"plugin\");\n    /**\n     * Edit the currently hovered hyperlink.\n     */\n    u(this, \"editHyperlink\", (t, o) => {\n      this.view.editHyperlink(t, o);\n    });\n    /**\n     * Delete the currently hovered hyperlink.\n     */\n    u(this, \"deleteHyperlink\", () => {\n      this.view.deleteHyperlink();\n    });\n    /**\n     * When hovering on/off hyperlinks using the mouse cursor, the hyperlink\n     * toolbar will open & close with a delay.\n     *\n     * This function starts the delay timer, and should be used for when the mouse cursor enters the hyperlink toolbar.\n     */\n    u(this, \"startHideTimer\", () => {\n      this.view.startMenuUpdateTimer();\n    });\n    /**\n     * When hovering on/off hyperlinks using the mouse cursor, the hyperlink\n     * toolbar will open & close with a delay.\n     *\n     * This function stops the delay timer, and should be used for when the mouse cursor exits the hyperlink toolbar.\n     */\n    u(this, \"stopHideTimer\", () => {\n      this.view.stopMenuUpdateTimer();\n    });\n    this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n      key: Vo,\n      view: (o) => (this.view = new zo(t, o, (r) => {\n        this.emit(\"update\", r);\n      }), this.view)\n    });\n  }\n  onUpdate(t) {\n    return this.on(\"update\", t);\n  }\n}\nclass O extends prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Selection {\n  constructor(t, o) {\n    super(t, o);\n    u(this, \"nodes\");\n    const r = t.node();\n    this.nodes = [], t.doc.nodesBetween(t.pos, o.pos, (i, s, l) => {\n      if (l !== null && l.eq(r))\n        return this.nodes.push(i), !1;\n    });\n  }\n  static create(t, o, r = o) {\n    return new O(t.resolve(o), t.resolve(r));\n  }\n  content() {\n    return new prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Slice(prosemirror_model__WEBPACK_IMPORTED_MODULE_16__.Fragment.from(this.nodes), 0, 0);\n  }\n  eq(t) {\n    if (!(t instanceof O) || this.nodes.length !== t.nodes.length || this.from !== t.from || this.to !== t.to)\n      return !1;\n    for (let o = 0; o < this.nodes.length; o++)\n      if (!this.nodes[o].eq(t.nodes[o]))\n        return !1;\n    return !0;\n  }\n  map(t, o) {\n    const r = o.mapResult(this.from), i = o.mapResult(this.to);\n    return i.deleted ? prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Selection.near(t.resolve(r.pos)) : r.deleted ? prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Selection.near(t.resolve(i.pos)) : new O(\n      t.resolve(r.pos),\n      t.resolve(i.pos)\n    );\n  }\n  toJSON() {\n    return { type: \"node\", anchor: this.anchor, head: this.head };\n  }\n}\nconst Fo = prosemirror_view__WEBPACK_IMPORTED_MODULE_17__.__serializeForClipboard;\nlet I;\nfunction qt(n, e) {\n  var r;\n  if (!e.dom.isConnected)\n    return;\n  const t = e.posAtCoords(n);\n  if (!t)\n    return;\n  let o = e.domAtPos(t.pos).node;\n  if (o !== e.dom) {\n    for (; o && o.parentNode && o.parentNode !== e.dom && !((r = o.hasAttribute) != null && r.call(o, \"data-id\")); )\n      o = o.parentNode;\n    if (o)\n      return { node: o, id: o.getAttribute(\"data-id\") };\n  }\n}\nfunction Wo(n, e) {\n  const t = qt(n, e);\n  if (t && t.node.nodeType === 1) {\n    const o = e.docView, r = o.nearestDesc(t.node, !0);\n    return !r || r === o ? null : r.posBefore;\n  }\n  return null;\n}\nfunction $o(n, e) {\n  let t, o;\n  const r = e.resolve(n.from).node().type.spec.group === \"blockContent\", i = e.resolve(n.to).node().type.spec.group === \"blockContent\", s = Math.min(n.$anchor.depth, n.$head.depth);\n  if (r && i) {\n    const l = n.$from.start(s - 1), a = n.$to.end(s - 1);\n    t = e.resolve(l - 1).pos, o = e.resolve(a + 1).pos;\n  } else\n    t = n.from, o = n.to;\n  return { from: t, to: o };\n}\nfunction pt(n, e, t = e) {\n  e === t && (t += n.state.doc.resolve(e + 1).node().nodeSize);\n  const o = n.domAtPos(e).node.cloneNode(!0), r = n.domAtPos(e).node, i = (c, m) => Array.prototype.indexOf.call(c.children, m), s = i(\n    r,\n    // Expects from position to be just before the first selected block.\n    n.domAtPos(e + 1).node.parentElement\n  ), l = i(\n    r,\n    // Expects to position to be just after the last selected block.\n    n.domAtPos(t - 1).node.parentElement\n  );\n  for (let c = r.childElementCount - 1; c >= 0; c--)\n    (c > l || c < s) && o.removeChild(o.children[c]);\n  Xt(), I = o;\n  const d = n.dom.className.split(\" \").filter(\n    (c) => !c.includes(\"bn\") && !c.includes(\"ProseMirror\") && !c.includes(\"editor\")\n  ).join(\" \");\n  I.className = I.className + \" \" + D.dragPreview + \" \" + d, document.body.appendChild(I);\n}\nfunction Xt() {\n  I !== void 0 && (document.body.removeChild(I), I = void 0);\n}\nfunction Go(n, e) {\n  if (!n.dataTransfer)\n    return;\n  const t = e.dom.getBoundingClientRect(), o = {\n    left: t.left + t.width / 2,\n    // take middle of editor\n    top: n.clientY\n  }, r = Wo(o, e);\n  if (r != null) {\n    const i = e.state.selection, s = e.state.doc, { from: l, to: a } = $o(i, s), d = l <= r && r < a, c = i.$anchor.node() !== i.$head.node() || i instanceof O;\n    d && c ? (e.dispatch(\n      e.state.tr.setSelection(O.create(s, l, a))\n    ), pt(e, l, a)) : (e.dispatch(\n      e.state.tr.setSelection(prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.NodeSelection.create(e.state.doc, r))\n    ), pt(e, r));\n    const m = e.state.selection.content(), { dom: h, text: p } = Fo(e, m);\n    n.dataTransfer.clearData(), n.dataTransfer.setData(\"text/html\", h.innerHTML), n.dataTransfer.setData(\"text/plain\", p), n.dataTransfer.effectAllowed = \"move\", n.dataTransfer.setDragImage(I, 0, 0), e.dragging = { slice: m, move: !0 };\n  }\n}\nclass jo {\n  constructor(e, t, o) {\n    u(this, \"sideMenuState\");\n    // When true, the drag handle with be anchored at the same level as root elements\n    // When false, the drag handle with be just to the left of the element\n    // TODO: Is there any case where we want this to be false?\n    u(this, \"horizontalPosAnchoredAtRoot\");\n    u(this, \"horizontalPosAnchor\");\n    u(this, \"hoveredBlock\");\n    // Used to check if currently dragged content comes from this editor instance.\n    u(this, \"isDragging\", !1);\n    u(this, \"menuFrozen\", !1);\n    /**\n     * Sets isDragging when dragging text.\n     */\n    u(this, \"onDragStart\", () => {\n      this.isDragging = !0;\n    });\n    /**\n     * If the event is outside the editor contents,\n     * we dispatch a fake event, so that we can still drop the content\n     * when dragging / dropping to the side of the editor\n     */\n    u(this, \"onDrop\", (e) => {\n      if (this.editor._tiptapEditor.commands.blur(), e.synthetic || !this.isDragging)\n        return;\n      const t = this.pmView.posAtCoords({\n        left: e.clientX,\n        top: e.clientY\n      });\n      if (this.isDragging = !1, !t || t.inside === -1) {\n        const o = new Event(\"drop\", e), r = this.pmView.dom.firstChild.getBoundingClientRect();\n        o.clientX = r.left + r.width / 2, o.clientY = e.clientY, o.dataTransfer = e.dataTransfer, o.preventDefault = () => e.preventDefault(), o.synthetic = !0, this.pmView.dom.dispatchEvent(o);\n      }\n    });\n    /**\n     * If the event is outside the editor contents,\n     * we dispatch a fake event, so that we can still drop the content\n     * when dragging / dropping to the side of the editor\n     */\n    u(this, \"onDragOver\", (e) => {\n      if (e.synthetic || !this.isDragging)\n        return;\n      const t = this.pmView.posAtCoords({\n        left: e.clientX,\n        top: e.clientY\n      });\n      if (!t || t.inside === -1) {\n        const o = new Event(\"dragover\", e), r = this.pmView.dom.firstChild.getBoundingClientRect();\n        o.clientX = r.left + r.width / 2, o.clientY = e.clientY, o.dataTransfer = e.dataTransfer, o.preventDefault = () => e.preventDefault(), o.synthetic = !0, this.pmView.dom.dispatchEvent(o);\n      }\n    });\n    u(this, \"onKeyDown\", (e) => {\n      var t;\n      (t = this.sideMenuState) != null && t.show && (this.sideMenuState.show = !1, this.updateSideMenu(this.sideMenuState)), this.menuFrozen = !1;\n    });\n    u(this, \"onMouseMove\", (e) => {\n      var d, c, m, h, p;\n      if (this.menuFrozen)\n        return;\n      const t = this.pmView.dom.firstChild.getBoundingClientRect(), o = this.pmView.dom.getBoundingClientRect(), r = e.clientX >= o.left && e.clientX <= o.right && e.clientY >= o.top && e.clientY <= o.bottom, i = this.pmView.dom.parentElement;\n      if (\n        // Cursor is within the editor area\n        r && // An element is hovered\n        e && e.target && // Element is outside the editor\n        !(i === e.target || i.contains(e.target))\n      ) {\n        (d = this.sideMenuState) != null && d.show && (this.sideMenuState.show = !1, this.updateSideMenu(this.sideMenuState));\n        return;\n      }\n      this.horizontalPosAnchor = t.x;\n      const s = {\n        left: t.left + t.width / 2,\n        // take middle of editor\n        top: e.clientY\n      }, l = qt(s, this.pmView);\n      if (!l || !this.editor.isEditable) {\n        (c = this.sideMenuState) != null && c.show && (this.sideMenuState.show = !1, this.updateSideMenu(this.sideMenuState));\n        return;\n      }\n      if ((m = this.sideMenuState) != null && m.show && ((h = this.hoveredBlock) != null && h.hasAttribute(\"data-id\")) && ((p = this.hoveredBlock) == null ? void 0 : p.getAttribute(\"data-id\")) === l.id)\n        return;\n      this.hoveredBlock = l.node;\n      const a = l.node.firstChild;\n      if (a && this.editor.isEditable) {\n        const f = a.getBoundingClientRect();\n        this.sideMenuState = {\n          show: !0,\n          referencePos: new DOMRect(\n            this.horizontalPosAnchoredAtRoot ? this.horizontalPosAnchor : f.x,\n            f.y,\n            f.width,\n            f.height\n          ),\n          block: this.editor.getBlock(\n            this.hoveredBlock.getAttribute(\"data-id\")\n          )\n        }, this.updateSideMenu(this.sideMenuState);\n      }\n    });\n    u(this, \"onScroll\", () => {\n      var e;\n      if ((e = this.sideMenuState) != null && e.show) {\n        const o = this.hoveredBlock.firstChild.getBoundingClientRect();\n        this.sideMenuState.referencePos = new DOMRect(\n          this.horizontalPosAnchoredAtRoot ? this.horizontalPosAnchor : o.x,\n          o.y,\n          o.width,\n          o.height\n        ), this.updateSideMenu(this.sideMenuState);\n      }\n    });\n    this.editor = e, this.pmView = t, this.updateSideMenu = o, this.horizontalPosAnchoredAtRoot = !0, this.horizontalPosAnchor = this.pmView.dom.firstChild.getBoundingClientRect().x, document.body.addEventListener(\"drop\", this.onDrop, !0), document.body.addEventListener(\"dragover\", this.onDragOver), this.pmView.dom.addEventListener(\"dragstart\", this.onDragStart), document.body.addEventListener(\"mousemove\", this.onMouseMove, !0), document.addEventListener(\"scroll\", this.onScroll), document.body.addEventListener(\"keydown\", this.onKeyDown, !0);\n  }\n  destroy() {\n    var e;\n    (e = this.sideMenuState) != null && e.show && (this.sideMenuState.show = !1, this.updateSideMenu(this.sideMenuState)), document.body.removeEventListener(\"mousemove\", this.onMouseMove), document.body.removeEventListener(\"dragover\", this.onDragOver), this.pmView.dom.removeEventListener(\"dragstart\", this.onDragStart), document.body.removeEventListener(\"drop\", this.onDrop, !0), document.removeEventListener(\"scroll\", this.onScroll), document.body.removeEventListener(\"keydown\", this.onKeyDown, !0);\n  }\n  addBlock() {\n    var l;\n    (l = this.sideMenuState) != null && l.show && (this.sideMenuState.show = !1, this.updateSideMenu(this.sideMenuState)), this.menuFrozen = !0;\n    const t = this.hoveredBlock.firstChild.getBoundingClientRect(), o = this.pmView.posAtCoords({\n      left: t.left + t.width / 2,\n      top: t.top + t.height / 2\n    });\n    if (!o)\n      return;\n    const r = b(\n      this.editor._tiptapEditor.state.doc,\n      o.pos\n    );\n    if (r === void 0)\n      return;\n    const { contentNode: i, endPos: s } = r;\n    if (i.textContent.length !== 0) {\n      const a = s + 1, d = a + 2;\n      this.editor._tiptapEditor.chain().BNCreateBlock(a).BNUpdateBlock(d, { type: \"paragraph\", props: {} }).setTextSelection(d).run();\n    } else\n      this.editor._tiptapEditor.commands.setTextSelection(s);\n    this.pmView.focus(), this.pmView.dispatch(\n      this.pmView.state.tr.scrollIntoView().setMeta(tt, {\n        // TODO import suggestion plugin key\n        activate: !0,\n        type: \"drag\"\n      })\n    );\n  }\n}\nconst qo = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.PluginKey(\"SideMenuPlugin\");\nclass Xo extends U {\n  constructor(t) {\n    super();\n    u(this, \"sideMenuView\");\n    u(this, \"plugin\");\n    /**\n     * If the block is empty, opens the slash menu. If the block has content,\n     * creates a new block below and opens the slash menu in it.\n     */\n    u(this, \"addBlock\", () => this.sideMenuView.addBlock());\n    /**\n     * Handles drag & drop events for blocks.\n     */\n    u(this, \"blockDragStart\", (t) => {\n      this.sideMenuView.isDragging = !0, Go(t, this.editor.prosemirrorView);\n    });\n    /**\n     * Handles drag & drop events for blocks.\n     */\n    u(this, \"blockDragEnd\", () => Xt());\n    /**\n     * Freezes the side menu. When frozen, the side menu will stay\n     * attached to the same block regardless of which block is hovered by the\n     * mouse cursor.\n     */\n    u(this, \"freezeMenu\", () => this.sideMenuView.menuFrozen = !0);\n    /**\n     * Unfreezes the side menu. When frozen, the side menu will stay\n     * attached to the same block regardless of which block is hovered by the\n     * mouse cursor.\n     */\n    u(this, \"unfreezeMenu\", () => this.sideMenuView.menuFrozen = !1);\n    this.editor = t, this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_15__.Plugin({\n      key: qo,\n      view: (o) => (this.sideMenuView = new jo(\n        t,\n        o,\n        (r) => {\n          this.emit(\"update\", r);\n        }\n      ), this.sideMenuView)\n    });\n  }\n  onUpdate(t) {\n    return this.on(\"update\", t);\n  }\n}\nfunction H(n, e) {\n  const t = n.getTextCursorPosition().block;\n  if (t.content === void 0)\n    throw new Error(\n      \"Slash Menu open in a block that doesn't contain inline content.\"\n    );\n  t.content.length === 1 && t.content[0].type === \"text\" && t.content[0].text === \"/\" || t.content.length === 0 ? n.updateBlock(t, e) : (n.insertBlocks([e], t, \"after\"), n.setTextCursorPosition(n.getTextCursorPosition().nextBlock));\n}\nconst Ko = (n = jt) => {\n  var t, o, r;\n  const e = [];\n  return \"heading\" in n && \"level\" in n.heading.propSchema && ((t = n.heading.propSchema.level.values) != null && t.includes(1) && e.push({\n    name: \"Heading\",\n    aliases: [\"h\", \"heading1\", \"h1\"],\n    execute: (i) => H(i, {\n      type: \"heading\",\n      props: { level: 1 }\n    })\n  }), (o = n.heading.propSchema.level.values) != null && o.includes(2) && e.push({\n    name: \"Heading 2\",\n    aliases: [\"h2\", \"heading2\", \"subheading\"],\n    execute: (i) => H(i, {\n      type: \"heading\",\n      props: { level: 2 }\n    })\n  }), (r = n.heading.propSchema.level.values) != null && r.includes(3) && e.push({\n    name: \"Heading 3\",\n    aliases: [\"h3\", \"heading3\", \"subheading\"],\n    execute: (i) => H(i, {\n      type: \"heading\",\n      props: { level: 3 }\n    })\n  })), \"bulletListItem\" in n && e.push({\n    name: \"Bullet List\",\n    aliases: [\"ul\", \"list\", \"bulletlist\", \"bullet list\"],\n    execute: (i) => H(i, {\n      type: \"bulletListItem\"\n    })\n  }), \"numberedListItem\" in n && e.push({\n    name: \"Numbered List\",\n    aliases: [\"li\", \"list\", \"numberedlist\", \"numbered list\"],\n    execute: (i) => H(i, {\n      type: \"numberedListItem\"\n    })\n  }), \"paragraph\" in n && e.push({\n    name: \"Paragraph\",\n    aliases: [\"p\"],\n    execute: (i) => H(i, {\n      type: \"paragraph\"\n    })\n  }), \"image\" in n && e.push({\n    name: \"Image\",\n    aliases: [\n      \"image\",\n      \"imageUpload\",\n      \"upload\",\n      \"img\",\n      \"picture\",\n      \"media\",\n      \"url\",\n      \"drive\",\n      \"dropbox\"\n    ],\n    execute: (i) => {\n      H(i, {\n        type: \"image\"\n      }), i.setTextCursorPosition(\n        i.getTextCursorPosition().nextBlock,\n        \"start\"\n      ), i._tiptapEditor.view.dispatch(\n        i._tiptapEditor.state.tr.setMeta(z, {\n          block: i.getTextCursorPosition().prevBlock\n        })\n      );\n    }\n  }), e;\n}, Yo = {\n  enableInputRules: !0,\n  enablePasteRules: !0,\n  enableCoreExtensions: !1\n};\nclass xn {\n  constructor(e = {}) {\n    u(this, \"_tiptapEditor\");\n    u(this, \"blockCache\", /* @__PURE__ */ new WeakMap());\n    u(this, \"schema\");\n    u(this, \"ready\", !1);\n    u(this, \"sideMenu\");\n    u(this, \"formattingToolbar\");\n    u(this, \"slashMenu\");\n    u(this, \"hyperlinkToolbar\");\n    u(this, \"imageToolbar\");\n    u(this, \"uploadFile\");\n    var l, a, d, c, m;\n    this.options = e;\n    const t = {\n      defaultStyles: !0,\n      // TODO: There's a lot of annoying typing stuff to deal with here. If\n      //  BSchema is specified, then options.blockSchema should also be required.\n      //  If BSchema is not specified, then options.blockSchema should also not\n      //  be defined. Unfortunately, trying to implement these constraints seems\n      //  to be a huge pain, hence the `as any` casts.\n      blockSchema: e.blockSchema || jt,\n      ...e\n    };\n    this.sideMenu = new Xo(this), this.formattingToolbar = new Ro(this), this.slashMenu = new Je(\n      this,\n      t.slashMenuItems || Ko(t.blockSchema)\n    ), this.hyperlinkToolbar = new Uo(this), this.imageToolbar = new Ho(this);\n    const o = ro({\n      editor: this,\n      domAttributes: t.domAttributes || {},\n      blockSchema: t.blockSchema,\n      collaboration: t.collaboration\n    }), r = _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Extension.create({\n      name: \"BlockNoteUIExtension\",\n      addProseMirrorPlugins: () => [\n        this.sideMenu.plugin,\n        this.formattingToolbar.plugin,\n        this.slashMenu.plugin,\n        this.hyperlinkToolbar.plugin,\n        this.imageToolbar.plugin\n      ]\n    });\n    o.push(r), this.schema = t.blockSchema, this.uploadFile = t.uploadFile;\n    const i = t.initialContent || (e.collaboration ? void 0 : [\n      {\n        type: \"paragraph\",\n        id: j.options.generateID()\n      }\n    ]), s = {\n      ...Yo,\n      ...t._tiptapOptions,\n      onBeforeCreate(h) {\n        if (!i)\n          return;\n        const p = h.editor.schema, f = p.node(\n          \"doc\",\n          void 0,\n          p.node(\"blockGroup\", void 0, [\n            V({ id: \"initialBlock\", type: \"paragraph\" }, p)\n          ])\n        );\n        h.editor.options.content = f.toJSON();\n      },\n      onCreate: () => {\n        var h;\n        i !== void 0 && this.replaceBlocks(this.topLevelBlocks, i), (h = t.onEditorReady) == null || h.call(t, this), this.ready = !0;\n      },\n      onUpdate: () => {\n        var h;\n        this.ready && ((h = t.onEditorContentChange) == null || h.call(t, this));\n      },\n      onSelectionUpdate: () => {\n        var h;\n        this.ready && ((h = t.onTextCursorPositionChange) == null || h.call(t, this));\n      },\n      editable: e.editable === void 0 ? !0 : e.editable,\n      extensions: t.enableBlockNoteExtensions === !1 ? (l = t._tiptapOptions) == null ? void 0 : l.extensions : [...((a = t._tiptapOptions) == null ? void 0 : a.extensions) || [], ...o],\n      editorProps: {\n        attributes: {\n          ...(d = t.domAttributes) == null ? void 0 : d.editor,\n          class: S(\n            D.bnEditor,\n            D.bnRoot,\n            t.defaultStyles ? D.defaultStyles : \"\",\n            ((m = (c = t.domAttributes) == null ? void 0 : c.editor) == null ? void 0 : m.class) || \"\"\n          )\n        }\n      }\n    };\n    t.parentElement && (s.element = t.parentElement), this._tiptapEditor = new _tiptap_core__WEBPACK_IMPORTED_MODULE_13__.Editor(s);\n  }\n  get prosemirrorView() {\n    return this._tiptapEditor.view;\n  }\n  get domElement() {\n    return this._tiptapEditor.view.dom;\n  }\n  isFocused() {\n    return this._tiptapEditor.view.hasFocus();\n  }\n  focus() {\n    this._tiptapEditor.view.focus();\n  }\n  /**\n   * Gets a snapshot of all top-level (non-nested) blocks in the editor.\n   * @returns A snapshot of all top-level (non-nested) blocks in the editor.\n   */\n  get topLevelBlocks() {\n    const e = [];\n    return this._tiptapEditor.state.doc.firstChild.descendants((t) => (e.push(x(t, this.schema, this.blockCache)), !1)), e;\n  }\n  /**\n   * Gets a snapshot of an existing block from the editor.\n   * @param blockIdentifier The identifier of an existing block that should be retrieved.\n   * @returns The block that matches the identifier, or `undefined` if no matching block was found.\n   */\n  getBlock(e) {\n    const t = typeof e == \"string\" ? e : e.id;\n    let o;\n    return this._tiptapEditor.state.doc.firstChild.descendants((r) => typeof o < \"u\" ? !1 : r.type.name !== \"blockContainer\" || r.attrs.id !== t ? !0 : (o = x(r, this.schema, this.blockCache), !1)), o;\n  }\n  /**\n   * Traverses all blocks in the editor depth-first, and executes a callback for each.\n   * @param callback The callback to execute for each block. Returning `false` stops the traversal.\n   * @param reverse Whether the blocks should be traversed in reverse order.\n   */\n  forEachBlock(e, t = !1) {\n    const o = this.topLevelBlocks.slice();\n    t && o.reverse();\n    function r(i) {\n      for (const s of i) {\n        if (!e(s))\n          return !1;\n        const l = t ? s.children.slice().reverse() : s.children;\n        if (!r(l))\n          return !1;\n      }\n      return !0;\n    }\n    r(o);\n  }\n  /**\n   * Executes a callback whenever the editor's contents change.\n   * @param callback The callback to execute.\n   */\n  onEditorContentChange(e) {\n    this._tiptapEditor.on(\"update\", e);\n  }\n  /**\n   * Executes a callback whenever the editor's selection changes.\n   * @param callback The callback to execute.\n   */\n  onEditorSelectionChange(e) {\n    this._tiptapEditor.on(\"selectionUpdate\", e);\n  }\n  /**\n   * Gets a snapshot of the current text cursor position.\n   * @returns A snapshot of the current text cursor position.\n   */\n  getTextCursorPosition() {\n    const { node: e, depth: t, startPos: o, endPos: r } = b(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    ), i = this._tiptapEditor.state.doc.resolve(r).index(t - 1), s = this._tiptapEditor.state.doc.resolve(r + 1).node().childCount;\n    let l;\n    i > 0 && (l = this._tiptapEditor.state.doc.resolve(o - 2).node());\n    let a;\n    return i < s - 1 && (a = this._tiptapEditor.state.doc.resolve(r + 2).node()), {\n      block: x(e, this.schema, this.blockCache),\n      prevBlock: l === void 0 ? void 0 : x(l, this.schema, this.blockCache),\n      nextBlock: a === void 0 ? void 0 : x(a, this.schema, this.blockCache)\n    };\n  }\n  /**\n   * Sets the text cursor position to the start or end of an existing block. Throws an error if the target block could\n   * not be found.\n   * @param targetBlock The identifier of an existing block that the text cursor should be moved to.\n   * @param placement Whether the text cursor should be placed at the start or end of the block.\n   */\n  setTextCursorPosition(e, t = \"start\") {\n    const o = typeof e == \"string\" ? e : e.id, { posBeforeNode: r } = et(o, this._tiptapEditor.state.doc), { startPos: i, contentNode: s } = b(\n      this._tiptapEditor.state.doc,\n      r + 2\n    );\n    if (s.type.spec.content === \"\") {\n      this._tiptapEditor.commands.setNodeSelection(i);\n      return;\n    }\n    t === \"start\" ? this._tiptapEditor.commands.setTextSelection(i + 1) : this._tiptapEditor.commands.setTextSelection(\n      i + s.nodeSize - 1\n    );\n  }\n  /**\n   * Gets a snapshot of the current selection.\n   */\n  getSelection() {\n    if (this._tiptapEditor.state.selection.from === this._tiptapEditor.state.selection.to || \"node\" in this._tiptapEditor.state.selection)\n      return;\n    const e = [];\n    return this._tiptapEditor.state.doc.descendants((t, o) => t.type.spec.group !== \"blockContent\" || o + t.nodeSize < this._tiptapEditor.state.selection.from || o > this._tiptapEditor.state.selection.to ? !0 : (e.push(\n      x(\n        this._tiptapEditor.state.doc.resolve(o).node(),\n        this.schema,\n        this.blockCache\n      )\n    ), !1)), { blocks: e };\n  }\n  /**\n   * Checks if the editor is currently editable, or if it's locked.\n   * @returns True if the editor is editable, false otherwise.\n   */\n  get isEditable() {\n    return this._tiptapEditor.isEditable;\n  }\n  /**\n   * Makes the editor editable or locks it, depending on the argument passed.\n   * @param editable True to make the editor editable, or false to lock it.\n   */\n  set isEditable(e) {\n    this._tiptapEditor.setEditable(e);\n  }\n  /**\n   * Inserts new blocks into the editor. If a block's `id` is undefined, BlockNote generates one automatically. Throws an\n   * error if the reference block could not be found.\n   * @param blocksToInsert An array of partial blocks that should be inserted.\n   * @param referenceBlock An identifier for an existing block, at which the new blocks should be inserted.\n   * @param placement Whether the blocks should be inserted just before, just after, or nested inside the\n   * `referenceBlock`. Inserts the blocks at the start of the existing block's children if \"nested\" is used.\n   */\n  insertBlocks(e, t, o = \"before\") {\n    Ut(e, t, o, this._tiptapEditor);\n  }\n  /**\n   * Updates an existing block in the editor. Since updatedBlock is a PartialBlock object, some fields might not be\n   * defined. These undefined fields are kept as-is from the existing block. Throws an error if the block to update could\n   * not be found.\n   * @param blockToUpdate The block that should be updated.\n   * @param update A partial block which defines how the existing block should be changed.\n   */\n  updateBlock(e, t) {\n    io(e, t, this._tiptapEditor);\n  }\n  /**\n   * Removes existing blocks from the editor. Throws an error if any of the blocks could not be found.\n   * @param blocksToRemove An array of identifiers for existing blocks that should be removed.\n   */\n  removeBlocks(e) {\n    Ft(e, this._tiptapEditor);\n  }\n  /**\n   * Replaces existing blocks in the editor with new blocks. If the blocks that should be removed are not adjacent or\n   * are at different nesting levels, `blocksToInsert` will be inserted at the position of the first block in\n   * `blocksToRemove`. Throws an error if any of the blocks to remove could not be found.\n   * @param blocksToRemove An array of blocks that should be replaced.\n   * @param blocksToInsert An array of partial blocks to replace the old ones with.\n   */\n  replaceBlocks(e, t) {\n    so(e, t, this._tiptapEditor);\n  }\n  /**\n   * Gets the active text styles at the text cursor position or at the end of the current selection if it's active.\n   */\n  getActiveStyles() {\n    const e = {}, t = this._tiptapEditor.state.selection.$to.marks(), o = /* @__PURE__ */ new Set([\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike\",\n      \"code\"\n    ]), r = /* @__PURE__ */ new Set([\"textColor\", \"backgroundColor\"]);\n    for (const i of t)\n      o.has(i.type.name) ? e[i.type.name] = !0 : r.has(i.type.name) && (e[i.type.name] = i.attrs.color);\n    return e;\n  }\n  /**\n   * Adds styles to the currently selected content.\n   * @param styles The styles to add.\n   */\n  addStyles(e) {\n    const t = /* @__PURE__ */ new Set([\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike\",\n      \"code\"\n    ]), o = /* @__PURE__ */ new Set([\"textColor\", \"backgroundColor\"]);\n    this._tiptapEditor.view.focus();\n    for (const [r, i] of Object.entries(e))\n      t.has(r) ? this._tiptapEditor.commands.setMark(r) : o.has(r) && this._tiptapEditor.commands.setMark(r, { color: i });\n  }\n  /**\n   * Removes styles from the currently selected content.\n   * @param styles The styles to remove.\n   */\n  removeStyles(e) {\n    this._tiptapEditor.view.focus();\n    for (const t of Object.keys(e))\n      this._tiptapEditor.commands.unsetMark(t);\n  }\n  /**\n   * Toggles styles on the currently selected content.\n   * @param styles The styles to toggle.\n   */\n  toggleStyles(e) {\n    const t = /* @__PURE__ */ new Set([\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike\",\n      \"code\"\n    ]), o = /* @__PURE__ */ new Set([\"textColor\", \"backgroundColor\"]);\n    this._tiptapEditor.view.focus();\n    for (const [r, i] of Object.entries(e))\n      t.has(r) ? this._tiptapEditor.commands.toggleMark(r) : o.has(r) && this._tiptapEditor.commands.toggleMark(r, { color: i });\n  }\n  /**\n   * Gets the currently selected text.\n   */\n  getSelectedText() {\n    return this._tiptapEditor.state.doc.textBetween(\n      this._tiptapEditor.state.selection.from,\n      this._tiptapEditor.state.selection.to\n    );\n  }\n  /**\n   * Gets the URL of the last link in the current selection, or `undefined` if there are no links in the selection.\n   */\n  getSelectedLinkUrl() {\n    return this._tiptapEditor.getAttributes(\"link\").href;\n  }\n  /**\n   * Creates a new link to replace the selected content.\n   * @param url The link URL.\n   * @param text The text to display the link with.\n   */\n  createLink(e, t) {\n    if (e === \"\")\n      return;\n    const { from: o, to: r } = this._tiptapEditor.state.selection;\n    t || (t = this._tiptapEditor.state.doc.textBetween(o, r));\n    const i = this._tiptapEditor.schema.mark(\"link\", { href: e });\n    this._tiptapEditor.view.dispatch(\n      this._tiptapEditor.view.state.tr.insertText(t, o, r).addMark(o, o + t.length, i)\n    );\n  }\n  /**\n   * Checks if the block containing the text cursor can be nested.\n   */\n  canNestBlock() {\n    const { startPos: e, depth: t } = b(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    );\n    return this._tiptapEditor.state.doc.resolve(e).index(t - 1) > 0;\n  }\n  /**\n   * Nests the block containing the text cursor into the block above it.\n   */\n  nestBlock() {\n    this._tiptapEditor.commands.sinkListItem(\"blockContainer\");\n  }\n  /**\n   * Checks if the block containing the text cursor is nested.\n   */\n  canUnnestBlock() {\n    const { depth: e } = b(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    );\n    return e > 2;\n  }\n  /**\n   * Lifts the block containing the text cursor out of its parent.\n   */\n  unnestBlock() {\n    this._tiptapEditor.commands.liftListItem(\"blockContainer\");\n  }\n  /**\n   * Serializes blocks into an HTML string. To better conform to HTML standards, children of blocks which aren't list\n   * items are un-nested in the output HTML.\n   * @param blocks An array of blocks that should be serialized into HTML.\n   * @returns The blocks, serialized as an HTML string.\n   */\n  async blocksToHTML(e) {\n    return Wt(e, this._tiptapEditor.schema);\n  }\n  /**\n   * Parses blocks from an HTML string. Tries to create `Block` objects out of any HTML block-level elements, and\n   * `InlineNode` objects from any HTML inline elements, though not all element types are recognized. If BlockNote\n   * doesn't recognize an HTML element's tag, it will parse it as a paragraph or plain text.\n   * @param html The HTML string to parse blocks from.\n   * @returns The blocks parsed from the HTML string.\n   */\n  async HTMLToBlocks(e) {\n    return $t(e, this.schema, this._tiptapEditor.schema);\n  }\n  /**\n   * Serializes blocks into a Markdown string. The output is simplified as Markdown does not support all features of\n   * BlockNote - children of blocks which aren't list items are un-nested and certain styles are removed.\n   * @param blocks An array of blocks that should be serialized into Markdown.\n   * @returns The blocks, serialized as a Markdown string.\n   */\n  async blocksToMarkdown(e) {\n    return co(e, this._tiptapEditor.schema);\n  }\n  /**\n   * Creates a list of blocks from a Markdown string. Tries to create `Block` and `InlineNode` objects based on\n   * Markdown syntax, though not all symbols are recognized. If BlockNote doesn't recognize a symbol, it will parse it\n   * as text.\n   * @param markdown The Markdown string to parse blocks from.\n   * @returns The blocks parsed from the Markdown string.\n   */\n  async markdownToBlocks(e) {\n    return po(e, this.schema, this._tiptapEditor.schema);\n  }\n  /**\n   * Updates the user info for the current user that's shown to other collaborators.\n   */\n  updateCollaborationUserInfo(e) {\n    if (!this.options.collaboration)\n      throw new Error(\n        \"Cannot update collaboration user info when collaboration is disabled.\"\n      );\n    this._tiptapEditor.commands.updateUser(e);\n  }\n}\nconst In = async (n) => {\n  const e = new FormData();\n  return e.append(\"file\", n), (await (await fetch(\"https://tmpfiles.org/api/v1/upload\", {\n    method: \"POST\",\n    body: e\n  })).json()).data.url.replace(\n    \"tmpfiles.org/\",\n    \"tmpfiles.org/dl/\"\n  );\n};\n\n//# sourceMappingURL=blocknote.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/dist/blocknote.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/react/dist/blocknote-react.js":
/*!***************************************************************!*\
  !*** ./node_modules/@blocknote/react/dist/blocknote-react.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AddBlockButton: () => (/* binding */ wn),\n/* harmony export */   BlockColorsButton: () => (/* binding */ En),\n/* harmony export */   BlockNoteView: () => (/* binding */ eo),\n/* harmony export */   BlockTypeDropdown: () => (/* binding */ on),\n/* harmony export */   ColorStyleButton: () => (/* binding */ un),\n/* harmony export */   CreateLinkButton: () => (/* binding */ vn),\n/* harmony export */   DefaultDragHandleMenu: () => (/* binding */ zn),\n/* harmony export */   DefaultFormattingToolbar: () => (/* binding */ mn),\n/* harmony export */   DefaultImageToolbar: () => (/* binding */ Et),\n/* harmony export */   DefaultSideMenu: () => (/* binding */ In),\n/* harmony export */   DefaultSlashMenu: () => (/* binding */ Fn),\n/* harmony export */   DragHandle: () => (/* binding */ Hn),\n/* harmony export */   DragHandleMenu: () => (/* binding */ Mn),\n/* harmony export */   DragHandleMenuItem: () => (/* binding */ Ht),\n/* harmony export */   FormattingToolbarPositioner: () => (/* binding */ kn),\n/* harmony export */   HyperlinkToolbarPositioner: () => (/* binding */ Cn),\n/* harmony export */   ImageToolbarPositioner: () => (/* binding */ Ln),\n/* harmony export */   InlineContent: () => (/* binding */ no),\n/* harmony export */   NestBlockButton: () => (/* binding */ gn),\n/* harmony export */   RemoveBlockButton: () => (/* binding */ Rn),\n/* harmony export */   SideMenu: () => (/* binding */ jn),\n/* harmony export */   SideMenuButton: () => (/* binding */ zt),\n/* harmony export */   SideMenuPositioner: () => (/* binding */ Bn),\n/* harmony export */   SlashMenuItem: () => (/* binding */ On),\n/* harmony export */   SlashMenuPositioner: () => (/* binding */ An),\n/* harmony export */   TextAlignButton: () => (/* binding */ Se),\n/* harmony export */   ToggledStyleButton: () => (/* binding */ he),\n/* harmony export */   Toolbar: () => (/* binding */ _e),\n/* harmony export */   ToolbarButton: () => (/* binding */ P),\n/* harmony export */   ToolbarDropdown: () => (/* binding */ en),\n/* harmony export */   UnnestBlockButton: () => (/* binding */ fn),\n/* harmony export */   blockNoteToMantineTheme: () => (/* binding */ fe),\n/* harmony export */   createReactBlockSpec: () => (/* binding */ oo),\n/* harmony export */   darkDefaultTheme: () => (/* binding */ dt),\n/* harmony export */   defaultBlockTypeDropdownItems: () => (/* binding */ nn),\n/* harmony export */   defaultColorScheme: () => (/* binding */ k),\n/* harmony export */   getDefaultReactSlashMenuItems: () => (/* binding */ Nn),\n/* harmony export */   lightDefaultTheme: () => (/* binding */ ve),\n/* harmony export */   useBlockNote: () => (/* binding */ to),\n/* harmony export */   useEditorChange: () => (/* binding */ q),\n/* harmony export */   useEditorContentChange: () => (/* binding */ tn),\n/* harmony export */   useEditorForceUpdate: () => (/* binding */ ro),\n/* harmony export */   useEditorSelectionChange: () => (/* binding */ rn),\n/* harmony export */   useSelectedBlocks: () => (/* binding */ Q)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _blocknote_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @blocknote/core */ \"(ssr)/./node_modules/@blocknote/core/dist/blocknote.js\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/cjs/index.js\");\n/* harmony import */ var _tiptap_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tiptap/react */ \"(ssr)/./node_modules/@tiptap/react/dist/index.js\");\n/* harmony import */ var use_prefers_color_scheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-prefers-color-scheme */ \"(ssr)/./node_modules/use-prefers-color-scheme/dist/index.cjs.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ \"(ssr)/./node_modules/lodash/lodash.js\");\n/* harmony import */ var _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tippyjs/react */ \"(ssr)/./node_modules/@tippyjs/react/dist/tippy-react.umd.js\");\n/* harmony import */ var tippy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tippy.js */ \"(ssr)/./node_modules/tippy.js/dist/tippy.cjs.js\");\n\n\n\n\n\n\n\n\n\nvar Me = { exports: {} }, re = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar at;\nfunction Hr() {\n  if (at)\n    return re;\n  at = 1;\n  var e = react__WEBPACK_IMPORTED_MODULE_0__, n = Symbol.for(\"react.element\"), o = Symbol.for(\"react.fragment\"), i = Object.prototype.hasOwnProperty, s = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, c = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function d(g, a, y) {\n    var x, p = {}, S = null, T = null;\n    y !== void 0 && (S = \"\" + y), a.key !== void 0 && (S = \"\" + a.key), a.ref !== void 0 && (T = a.ref);\n    for (x in a)\n      i.call(a, x) && !c.hasOwnProperty(x) && (p[x] = a[x]);\n    if (g && g.defaultProps)\n      for (x in a = g.defaultProps, a)\n        p[x] === void 0 && (p[x] = a[x]);\n    return { $$typeof: n, type: g, key: S, ref: T, props: p, _owner: s.current };\n  }\n  return re.Fragment = o, re.jsx = d, re.jsxs = d, re;\n}\nvar ne = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar lt;\nfunction Ir() {\n  return lt || (lt = 1,  true && function() {\n    var e = react__WEBPACK_IMPORTED_MODULE_0__, n = Symbol.for(\"react.element\"), o = Symbol.for(\"react.portal\"), i = Symbol.for(\"react.fragment\"), s = Symbol.for(\"react.strict_mode\"), c = Symbol.for(\"react.profiler\"), d = Symbol.for(\"react.provider\"), g = Symbol.for(\"react.context\"), a = Symbol.for(\"react.forward_ref\"), y = Symbol.for(\"react.suspense\"), x = Symbol.for(\"react.suspense_list\"), p = Symbol.for(\"react.memo\"), S = Symbol.for(\"react.lazy\"), T = Symbol.for(\"react.offscreen\"), D = Symbol.iterator, le = \"@@iterator\";\n    function Bt(t) {\n      if (t === null || typeof t != \"object\")\n        return null;\n      var l = D && t[D] || t[le];\n      return typeof l == \"function\" ? l : null;\n    }\n    var G = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function H(t) {\n      {\n        for (var l = arguments.length, u = new Array(l > 1 ? l - 1 : 0), f = 1; f < l; f++)\n          u[f - 1] = arguments[f];\n        _t(\"error\", t, u);\n      }\n    }\n    function _t(t, l, u) {\n      {\n        var f = G.ReactDebugCurrentFrame, m = f.getStackAddendum();\n        m !== \"\" && (l += \"%s\", u = u.concat([m]));\n        var C = u.map(function(v) {\n          return String(v);\n        });\n        C.unshift(\"Warning: \" + l), Function.prototype.apply.call(console[t], console, C);\n      }\n    }\n    var Dt = !1, Pt = !1, Ot = !1, Ft = !1, At = !1, De;\n    De = Symbol.for(\"react.module.reference\");\n    function Lt(t) {\n      return !!(typeof t == \"string\" || typeof t == \"function\" || t === i || t === c || At || t === s || t === y || t === x || Ft || t === T || Dt || Pt || Ot || typeof t == \"object\" && t !== null && (t.$$typeof === S || t.$$typeof === p || t.$$typeof === d || t.$$typeof === g || t.$$typeof === a || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      t.$$typeof === De || t.getModuleId !== void 0));\n    }\n    function Vt(t, l, u) {\n      var f = t.displayName;\n      if (f)\n        return f;\n      var m = l.displayName || l.name || \"\";\n      return m !== \"\" ? u + \"(\" + m + \")\" : u;\n    }\n    function Pe(t) {\n      return t.displayName || \"Context\";\n    }\n    function L(t) {\n      if (t == null)\n        return null;\n      if (typeof t.tag == \"number\" && H(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof t == \"function\")\n        return t.displayName || t.name || null;\n      if (typeof t == \"string\")\n        return t;\n      switch (t) {\n        case i:\n          return \"Fragment\";\n        case o:\n          return \"Portal\";\n        case c:\n          return \"Profiler\";\n        case s:\n          return \"StrictMode\";\n        case y:\n          return \"Suspense\";\n        case x:\n          return \"SuspenseList\";\n      }\n      if (typeof t == \"object\")\n        switch (t.$$typeof) {\n          case g:\n            var l = t;\n            return Pe(l) + \".Consumer\";\n          case d:\n            var u = t;\n            return Pe(u._context) + \".Provider\";\n          case a:\n            return Vt(t, t.render, \"ForwardRef\");\n          case p:\n            var f = t.displayName || null;\n            return f !== null ? f : L(t.type) || \"Memo\";\n          case S: {\n            var m = t, C = m._payload, v = m._init;\n            try {\n              return L(v(C));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var K = Object.assign, ee = 0, Oe, Fe, Ae, Le, Ve, Ue, Ne;\n    function $e() {\n    }\n    $e.__reactDisabledLog = !0;\n    function Ut() {\n      {\n        if (ee === 0) {\n          Oe = console.log, Fe = console.info, Ae = console.warn, Le = console.error, Ve = console.group, Ue = console.groupCollapsed, Ne = console.groupEnd;\n          var t = {\n            configurable: !0,\n            enumerable: !0,\n            value: $e,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: t,\n            log: t,\n            warn: t,\n            error: t,\n            group: t,\n            groupCollapsed: t,\n            groupEnd: t\n          });\n        }\n        ee++;\n      }\n    }\n    function Nt() {\n      {\n        if (ee--, ee === 0) {\n          var t = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: K({}, t, {\n              value: Oe\n            }),\n            info: K({}, t, {\n              value: Fe\n            }),\n            warn: K({}, t, {\n              value: Ae\n            }),\n            error: K({}, t, {\n              value: Le\n            }),\n            group: K({}, t, {\n              value: Ve\n            }),\n            groupCollapsed: K({}, t, {\n              value: Ue\n            }),\n            groupEnd: K({}, t, {\n              value: Ne\n            })\n          });\n        }\n        ee < 0 && H(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var me = G.ReactCurrentDispatcher, ke;\n    function ce(t, l, u) {\n      {\n        if (ke === void 0)\n          try {\n            throw Error();\n          } catch (m) {\n            var f = m.stack.trim().match(/\\n( *(at )?)/);\n            ke = f && f[1] || \"\";\n          }\n        return `\n` + ke + t;\n      }\n    }\n    var ye = !1, se;\n    {\n      var $t = typeof WeakMap == \"function\" ? WeakMap : Map;\n      se = new $t();\n    }\n    function We(t, l) {\n      if (!t || ye)\n        return \"\";\n      {\n        var u = se.get(t);\n        if (u !== void 0)\n          return u;\n      }\n      var f;\n      ye = !0;\n      var m = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var C;\n      C = me.current, me.current = null, Ut();\n      try {\n        if (l) {\n          var v = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(v.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(v, []);\n            } catch (V) {\n              f = V;\n            }\n            Reflect.construct(t, [], v);\n          } else {\n            try {\n              v.call();\n            } catch (V) {\n              f = V;\n            }\n            t.call(v.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (V) {\n            f = V;\n          }\n          t();\n        }\n      } catch (V) {\n        if (V && f && typeof V.stack == \"string\") {\n          for (var h = V.stack.split(`\n`), I = f.stack.split(`\n`), M = h.length - 1, E = I.length - 1; M >= 1 && E >= 0 && h[M] !== I[E]; )\n            E--;\n          for (; M >= 1 && E >= 0; M--, E--)\n            if (h[M] !== I[E]) {\n              if (M !== 1 || E !== 1)\n                do\n                  if (M--, E--, E < 0 || h[M] !== I[E]) {\n                    var _ = `\n` + h[M].replace(\" at new \", \" at \");\n                    return t.displayName && _.includes(\"<anonymous>\") && (_ = _.replace(\"<anonymous>\", t.displayName)), typeof t == \"function\" && se.set(t, _), _;\n                  }\n                while (M >= 1 && E >= 0);\n              break;\n            }\n        }\n      } finally {\n        ye = !1, me.current = C, Nt(), Error.prepareStackTrace = m;\n      }\n      var X = t ? t.displayName || t.name : \"\", ot = X ? ce(X) : \"\";\n      return typeof t == \"function\" && se.set(t, ot), ot;\n    }\n    function Wt(t, l, u) {\n      return We(t, !1);\n    }\n    function Yt(t) {\n      var l = t.prototype;\n      return !!(l && l.isReactComponent);\n    }\n    function de(t, l, u) {\n      if (t == null)\n        return \"\";\n      if (typeof t == \"function\")\n        return We(t, Yt(t));\n      if (typeof t == \"string\")\n        return ce(t);\n      switch (t) {\n        case y:\n          return ce(\"Suspense\");\n        case x:\n          return ce(\"SuspenseList\");\n      }\n      if (typeof t == \"object\")\n        switch (t.$$typeof) {\n          case a:\n            return Wt(t.render);\n          case p:\n            return de(t.type, l, u);\n          case S: {\n            var f = t, m = f._payload, C = f._init;\n            try {\n              return de(C(m), l, u);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var ue = Object.prototype.hasOwnProperty, Ye = {}, qe = G.ReactDebugCurrentFrame;\n    function ge(t) {\n      if (t) {\n        var l = t._owner, u = de(t.type, t._source, l ? l.type : null);\n        qe.setExtraStackFrame(u);\n      } else\n        qe.setExtraStackFrame(null);\n    }\n    function qt(t, l, u, f, m) {\n      {\n        var C = Function.call.bind(ue);\n        for (var v in t)\n          if (C(t, v)) {\n            var h = void 0;\n            try {\n              if (typeof t[v] != \"function\") {\n                var I = Error((f || \"React class\") + \": \" + u + \" type `\" + v + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof t[v] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw I.name = \"Invariant Violation\", I;\n              }\n              h = t[v](l, v, f, u, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (M) {\n              h = M;\n            }\n            h && !(h instanceof Error) && (ge(m), H(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", f || \"React class\", u, v, typeof h), ge(null)), h instanceof Error && !(h.message in Ye) && (Ye[h.message] = !0, ge(m), H(\"Failed %s type: %s\", u, h.message), ge(null));\n          }\n      }\n    }\n    var Kt = Array.isArray;\n    function pe(t) {\n      return Kt(t);\n    }\n    function Gt(t) {\n      {\n        var l = typeof Symbol == \"function\" && Symbol.toStringTag, u = l && t[Symbol.toStringTag] || t.constructor.name || \"Object\";\n        return u;\n      }\n    }\n    function Jt(t) {\n      try {\n        return Ke(t), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function Ke(t) {\n      return \"\" + t;\n    }\n    function Ge(t) {\n      if (Jt(t))\n        return H(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", Gt(t)), Ke(t);\n    }\n    var te = G.ReactCurrentOwner, Xt = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, Je, Xe, Ce;\n    Ce = {};\n    function Zt(t) {\n      if (ue.call(t, \"ref\")) {\n        var l = Object.getOwnPropertyDescriptor(t, \"ref\").get;\n        if (l && l.isReactWarning)\n          return !1;\n      }\n      return t.ref !== void 0;\n    }\n    function Qt(t) {\n      if (ue.call(t, \"key\")) {\n        var l = Object.getOwnPropertyDescriptor(t, \"key\").get;\n        if (l && l.isReactWarning)\n          return !1;\n      }\n      return t.key !== void 0;\n    }\n    function er(t, l) {\n      if (typeof t.ref == \"string\" && te.current && l && te.current.stateNode !== l) {\n        var u = L(te.current.type);\n        Ce[u] || (H('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', L(te.current.type), t.ref), Ce[u] = !0);\n      }\n    }\n    function tr(t, l) {\n      {\n        var u = function() {\n          Je || (Je = !0, H(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", l));\n        };\n        u.isReactWarning = !0, Object.defineProperty(t, \"key\", {\n          get: u,\n          configurable: !0\n        });\n      }\n    }\n    function rr(t, l) {\n      {\n        var u = function() {\n          Xe || (Xe = !0, H(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", l));\n        };\n        u.isReactWarning = !0, Object.defineProperty(t, \"ref\", {\n          get: u,\n          configurable: !0\n        });\n      }\n    }\n    var nr = function(t, l, u, f, m, C, v) {\n      var h = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: n,\n        // Built-in properties that belong on the element\n        type: t,\n        key: l,\n        ref: u,\n        props: v,\n        // Record the component responsible for creating this element.\n        _owner: C\n      };\n      return h._store = {}, Object.defineProperty(h._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(h, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: f\n      }), Object.defineProperty(h, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: m\n      }), Object.freeze && (Object.freeze(h.props), Object.freeze(h)), h;\n    };\n    function or(t, l, u, f, m) {\n      {\n        var C, v = {}, h = null, I = null;\n        u !== void 0 && (Ge(u), h = \"\" + u), Qt(l) && (Ge(l.key), h = \"\" + l.key), Zt(l) && (I = l.ref, er(l, m));\n        for (C in l)\n          ue.call(l, C) && !Xt.hasOwnProperty(C) && (v[C] = l[C]);\n        if (t && t.defaultProps) {\n          var M = t.defaultProps;\n          for (C in M)\n            v[C] === void 0 && (v[C] = M[C]);\n        }\n        if (h || I) {\n          var E = typeof t == \"function\" ? t.displayName || t.name || \"Unknown\" : t;\n          h && tr(v, E), I && rr(v, E);\n        }\n        return nr(t, h, I, m, f, te.current, v);\n      }\n    }\n    var je = G.ReactCurrentOwner, Ze = G.ReactDebugCurrentFrame;\n    function J(t) {\n      if (t) {\n        var l = t._owner, u = de(t.type, t._source, l ? l.type : null);\n        Ze.setExtraStackFrame(u);\n      } else\n        Ze.setExtraStackFrame(null);\n    }\n    var Te;\n    Te = !1;\n    function we(t) {\n      return typeof t == \"object\" && t !== null && t.$$typeof === n;\n    }\n    function Qe() {\n      {\n        if (je.current) {\n          var t = L(je.current.type);\n          if (t)\n            return `\n\nCheck the render method of \\`` + t + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function ir(t) {\n      {\n        if (t !== void 0) {\n          var l = t.fileName.replace(/^.*[\\\\\\/]/, \"\"), u = t.lineNumber;\n          return `\n\nCheck your code at ` + l + \":\" + u + \".\";\n        }\n        return \"\";\n      }\n    }\n    var et = {};\n    function ar(t) {\n      {\n        var l = Qe();\n        if (!l) {\n          var u = typeof t == \"string\" ? t : t.displayName || t.name;\n          u && (l = `\n\nCheck the top-level render call using <` + u + \">.\");\n        }\n        return l;\n      }\n    }\n    function tt(t, l) {\n      {\n        if (!t._store || t._store.validated || t.key != null)\n          return;\n        t._store.validated = !0;\n        var u = ar(l);\n        if (et[u])\n          return;\n        et[u] = !0;\n        var f = \"\";\n        t && t._owner && t._owner !== je.current && (f = \" It was passed a child from \" + L(t._owner.type) + \".\"), J(t), H('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', u, f), J(null);\n      }\n    }\n    function rt(t, l) {\n      {\n        if (typeof t != \"object\")\n          return;\n        if (pe(t))\n          for (var u = 0; u < t.length; u++) {\n            var f = t[u];\n            we(f) && tt(f, l);\n          }\n        else if (we(t))\n          t._store && (t._store.validated = !0);\n        else if (t) {\n          var m = Bt(t);\n          if (typeof m == \"function\" && m !== t.entries)\n            for (var C = m.call(t), v; !(v = C.next()).done; )\n              we(v.value) && tt(v.value, l);\n        }\n      }\n    }\n    function lr(t) {\n      {\n        var l = t.type;\n        if (l == null || typeof l == \"string\")\n          return;\n        var u;\n        if (typeof l == \"function\")\n          u = l.propTypes;\n        else if (typeof l == \"object\" && (l.$$typeof === a || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        l.$$typeof === p))\n          u = l.propTypes;\n        else\n          return;\n        if (u) {\n          var f = L(l);\n          qt(u, t.props, \"prop\", f, t);\n        } else if (l.PropTypes !== void 0 && !Te) {\n          Te = !0;\n          var m = L(l);\n          H(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", m || \"Unknown\");\n        }\n        typeof l.getDefaultProps == \"function\" && !l.getDefaultProps.isReactClassApproved && H(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function cr(t) {\n      {\n        for (var l = Object.keys(t.props), u = 0; u < l.length; u++) {\n          var f = l[u];\n          if (f !== \"children\" && f !== \"key\") {\n            J(t), H(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", f), J(null);\n            break;\n          }\n        }\n        t.ref !== null && (J(t), H(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), J(null));\n      }\n    }\n    function nt(t, l, u, f, m, C) {\n      {\n        var v = Lt(t);\n        if (!v) {\n          var h = \"\";\n          (t === void 0 || typeof t == \"object\" && t !== null && Object.keys(t).length === 0) && (h += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var I = ir(m);\n          I ? h += I : h += Qe();\n          var M;\n          t === null ? M = \"null\" : pe(t) ? M = \"array\" : t !== void 0 && t.$$typeof === n ? (M = \"<\" + (L(t.type) || \"Unknown\") + \" />\", h = \" Did you accidentally export a JSX literal instead of a component?\") : M = typeof t, H(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", M, h);\n        }\n        var E = or(t, l, u, m, C);\n        if (E == null)\n          return E;\n        if (v) {\n          var _ = l.children;\n          if (_ !== void 0)\n            if (f)\n              if (pe(_)) {\n                for (var X = 0; X < _.length; X++)\n                  rt(_[X], t);\n                Object.freeze && Object.freeze(_);\n              } else\n                H(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              rt(_, t);\n        }\n        return t === i ? cr(E) : lr(E), E;\n      }\n    }\n    function sr(t, l, u) {\n      return nt(t, l, u, !0);\n    }\n    function dr(t, l, u) {\n      return nt(t, l, u, !1);\n    }\n    var ur = dr, gr = sr;\n    ne.Fragment = i, ne.jsx = ur, ne.jsxs = gr;\n  }()), ne;\n}\n false ? 0 : Me.exports = Ir();\nvar r = Me.exports;\nconst fe = (e) => {\n  const n = `0 4px 12px ${e.colors.shadow}`, o = `1px solid ${e.colors.border}`, i = {\n    default: e.colors.editor.text,\n    gray: e.colors.highlightColors.gray.text,\n    brown: e.colors.highlightColors.brown.text,\n    red: e.colors.highlightColors.red.text,\n    orange: e.colors.highlightColors.orange.text,\n    yellow: e.colors.highlightColors.yellow.text,\n    green: e.colors.highlightColors.green.text,\n    blue: e.colors.highlightColors.blue.text,\n    purple: e.colors.highlightColors.purple.text,\n    pink: e.colors.highlightColors.pink.text\n  }, s = {\n    default: e.colors.editor.background,\n    gray: e.colors.highlightColors.gray.background,\n    brown: e.colors.highlightColors.brown.background,\n    red: e.colors.highlightColors.red.background,\n    orange: e.colors.highlightColors.orange.background,\n    yellow: e.colors.highlightColors.yellow.background,\n    green: e.colors.highlightColors.green.background,\n    blue: e.colors.highlightColors.blue.background,\n    purple: e.colors.highlightColors.purple.background,\n    pink: e.colors.highlightColors.pink.background\n  }, c = `${Math.max(e.borderRadius + 2, 1)}px`, d = `${e.borderRadius}px`, g = `${Math.max(e.borderRadius - 2, 1)}px`;\n  return {\n    activeStyles: {\n      // Removes button press effect.\n      transform: \"none\"\n    },\n    components: {\n      // Slash Menu, Formatting Toolbar dropdown, color picker dropdown\n      Menu: {\n        styles: () => {\n          var a;\n          return {\n            dropdown: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                backgroundColor: e.colors.menu.background,\n                border: o,\n                borderRadius: d,\n                boxShadow: n,\n                color: e.colors.menu.text,\n                padding: \"2px\",\n                overflowY: \"scroll\",\n                \".mantine-Menu-label\": {\n                  backgroundColor: e.colors.menu.background,\n                  color: e.colors.menu.text\n                },\n                \".mantine-Menu-item\": {\n                  backgroundColor: e.colors.menu.background,\n                  border: \"none\",\n                  borderRadius: g,\n                  color: e.colors.menu.text\n                },\n                \".mantine-Menu-item[data-hovered]\": {\n                  backgroundColor: e.colors.hovered.background,\n                  border: \"none\",\n                  color: e.colors.hovered.text\n                }\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).Menu) || {}\n            )\n          };\n        }\n      },\n      Tabs: {\n        styles: () => ({\n          root: {\n            width: \"100%\",\n            backgroundColor: e.colors.menu.background\n          },\n          tabsList: {\n            borderColor: e.colors.hovered.background\n          },\n          tab: {\n            color: e.colors.menu.text,\n            borderColor: e.colors.hovered.background,\n            \"&:hover\": {\n              color: e.colors.hovered.text,\n              backgroundColor: e.colors.hovered.background,\n              borderColor: e.colors.hovered.background\n            },\n            \"&[data-active], &[data-active]&:hover\": {\n              color: e.colors.menu.text,\n              borderColor: e.colors.menu.text\n            }\n          },\n          panel: {\n            padding: \"8px\",\n            \".mantine-UnstyledButton-root\": {\n              width: \"60%\",\n              border: `solid ${e.colors.border} 1px`,\n              borderRadius: \"4px\",\n              height: \"32px\"\n            },\n            \".mantine-UnstyledButton-root:hover\": {\n              color: e.colors.hovered.text,\n              backgroundColor: e.colors.hovered.background\n            }\n          }\n        })\n      },\n      FileInput: {\n        styles: () => ({\n          input: {\n            color: e.colors.menu.text,\n            backgroundColor: e.colors.menu.background,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            \"&:hover\": {\n              backgroundColor: e.colors.hovered.background\n            }\n          },\n          wrapper: {\n            border: `solid ${e.colors.border} 1px`,\n            borderRadius: \"4px\"\n          },\n          placeholder: {\n            color: `${e.colors.menu.text} !important`,\n            fontWeight: 600\n          }\n        })\n      },\n      TextInput: {\n        styles: () => ({\n          input: {\n            color: e.colors.menu.text,\n            backgroundColor: e.colors.menu.background,\n            border: `solid ${e.colors.border} 1px`,\n            borderRadius: \"4px\",\n            height: \"32px\"\n          }\n        })\n      },\n      ColorIcon: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                border: o,\n                borderRadius: g\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).ColorIcon) || {}\n            )\n          };\n        }\n      },\n      DragHandleMenu: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                \".mantine-Menu-item\": {\n                  fontSize: \"12px\",\n                  height: \"30px\"\n                }\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).DragHandleMenu) || {}\n            )\n          };\n        }\n      },\n      Editor: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                \".ProseMirror\": {\n                  backgroundColor: e.colors.editor.background,\n                  borderRadius: c,\n                  color: e.colors.editor.text,\n                  fontFamily: e.fontFamily\n                },\n                // Placeholders\n                [`.${_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.isEmpty} .${_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.inlineContent}:before, .${_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.isFilter} .${_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.inlineContent}:before`]: {\n                  color: e.colors.sideMenu\n                },\n                // Indent lines\n                [`.${_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.blockGroup}`]: {\n                  [`.${_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.blockGroup}`]: {\n                    [`.${_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.blockOuter}:not([data-prev-depth-changed])::before`]: {\n                      borderLeft: `1px solid ${e.colors.sideMenu}`\n                    }\n                  }\n                },\n                // Highlight text colors\n                ...Object.fromEntries(\n                  Object.entries(i).map(([y, x]) => [\n                    `[data-text-color=\"${y}\"]`,\n                    { color: x }\n                  ])\n                ),\n                // Highlight background colors\n                ...Object.fromEntries(\n                  Object.entries(s).map(([y, x]) => [\n                    `[data-background-color=\"${y}\"]`,\n                    { backgroundColor: x }\n                  ])\n                )\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).Editor) || {}\n            )\n          };\n        }\n      },\n      Toolbar: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                backgroundColor: e.colors.menu.background,\n                boxShadow: n,\n                border: o,\n                borderRadius: d,\n                flexWrap: \"nowrap\",\n                gap: \"2px\",\n                padding: \"2px\",\n                width: \"fit-content\",\n                // Button (including dropdown target)\n                \".mantine-Button-root, .mantine-ActionIcon-root\": {\n                  backgroundColor: e.colors.menu.background,\n                  border: \"none\",\n                  borderRadius: g,\n                  color: e.colors.menu.text\n                },\n                // Hovered button\n                \".mantine-Button-root:hover, .mantine-ActionIcon-root:hover\": {\n                  backgroundColor: e.colors.hovered.background,\n                  border: \"none\",\n                  color: e.colors.hovered.text\n                },\n                // Selected button\n                \".mantine-Button-root[data-selected], .mantine-ActionIcon-root[data-selected]\": {\n                  backgroundColor: e.colors.selected.background,\n                  border: \"none\",\n                  color: e.colors.selected.text\n                },\n                // Disabled button\n                \".mantine-Button-root[data-disabled], .mantine-ActionIcon-root[data-disabled]\": {\n                  backgroundColor: e.colors.disabled.background,\n                  border: \"none\",\n                  color: e.colors.disabled.text\n                },\n                // Dropdown\n                \".mantine-Menu-dropdown\": {\n                  // Dropdown item\n                  \".mantine-Menu-item\": {\n                    fontSize: \"12px\",\n                    height: \"30px\",\n                    \".mantine-Menu-itemRightSection\": {\n                      paddingLeft: \"5px\"\n                    }\n                  },\n                  \".mantine-Menu-item:hover\": {\n                    backgroundColor: e.colors.hovered.background\n                  }\n                }\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).Toolbar) || {}\n            )\n          };\n        }\n      },\n      ToolbarInputDropdown: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                backgroundColor: e.colors.menu.background,\n                border: o,\n                borderRadius: d,\n                boxShadow: n,\n                color: e.colors.menu.text,\n                gap: \"4px\",\n                minWidth: \"145px\",\n                padding: \"2px\",\n                // Row\n                \".mantine-Group-root\": {\n                  flexWrap: \"nowrap\",\n                  // Row input field\n                  \".mantine-TextInput-root, .mantine-FileInput-root\": {\n                    width: \"300px\",\n                    \".mantine-TextInput-wrapper:hover\": {\n                      backgroundColor: e.colors.hovered.background\n                    },\n                    \".mantine-TextInput-wrapper, .mantine-FileInput-wrapper\": {\n                      padding: 0,\n                      borderRadius: \"4px\",\n                      \".mantine-FileInput-icon\": {\n                        color: e.colors.menu.text\n                      },\n                      \".mantine-TextInput-input, .mantine-FileInput-input\": {\n                        border: \"none\",\n                        fontSize: \"12px\",\n                        \".mantine-FileInput-placeholder\": {\n                          color: e.colors.menu.text\n                        }\n                      },\n                      \".mantine-FileInput-input:hover\": {\n                        backgroundColor: e.colors.hovered.background\n                      }\n                    }\n                  }\n                }\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).EditHyperlinkMenu) || {}\n            )\n          };\n        }\n      },\n      Tooltip: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                backgroundColor: e.colors.tooltip.background,\n                border: o,\n                borderRadius: d,\n                boxShadow: n,\n                color: e.colors.tooltip.text,\n                padding: \"4px 10px\",\n                textAlign: \"center\",\n                \"div ~ div\": {\n                  color: e.colors.tooltip.text\n                }\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).Tooltip) || {}\n            )\n          };\n        }\n      },\n      SlashMenu: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                position: \"relative\",\n                \".mantine-Menu-item\": {\n                  // Icon\n                  \".mantine-Menu-itemIcon\": {\n                    backgroundColor: e.colors.tooltip.background,\n                    borderRadius: g,\n                    color: e.colors.tooltip.text,\n                    padding: \"8px\"\n                  },\n                  // Text\n                  \".mantine-Menu-itemLabel\": {\n                    paddingRight: \"16px\",\n                    \".mantine-Stack-root\": {\n                      gap: \"0\"\n                    }\n                  },\n                  // Badge (keyboard shortcut)\n                  \".mantine-Menu-itemRightSection\": {\n                    \".mantine-Badge-root\": {\n                      backgroundColor: e.colors.tooltip.background,\n                      color: e.colors.tooltip.text\n                    }\n                  }\n                }\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).SlashMenu) || {}\n            )\n          };\n        }\n      },\n      SideMenu: {\n        styles: () => {\n          var a;\n          return {\n            root: lodash__WEBPACK_IMPORTED_MODULE_3__.merge(\n              {\n                backgroundColor: \"transparent\",\n                \".mantine-UnstyledButton-root\": {\n                  backgroundColor: \"transparent\",\n                  color: e.colors.sideMenu\n                },\n                \".mantine-UnstyledButton-root:hover\": {\n                  backgroundColor: e.colors.hovered.background\n                }\n              },\n              ((a = e.componentStyles) == null ? void 0 : a.call(e, e).SideMenu) || {}\n            )\n          };\n        }\n      }\n    },\n    fontFamily: e.fontFamily,\n    other: {\n      textColors: i,\n      backgroundColors: s\n    }\n  };\n}, _e = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((e, n) => {\n  const { classes: o } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"Toolbar\"\n  });\n  return /* @__PURE__ */ r.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Group,\n    {\n      className: e.className ? `${o.root} ${e.className}` : o.root,\n      ref: n,\n      ...e,\n      children: e.children\n    }\n  );\n});\nvar xt = {\n  color: void 0,\n  size: void 0,\n  className: void 0,\n  style: void 0,\n  attr: void 0\n}, ct = react__WEBPACK_IMPORTED_MODULE_0__.createContext && react__WEBPACK_IMPORTED_MODULE_0__.createContext(xt), W = globalThis && globalThis.__assign || function() {\n  return W = Object.assign || function(e) {\n    for (var n, o = 1, i = arguments.length; o < i; o++) {\n      n = arguments[o];\n      for (var s in n)\n        Object.prototype.hasOwnProperty.call(n, s) && (e[s] = n[s]);\n    }\n    return e;\n  }, W.apply(this, arguments);\n}, Br = globalThis && globalThis.__rest || function(e, n) {\n  var o = {};\n  for (var i in e)\n    Object.prototype.hasOwnProperty.call(e, i) && n.indexOf(i) < 0 && (o[i] = e[i]);\n  if (e != null && typeof Object.getOwnPropertySymbols == \"function\")\n    for (var s = 0, i = Object.getOwnPropertySymbols(e); s < i.length; s++)\n      n.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(e, i[s]) && (o[i[s]] = e[i[s]]);\n  return o;\n};\nfunction mt(e) {\n  return e && e.map(function(n, o) {\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(n.tag, W({\n      key: o\n    }, n.attr), mt(n.child));\n  });\n}\nfunction j(e) {\n  return function(n) {\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_r, W({\n      attr: W({}, e.attr)\n    }, n), mt(e.child));\n  };\n}\nfunction _r(e) {\n  var n = function(o) {\n    var i = e.attr, s = e.size, c = e.title, d = Br(e, [\"attr\", \"size\", \"title\"]), g = s || o.size || \"1em\", a;\n    return o.className && (a = o.className), e.className && (a = (a ? a + \" \" : \"\") + e.className), react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", W({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, o.attr, i, d, {\n      className: a,\n      style: W(W({\n        color: e.color || o.color\n      }, o.style), e.style),\n      height: g,\n      width: g,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), c && react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", null, c), e.children);\n  };\n  return ct !== void 0 ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(ct.Consumer, null, function(o) {\n    return n(o);\n  }) : n(xt);\n}\nfunction Dr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M23 12l-7.071 7.071-1.414-1.414L20.172 12l-5.657-5.657 1.414-1.414L23 12zM3.828 12l5.657 5.657-1.414 1.414L1 12l7.071-7.071 1.414 1.414L3.828 12z\" } }] }] })(e);\n}\nfunction Pr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M3 4h18v2H3V4zm2 15h14v2H5v-2zm-2-5h18v2H3v-2zm2-5h14v2H5V9z\" } }] }] })(e);\n}\nfunction Or(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M3 4h18v2H3V4zm0 15h18v2H3v-2zm0-5h18v2H3v-2zm0-5h18v2H3V9z\" } }] }] })(e);\n}\nfunction Fr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M3 4h18v2H3V4zm0 15h14v2H3v-2zm0-5h18v2H3v-2zm0-5h14v2H3V9z\" } }] }] })(e);\n}\nfunction Ar(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M3 4h18v2H3V4zm4 15h14v2H7v-2zm-4-5h18v2H3v-2zm4-5h14v2H7V9z\" } }] }] })(e);\n}\nfunction Lr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M8 11h4.5a2.5 2.5 0 1 0 0-5H8v5zm10 4.5a4.5 4.5 0 0 1-4.5 4.5H6V4h6.5a4.5 4.5 0 0 1 3.256 7.606A4.498 4.498 0 0 1 18 15.5zM8 13v5h5.5a2.5 2.5 0 1 0 0-5H8z\" } }] }] })(e);\n}\nfunction kt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0H24V24H0z\" } }, { tag: \"path\", attr: { d: \"M13 20h-2v-7H4v7H2V4h2v7h7V4h2v16zm8-12v12h-2v-9.796l-2 .536V8.67L19.5 8H21z\" } }] }] })(e);\n}\nfunction yt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0H24V24H0z\" } }, { tag: \"path\", attr: { d: \"M4 4v7h7V4h2v16h-2v-7H4v7H2V4h2zm14.5 4c2.071 0 3.75 1.679 3.75 3.75 0 .857-.288 1.648-.772 2.28l-.148.18L18.034 18H22v2h-7v-1.556l4.82-5.546c.268-.307.43-.709.43-1.148 0-.966-.784-1.75-1.75-1.75-.918 0-1.671.707-1.744 1.606l-.006.144h-2C14.75 9.679 16.429 8 18.5 8z\" } }] }] })(e);\n}\nfunction pt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0H24V24H0z\" } }, { tag: \"path\", attr: { d: \"M22 8l-.002 2-2.505 2.883c1.59.435 2.757 1.89 2.757 3.617 0 2.071-1.679 3.75-3.75 3.75-1.826 0-3.347-1.305-3.682-3.033l1.964-.382c.156.806.866 1.415 1.718 1.415.966 0 1.75-.784 1.75-1.75s-.784-1.75-1.75-1.75c-.286 0-.556.069-.794.19l-1.307-1.547L19.35 10H15V8h7zM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2z\" } }] }] })(e);\n}\nfunction Vr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M3 4h18v2H3V4zm0 15h18v2H3v-2zm8-5h10v2H11v-2zm0-5h10v2H11V9zm-8 3.5L7 9v7l-4-3.5z\" } }] }] })(e);\n}\nfunction Ur(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M3 4h18v2H3V4zm0 15h18v2H3v-2zm8-5h10v2H11v-2zm0-5h10v2H11V9zm-4 3.5L3 16V9l4 3.5z\" } }] }] })(e);\n}\nfunction Nr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M15 20H7v-2h2.927l2.116-12H9V4h8v2h-2.927l-2.116 12H15z\" } }] }] })(e);\n}\nfunction $r(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M17 17h5v2h-3v3h-2v-5zM7 7H2V5h3V2h2v5zm11.364 8.536L16.95 14.12l1.414-1.414a5 5 0 1 0-7.071-7.071L9.879 7.05 8.464 5.636 9.88 4.222a7 7 0 0 1 9.9 9.9l-1.415 1.414zm-2.828 2.828l-1.415 1.414a7 7 0 0 1-9.9-9.9l1.415-1.414L7.05 9.88l-1.414 1.414a5 5 0 1 0 7.071 7.071l1.414-1.414 1.415 1.414zm-.708-10.607l1.415 1.415-7.071 7.07-1.415-1.414 7.071-7.07z\" } }] }] })(e);\n}\nfunction Ct(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M18.364 15.536L16.95 14.12l1.414-1.414a5 5 0 1 0-7.071-7.071L9.879 7.05 8.464 5.636 9.88 4.222a7 7 0 0 1 9.9 9.9l-1.415 1.414zm-2.828 2.828l-1.415 1.414a7 7 0 0 1-9.9-9.9l1.415-1.414L7.05 9.88l-1.414 1.414a5 5 0 1 0 7.071 7.071l1.414-1.414 1.415 1.414zm-.708-10.607l1.415 1.415-7.071 7.07-1.415-1.414 7.071-7.07z\" } }] }] })(e);\n}\nfunction jt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M8 4h13v2H8V4zM5 3v3h1v1H3V6h1V4H3V3h2zM3 14v-2.5h2V11H3v-1h3v2.5H4v.5h2v1H3zm2 5.5H3v-1h2V18H3v-1h3v4H3v-1h2v-.5zM8 11h13v2H8v-2zm0 7h13v2H8v-2z\" } }] }] })(e);\n}\nfunction Tt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M8 4h13v2H8V4zM4.5 6.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm0 7a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm0 6.9a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zM8 11h13v2H8v-2zm0 7h13v2H8v-2z\" } }] }] })(e);\n}\nfunction Wr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M17.154 14c.23.516.346 1.09.346 1.72 0 1.342-.524 2.392-1.571 3.147C14.88 19.622 13.433 20 11.586 20c-1.64 0-3.263-.381-4.87-1.144V16.6c1.52.877 3.075 1.316 4.666 1.316 2.551 0 3.83-.732 3.839-2.197a2.21 2.21 0 0 0-.648-1.603l-.12-.117H3v-2h18v2h-3.846zm-4.078-3H7.629a4.086 4.086 0 0 1-.481-.522C6.716 9.92 6.5 9.246 6.5 8.452c0-1.236.466-2.287 1.397-3.153C8.83 4.433 10.271 4 12.222 4c1.471 0 2.879.328 4.222.984v2.152c-1.2-.687-2.515-1.03-3.946-1.03-2.48 0-3.719.782-3.719 2.346 0 .42.218.786.654 1.099.436.313.974.562 1.613.75.62.18 1.297.414 2.03.699z\" } }] }] })(e);\n}\nfunction ie(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M13 6v15h-2V6H5V4h14v2z\" } }] }] })(e);\n}\nfunction Yr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M8 3v9a4 4 0 1 0 8 0V3h2v9a6 6 0 1 1-12 0V3h2zM4 20h16v2H4v-2z\" } }] }] })(e);\n}\nfunction qr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M5 11.1l2-2 5.5 5.5 3.5-3.5 3 3V5H5v6.1zM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1zm11.5 7a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" } }] }] })(e);\n}\nfunction Kr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0H24V24H0z\" } }, { tag: \"path\", attr: { d: \"M20 3c.552 0 1 .448 1 1v1.757l-2 2V5H5v8.1l4-4 4.328 4.329-1.327 1.327-.006 4.239 4.246.006 1.33-1.33L18.899 19H19v-2.758l2-2V20c0 .552-.448 1-1 1H4c-.552 0-1-.448-1-1V4c0-.552.448-1 1-1h16zm1.778 4.808l1.414 1.414L15.414 17l-1.416-.002.002-1.412 7.778-7.778zM15.5 7c.828 0 1.5.672 1.5 1.5s-.672 1.5-1.5 1.5S14 9.328 14 8.5 14.672 7 15.5 7z\" } }] }] })(e);\n}\nfunction Gr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"g\", attr: {}, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0z\" } }, { tag: \"path\", attr: { d: \"M10 6v2H5v11h11v-5h2v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h6zm11-3v9l-3.794-3.793-5.999 6-1.414-1.414 5.999-6L12 3h9z\" } }] }] })(e);\n}\nfunction Re(e) {\n  return j({ tag: \"svg\", attr: { version: \"1.2\", baseProfile: \"tiny\", viewBox: \"0 0 24 24\" }, child: [{ tag: \"path\", attr: { d: \"M16.972 6.251c-.967-.538-2.185-.188-2.72.777l-3.713 6.682-2.125-2.125c-.781-.781-2.047-.781-2.828 0-.781.781-.781 2.047 0 2.828l4 4c.378.379.888.587 1.414.587l.277-.02c.621-.087 1.166-.46 1.471-1.009l5-9c.537-.966.189-2.183-.776-2.72z\" } }] })(e);\n}\nfunction Jr(e) {\n  const n = e.icon;\n  return /* @__PURE__ */ r.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Item,\n    {\n      onClick: e.onClick,\n      icon: n && /* @__PURE__ */ r.jsx(n, { size: 16 }),\n      rightSection: e.isSelected ? /* @__PURE__ */ r.jsx(Re, { size: 16 }) : (\n        // Ensures space for tick even if item isn't currently selected.\n        /* @__PURE__ */ r.jsx(\"div\", { style: { width: \"16px\", padding: \"0\" } })\n      ),\n      disabled: e.isDisabled,\n      children: e.text\n    },\n    e.text\n  );\n}\nfunction Xr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 20 20\", fill: \"currentColor\", \"aria-hidden\": \"true\" }, child: [{ tag: \"path\", attr: { fillRule: \"evenodd\", d: \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\", clipRule: \"evenodd\" } }] })(e);\n}\nfunction Zr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 20 20\", fill: \"currentColor\", \"aria-hidden\": \"true\" }, child: [{ tag: \"path\", attr: { fillRule: \"evenodd\", d: \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\", clipRule: \"evenodd\" } }] })(e);\n}\nconst Qr = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((e, n) => {\n  const o = e.icon;\n  return /* @__PURE__ */ r.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Button,\n    {\n      leftIcon: o && /* @__PURE__ */ r.jsx(o, { size: 16 }),\n      rightIcon: /* @__PURE__ */ r.jsx(Xr, {}),\n      size: \"xs\",\n      variant: \"subtle\",\n      disabled: e.isDisabled,\n      onClick: e.onClick,\n      ref: n,\n      children: e.text\n    }\n  );\n});\nfunction xe() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  return {\n    ref: e,\n    updateMaxHeight: () => {\n      setTimeout(() => {\n        if (e.current && e.current.childElementCount > 0) {\n          e.current.firstElementChild.style.maxHeight = \"none\";\n          const n = e.current.firstElementChild.getBoundingClientRect();\n          e.current.firstElementChild.style.maxHeight = `${Math.min(\n            n.top >= 0 ? window.innerHeight - n.top - 20 : n.bottom - 20\n          )}px`;\n        }\n      }, 10);\n    }\n  };\n}\nfunction en(e) {\n  const n = e.items.filter((s) => s.isSelected)[0], { ref: o, updateMaxHeight: i } = xe();\n  return n ? /* @__PURE__ */ r.jsxs(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu,\n    {\n      exitTransitionDuration: 0,\n      disabled: e.isDisabled,\n      onOpen: i,\n      children: [\n        /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Target, { children: /* @__PURE__ */ r.jsx(\n          Qr,\n          {\n            text: n.text,\n            icon: n.icon,\n            isDisabled: n.isDisabled\n          }\n        ) }),\n        /* @__PURE__ */ r.jsx(\"div\", { ref: o, children: /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Dropdown, { children: e.items.map((s) => /* @__PURE__ */ r.jsx(Jr, { ...s }, s.text)) }) })\n      ]\n    }\n  ) : null;\n}\nfunction tn(e, n) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (e._tiptapEditor.on(\"update\", n), () => {\n    e._tiptapEditor.off(\"update\", n);\n  }), [n, e._tiptapEditor]);\n}\nfunction rn(e, n) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (e._tiptapEditor.on(\"selectionUpdate\", n), () => {\n    e._tiptapEditor.off(\"selectionUpdate\", n);\n  }), [n, e._tiptapEditor]);\n}\nfunction q(e, n) {\n  tn(e, n), rn(e, n);\n}\nconst nn = [\n  {\n    name: \"Paragraph\",\n    type: \"paragraph\",\n    icon: ie,\n    isSelected: (e) => e.type === \"paragraph\"\n  },\n  {\n    name: \"Heading 1\",\n    type: \"heading\",\n    props: { level: 1 },\n    icon: kt,\n    isSelected: (e) => e.type === \"heading\" && \"level\" in e.props && e.props.level === \"1\"\n  },\n  {\n    name: \"Heading 2\",\n    type: \"heading\",\n    props: { level: 2 },\n    icon: yt,\n    isSelected: (e) => e.type === \"heading\" && \"level\" in e.props && e.props.level === \"2\"\n  },\n  {\n    name: \"Heading 3\",\n    type: \"heading\",\n    props: { level: 3 },\n    icon: pt,\n    isSelected: (e) => e.type === \"heading\" && \"level\" in e.props && e.props.level === \"3\"\n  },\n  {\n    name: \"Bullet List\",\n    type: \"bulletListItem\",\n    icon: Tt,\n    isSelected: (e) => e.type === \"bulletListItem\"\n  },\n  {\n    name: \"Numbered List\",\n    type: \"numberedListItem\",\n    icon: jt,\n    isSelected: (e) => e.type === \"numberedListItem\"\n  }\n], on = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.editor.getTextCursorPosition().block\n  ), i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (e.items || nn).filter((d) => {\n    if (!(d.type in e.editor.schema))\n      return !1;\n    for (const [g, a] of Object.entries(d.props || {})) {\n      const y = e.editor.schema[d.type].propSchema;\n      if (!(g in y) || y[g].values !== void 0 && !y[g].values.includes(a))\n        return !1;\n    }\n    return !0;\n  }), [e.editor, e.items]), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => i.find((d) => d.type === n.type) !== void 0,\n    [n.type, i]\n  ), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const d = (g) => {\n      e.editor.focus(), e.editor.updateBlock(n, {\n        type: g.type,\n        props: g.props\n      });\n    };\n    return i.map((g) => ({\n      text: g.name,\n      icon: g.icon,\n      onClick: () => d(g),\n      isSelected: g.isSelected(n)\n    }));\n  }, [n, i, e.editor]);\n  return q(e.editor, () => {\n    o(e.editor.getTextCursorPosition().block);\n  }), s ? /* @__PURE__ */ r.jsx(en, { items: c }) : null;\n}, an = (e) => {\n  const { classes: n } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"Tooltip\"\n  });\n  return /* @__PURE__ */ r.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Stack, { spacing: 0, className: n.root, children: [\n    /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Text, { size: \"sm\", children: e.mainTooltip }),\n    e.secondaryTooltip && /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Text, { size: \"xs\", children: e.secondaryTooltip })\n  ] });\n}, P = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  (e, n) => {\n    const o = e.icon;\n    return /* @__PURE__ */ r.jsx(\n      _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n      {\n        content: /* @__PURE__ */ r.jsx(\n          an,\n          {\n            mainTooltip: e.mainTooltip,\n            secondaryTooltip: e.secondaryTooltip\n          }\n        ),\n        trigger: \"mouseenter\",\n        children: e.children ? /* @__PURE__ */ r.jsxs(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Button,\n          {\n            onClick: e.onClick,\n            \"data-selected\": e.isSelected ? \"true\" : void 0,\n            \"data-test\": e.mainTooltip.slice(0, 1).toLowerCase() + e.mainTooltip.replace(/\\s+/g, \"\").slice(1),\n            size: \"xs\",\n            disabled: e.isDisabled || !1,\n            ref: n,\n            children: [\n              o && /* @__PURE__ */ r.jsx(o, {}),\n              e.children\n            ]\n          }\n        ) : /* @__PURE__ */ r.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_4__.ActionIcon,\n          {\n            onClick: e.onClick,\n            \"data-selected\": e.isSelected ? \"true\" : void 0,\n            \"data-test\": e.mainTooltip.slice(0, 1).toLowerCase() + e.mainTooltip.replace(/\\s+/g, \"\").slice(1),\n            size: 30,\n            disabled: e.isDisabled || !1,\n            ref: n,\n            children: o && /* @__PURE__ */ r.jsx(o, {})\n          }\n        )\n      }\n    );\n  }\n);\nfunction Q(e) {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    () => {\n      var i;\n      return ((i = e.getSelection()) == null ? void 0 : i.blocks) || [e.getTextCursorPosition().block];\n    }\n  );\n  return q(\n    e,\n    () => {\n      var i;\n      return o(\n        ((i = e.getSelection()) == null ? void 0 : i.blocks) || [e.getTextCursorPosition().block]\n      );\n    }\n  ), n;\n}\nconst ln = () => typeof navigator < \"u\" && (/Mac/.test(navigator.platform) || /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent));\nfunction F(e) {\n  return ln() ? e.replace(\"Mod\", \"⌘\") : e.replace(\"Mod\", \"Ctrl\");\n}\nconst cn = {\n  bold: \"Mod+B\",\n  italic: \"Mod+I\",\n  underline: \"Mod+U\",\n  strike: \"Mod+Shift+X\",\n  code: \"\"\n}, sn = {\n  bold: Lr,\n  italic: Nr,\n  underline: Yr,\n  strike: Wr,\n  code: Dr\n}, he = (e) => {\n  const n = Q(e.editor), [o, i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.toggledStyle in e.editor.getActiveStyles()\n  );\n  q(e.editor, () => {\n    i(e.toggledStyle in e.editor.getActiveStyles());\n  });\n  const s = (d) => {\n    e.editor.focus(), e.editor.toggleStyles({ [d]: !0 });\n  };\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => !!n.find((d) => d.content !== void 0), [n]) ? /* @__PURE__ */ r.jsx(\n    P,\n    {\n      onClick: () => s(e.toggledStyle),\n      isSelected: o,\n      mainTooltip: e.toggledStyle.slice(0, 1).toUpperCase() + e.toggledStyle.slice(1),\n      secondaryTooltip: F(cn[e.toggledStyle]),\n      icon: sn[e.toggledStyle]\n    }\n  ) : null;\n}, dn = {\n  left: Fr,\n  center: Pr,\n  right: Ar,\n  justify: Or\n}, Se = (e) => {\n  const n = Q(e.editor), o = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const c = n[0];\n    if (\"textAlignment\" in c.props)\n      return c.props.textAlignment;\n  }, [n]), i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (c) => {\n      e.editor.focus();\n      for (const d of n)\n        e.editor.updateBlock(d, {\n          props: { textAlignment: c }\n        });\n    },\n    [e.editor, n]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => !!n.find((c) => \"textAlignment\" in c.props), [n]) ? /* @__PURE__ */ r.jsx(\n    P,\n    {\n      onClick: () => i(e.textAlignment),\n      isSelected: o === e.textAlignment,\n      mainTooltip: e.textAlignment === \"justify\" ? \"Justify Text\" : \"Align Text \" + e.textAlignment.slice(0, 1).toUpperCase() + e.textAlignment.slice(1),\n      icon: dn[e.textAlignment]\n    }\n  ) : null;\n}, Ee = (e) => {\n  const { classes: n } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"ColorIcon\"\n  }), o = e.textColor || \"default\", i = e.backgroundColor || \"default\", s = e.size || 16;\n  return /* @__PURE__ */ r.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Box,\n    {\n      className: n.root,\n      sx: (c) => ({\n        pointerEvents: \"none\",\n        backgroundColor: c.other.backgroundColors[i],\n        color: c.other.textColors[o],\n        fontSize: (s * 0.75).toString() + \"px\",\n        height: s.toString() + \"px\",\n        lineHeight: s.toString() + \"px\",\n        textAlign: \"center\",\n        width: s.toString() + \"px\"\n      }),\n      children: \"A\"\n    }\n  );\n}, wt = (e) => {\n  const n = () => e.text ? /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Label, { children: \"Text\" }),\n    [\n      \"default\",\n      \"gray\",\n      \"brown\",\n      \"red\",\n      \"orange\",\n      \"yellow\",\n      \"green\",\n      \"blue\",\n      \"purple\",\n      \"pink\"\n    ].map((i) => /* @__PURE__ */ r.jsx(\n      _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Item,\n      {\n        onClick: () => {\n          e.onClick && e.onClick(), e.text.setColor(i);\n        },\n        component: \"div\",\n        \"data-test\": \"text-color-\" + i,\n        icon: /* @__PURE__ */ r.jsx(Ee, { textColor: i, size: e.iconSize }),\n        rightSection: e.text.color === i ? /* @__PURE__ */ r.jsx(Re, { size: 16, style: { paddingLeft: \"8px\" } }) : /* @__PURE__ */ r.jsx(\"div\", { style: { width: \"24px\", padding: \"0\" } }),\n        children: i.charAt(0).toUpperCase() + i.slice(1)\n      },\n      \"text-color-\" + i\n    ))\n  ] }) : null, o = () => e.background ? /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Label, { children: \"Background\" }),\n    [\n      \"default\",\n      \"gray\",\n      \"brown\",\n      \"red\",\n      \"orange\",\n      \"yellow\",\n      \"green\",\n      \"blue\",\n      \"purple\",\n      \"pink\"\n    ].map((i) => /* @__PURE__ */ r.jsx(\n      _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Item,\n      {\n        onClick: () => {\n          e.onClick && e.onClick(), e.background.setColor(i);\n        },\n        component: \"div\",\n        \"data-test\": \"background-color-\" + i,\n        icon: /* @__PURE__ */ r.jsx(Ee, { backgroundColor: i, size: e.iconSize }),\n        rightSection: e.background.color === i ? /* @__PURE__ */ r.jsx(Re, { size: 16, style: { paddingLeft: \"8px\" } }) : /* @__PURE__ */ r.jsx(\"div\", { style: { width: \"24px\", padding: \"0\" } }),\n        children: i.charAt(0).toUpperCase() + i.slice(1)\n      },\n      \"background-color-\" + i\n    ))\n  ] }) : null;\n  return /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(n, {}),\n    /* @__PURE__ */ r.jsx(o, {})\n  ] });\n}, un = (e) => {\n  const n = Q(e.editor), [o, i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.editor.getActiveStyles().textColor || \"default\"\n  ), [s, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.editor.getActiveStyles().backgroundColor || \"default\"\n  );\n  q(e.editor, () => {\n    i(e.editor.getActiveStyles().textColor || \"default\"), c(\n      e.editor.getActiveStyles().backgroundColor || \"default\"\n    );\n  });\n  const { ref: d, updateMaxHeight: g } = xe(), a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (p) => {\n      e.editor.focus(), p === \"default\" ? e.editor.removeStyles({ textColor: p }) : e.editor.addStyles({ textColor: p });\n    },\n    [e.editor]\n  ), y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (p) => {\n      e.editor.focus(), p === \"default\" ? e.editor.removeStyles({ backgroundColor: p }) : e.editor.addStyles({ backgroundColor: p });\n    },\n    [e.editor]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    for (const p of n)\n      if (p.content !== void 0)\n        return !0;\n    return !1;\n  }, [n]) ? /* @__PURE__ */ r.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu, { onOpen: g, children: [\n    /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Target, { children: /* @__PURE__ */ r.jsx(\n      P,\n      {\n        mainTooltip: \"Colors\",\n        icon: () => /* @__PURE__ */ r.jsx(\n          Ee,\n          {\n            textColor: o,\n            backgroundColor: s,\n            size: 20\n          }\n        )\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\"div\", { ref: d, children: /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Dropdown, { children: /* @__PURE__ */ r.jsx(\n      wt,\n      {\n        text: {\n          color: o,\n          setColor: a\n        },\n        background: {\n          color: s,\n          setColor: y\n        }\n      }\n    ) }) })\n  ] }) : null;\n}, gn = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  q(e.editor, () => {\n    o(e.editor.canNestBlock());\n  });\n  const i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    e.editor.focus(), e.editor.nestBlock();\n  }, [e.editor]);\n  return /* @__PURE__ */ r.jsx(\n    P,\n    {\n      onClick: i,\n      isDisabled: !n,\n      mainTooltip: \"Nest Block\",\n      secondaryTooltip: F(\"Tab\"),\n      icon: Ur\n    }\n  );\n}, fn = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  q(e.editor, () => {\n    o(e.editor.canUnnestBlock());\n  });\n  const i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    e.editor.focus(), e.editor.unnestBlock();\n  }, [e]);\n  return /* @__PURE__ */ r.jsx(\n    P,\n    {\n      onClick: i,\n      isDisabled: !n,\n      mainTooltip: \"Unnest Block\",\n      secondaryTooltip: F(\"Shift+Tab\"),\n      icon: Vr\n    }\n  );\n}, St = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    o(!1);\n  }, []), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    o(!0);\n  }, []);\n  return /* @__PURE__ */ r.jsx(\n    _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n    {\n      onShow: (c) => {\n        var d;\n        s(), (d = e.onShow) == null || d.call(e, c);\n      },\n      onHidden: (c) => {\n        var d;\n        i(), (d = e.onShow) == null || d.call(e, c);\n      },\n      content: n ? e.children[1] : null,\n      trigger: e.visible === void 0 ? \"click\" : void 0,\n      interactive: !0,\n      maxWidth: 500,\n      zIndex: 9e3,\n      ...e,\n      children: e.children[0]\n    }\n  );\n}, Mt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({ className: e, ...n }, o) => {\n  const { classes: i } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"ToolbarInputDropdown\"\n  });\n  return /* @__PURE__ */ r.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Stack,\n    {\n      ...n,\n      className: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.mergeCSSClasses)(i.root, e || \"\"),\n      ref: o,\n      children: n.children\n    }\n  );\n}), hn = {\n  text: _mantine_core__WEBPACK_IMPORTED_MODULE_4__.TextInput,\n  file: _mantine_core__WEBPACK_IMPORTED_MODULE_4__.FileInput\n}, ze = (e) => {\n  const n = e.icon, o = hn[e.type];\n  return /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Group, { children: /* @__PURE__ */ r.jsx(o, { size: \"xs\", icon: /* @__PURE__ */ r.jsx(n, {}), ...e.inputProps }) });\n}, Rt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({ url: e, text: n, update: o, ...i }, s) => {\n  const [c, d] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e), [g, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(n);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    d(e), a(n);\n  }, [n, e]);\n  const y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (T) => {\n      T.key === \"Enter\" && (T.preventDefault(), o(c, g));\n    },\n    [o, c, g]\n  ), x = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (T) => d(T.currentTarget.value),\n    []\n  ), p = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (T) => a(T.currentTarget.value),\n    []\n  ), S = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    () => o(c, g),\n    [o, c, g]\n  );\n  return /* @__PURE__ */ r.jsxs(Mt, { ...i, ref: s, children: [\n    /* @__PURE__ */ r.jsx(\n      ze,\n      {\n        type: \"text\",\n        icon: Ct,\n        inputProps: {\n          autoFocus: !0,\n          placeholder: \"Edit URL\",\n          value: c,\n          onKeyDown: y,\n          onChange: x,\n          onSubmit: S\n        }\n      }\n    ),\n    /* @__PURE__ */ r.jsx(\n      ze,\n      {\n        type: \"text\",\n        icon: ie,\n        inputProps: {\n          placeholder: \"Edit Title\",\n          value: g,\n          onKeyDown: y,\n          onChange: p,\n          onSubmit: S\n        }\n      }\n    )\n  ] });\n}), vn = (e) => {\n  const n = Q(e.editor), [o, i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.editor.getSelectedLinkUrl() || \"\"\n  ), [s, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e.editor.getSelectedText());\n  q(e.editor, () => {\n    c(e.editor.getSelectedText() || \"\"), i(e.editor.getSelectedLinkUrl() || \"\");\n  });\n  const d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (a, y) => {\n      e.editor.createLink(a, y), e.editor.focus();\n    },\n    [e.editor]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    for (const a of n)\n      if (a.content === void 0)\n        return !1;\n    return !0;\n  }, [n]) ? /* @__PURE__ */ r.jsxs(St, { children: [\n    /* @__PURE__ */ r.jsx(\n      P,\n      {\n        mainTooltip: \"Create Link\",\n        secondaryTooltip: F(\"Mod+K\"),\n        icon: Ct\n      }\n    ),\n    /* @__PURE__ */ r.jsx(Rt, { url: o, text: s, update: d })\n  ] }) : null;\n}, Et = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.editor.uploadFile !== void 0 ? \"upload\" : \"embed\"\n  ), [i, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [c, d] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    c && setTimeout(() => {\n      d(!1);\n    }, 3e3);\n  }, [c]);\n  const g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (T) => {\n      if (s(!0), e.editor.uploadFile !== void 0)\n        try {\n          const D = await e.editor.uploadFile(T);\n          e.editor.updateBlock(e.block, {\n            type: \"image\",\n            props: {\n              url: D\n            }\n          });\n        } catch {\n          d(!0);\n        } finally {\n          s(!1);\n        }\n    },\n    [e.block, e.editor]\n  ), [a, y] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\"), x = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (T) => {\n      y(T.currentTarget.value);\n    },\n    []\n  ), p = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (T) => {\n      T.key === \"Enter\" && (T.preventDefault(), e.editor.updateBlock(e.block, {\n        type: \"image\",\n        props: {\n          url: a\n        }\n      }));\n    },\n    [a, e.block, e.editor]\n  ), S = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    e.editor.updateBlock(e.block, {\n      type: \"image\",\n      props: {\n        url: a\n      }\n    });\n  }, [a, e.block, e.editor]);\n  return /* @__PURE__ */ r.jsx(\n    _e,\n    {\n      style: {\n        width: \"500px\"\n      },\n      children: /* @__PURE__ */ r.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Tabs, { value: n, onTabChange: o, children: [\n        i && /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.LoadingOverlay, { visible: i }),\n        /* @__PURE__ */ r.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Tabs.List, { children: [\n          e.editor.uploadFile !== void 0 && /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Tabs.Tab, { value: \"upload\", \"data-test\": \"upload-tab\", children: \"Upload\" }),\n          /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Tabs.Tab, { value: \"embed\", \"data-test\": \"embed-tab\", children: \"Embed\" })\n        ] }),\n        e.editor.uploadFile !== void 0 && /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Tabs.Panel, { value: \"upload\", children: /* @__PURE__ */ r.jsxs(\n          \"div\",\n          {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"stretch\",\n              gap: \"8px\"\n            },\n            children: [\n              /* @__PURE__ */ r.jsx(\n                _mantine_core__WEBPACK_IMPORTED_MODULE_4__.FileInput,\n                {\n                  placeholder: \"Upload Image\",\n                  size: \"xs\",\n                  value: null,\n                  onChange: g,\n                  \"data-test\": \"upload-input\"\n                }\n              ),\n              c && /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Text, { color: \"red\", size: 12, style: { textAlign: \"center\" }, children: \"Error: Upload failed\" })\n            ]\n          }\n        ) }),\n        /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Tabs.Panel, { value: \"embed\", children: /* @__PURE__ */ r.jsxs(\n          \"div\",\n          {\n            style: {\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              gap: \"8px\"\n            },\n            children: [\n              /* @__PURE__ */ r.jsx(\n                _mantine_core__WEBPACK_IMPORTED_MODULE_4__.TextInput,\n                {\n                  size: \"xs\",\n                  placeholder: \"Enter URL\",\n                  value: a,\n                  onChange: x,\n                  onKeyDown: p,\n                  style: { width: \"100%\" },\n                  \"data-test\": \"embed-input\"\n                }\n              ),\n              /* @__PURE__ */ r.jsx(\n                _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Button,\n                {\n                  onClick: S,\n                  size: \"xs\",\n                  \"data-test\": \"embed-input-button\",\n                  children: \"Embed Image\"\n                }\n              )\n            ]\n          }\n        ) })\n      ] })\n    }\n  );\n}, bn = (e) => {\n  const n = Q(e.editor), [o, i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    i(!1);\n  }, [n]), // Checks if only one block is selected.\n  n.length === 1 && // Checks if the selected block is an image.\n  n[0].type === \"image\" ? /* @__PURE__ */ r.jsx(\n    _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n    {\n      visible: o,\n      interactive: !0,\n      content: /* @__PURE__ */ r.jsx(\n        Et,\n        {\n          block: n[0],\n          editor: e.editor\n        }\n      ),\n      children: /* @__PURE__ */ r.jsx(\n        P,\n        {\n          onClick: () => i(!o),\n          isSelected: o,\n          mainTooltip: \"Replace Image\",\n          icon: Kr\n        }\n      )\n    }\n  ) : null;\n}, xn = (e) => {\n  const n = Q(e.editor), o = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => (\n      // Checks if only one block is selected.\n      n.length === 1 && // Checks if the selected block is an image.\n      n[0].type === \"image\" && // Checks if the block has a `caption` prop which can take any string\n      // value.\n      \"caption\" in e.editor.schema.image.propSchema && typeof e.editor.schema.image.propSchema.caption.default == \"string\" && e.editor.schema.image.propSchema.caption.values === void 0 && // Checks if the block has a `src` prop which can take any string value.\n      \"src\" in e.editor.schema.image.propSchema && typeof e.editor.schema.image.propSchema.src.default == \"string\" && e.editor.schema.image.propSchema.src.values === void 0 && // Checks if the `src` prop is not set to an empty string.\n      n[0].props.src !== \"\"\n    ),\n    [e.editor.schema, n]\n  ), [i, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    o ? n[0].props.caption : \"\"\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(\n    () => s(\n      o ? n[0].props.caption : \"\"\n    ),\n    [n, o]\n  );\n  const c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (g) => {\n      g.key === \"Enter\" && (g.preventDefault(), e.editor.updateBlock(n[0], {\n        type: \"image\",\n        props: {\n          caption: i\n        }\n      }));\n    },\n    [i, e.editor, n]\n  ), d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (g) => s(g.currentTarget.value),\n    []\n  );\n  return o ? /* @__PURE__ */ r.jsxs(St, { children: [\n    /* @__PURE__ */ r.jsx(\n      P,\n      {\n        mainTooltip: \"Edit Caption\",\n        icon: ie,\n        isSelected: n[0].props.caption !== \"\"\n      }\n    ),\n    /* @__PURE__ */ r.jsx(Mt, { children: /* @__PURE__ */ r.jsx(\n      ze,\n      {\n        type: \"text\",\n        icon: ie,\n        inputProps: {\n          autoFocus: !0,\n          placeholder: \"Edit Caption\",\n          value: i,\n          onKeyDown: c,\n          onChange: d\n        }\n      }\n    ) })\n  ] }) : null;\n}, mn = (e) => /* @__PURE__ */ r.jsxs(_e, { children: [\n  /* @__PURE__ */ r.jsx(on, { ...e, items: e.blockTypeDropdownItems }),\n  /* @__PURE__ */ r.jsx(xn, { editor: e.editor }),\n  /* @__PURE__ */ r.jsx(bn, { editor: e.editor }),\n  /* @__PURE__ */ r.jsx(he, { editor: e.editor, toggledStyle: \"bold\" }),\n  /* @__PURE__ */ r.jsx(he, { editor: e.editor, toggledStyle: \"italic\" }),\n  /* @__PURE__ */ r.jsx(he, { editor: e.editor, toggledStyle: \"underline\" }),\n  /* @__PURE__ */ r.jsx(he, { editor: e.editor, toggledStyle: \"strike\" }),\n  /* @__PURE__ */ r.jsx(Se, { editor: e.editor, textAlignment: \"left\" }),\n  /* @__PURE__ */ r.jsx(Se, { editor: e.editor, textAlignment: \"center\" }),\n  /* @__PURE__ */ r.jsx(Se, { editor: e.editor, textAlignment: \"right\" }),\n  /* @__PURE__ */ r.jsx(un, { editor: e.editor }),\n  /* @__PURE__ */ r.jsx(gn, { editor: e.editor }),\n  /* @__PURE__ */ r.jsx(fn, { editor: e.editor }),\n  /* @__PURE__ */ r.jsx(vn, { editor: e.editor })\n] }), st = (e) => {\n  switch (e) {\n    case \"left\":\n      return \"top-start\";\n    case \"center\":\n      return \"top\";\n    case \"right\":\n      return \"top-end\";\n    default:\n      return \"top-start\";\n  }\n}, kn = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [i, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    () => {\n      const a = e.editor.getTextCursorPosition().block;\n      return \"textAlignment\" in a.props ? st(\n        a.props.textAlignment\n      ) : \"top-start\";\n    }\n  ), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (_tippyjs_react__WEBPACK_IMPORTED_MODULE_5__.tippy.setDefaultProps({ maxWidth: \"\" }), e.editor.formattingToolbar.onUpdate((a) => {\n    o(a.show), c.current = a.referencePos;\n  })), [e.editor]), q(e.editor, () => {\n    const a = e.editor.getTextCursorPosition().block;\n    \"textAlignment\" in a.props ? s(\n      st(\n        a.props.textAlignment\n      )\n    ) : s(\"top-start\");\n  });\n  const d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => {\n      if (c)\n        return () => c.current;\n    },\n    [c.current]\n    // eslint-disable-line\n  ), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const a = e.formattingToolbar || mn;\n    return /* @__PURE__ */ r.jsx(a, { editor: e.editor });\n  }, [e.editor, e.formattingToolbar]);\n  return /* @__PURE__ */ r.jsx(\n    _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n    {\n      appendTo: e.editor.domElement.parentElement,\n      content: g,\n      getReferenceClientRect: d,\n      interactive: !0,\n      visible: n,\n      animation: \"fade\",\n      placement: i,\n      sticky: !0,\n      plugins: yn,\n      zIndex: 3e3\n    }\n  );\n}, yn = [tippy_js__WEBPACK_IMPORTED_MODULE_6__.sticky], pn = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  return n ? /* @__PURE__ */ r.jsx(\n    Rt,\n    {\n      url: e.url,\n      text: e.text,\n      update: e.editHyperlink,\n      onBlur: (s) => setTimeout(() => {\n        var c;\n        (c = i.current) != null && c.contains(s.relatedTarget) || o(!1);\n      }, 500),\n      ref: i\n    }\n  ) : /* @__PURE__ */ r.jsxs(\n    _e,\n    {\n      onMouseEnter: e.stopHideTimer,\n      onMouseLeave: e.startHideTimer,\n      children: [\n        /* @__PURE__ */ r.jsx(\n          P,\n          {\n            mainTooltip: \"Edit\",\n            isSelected: !1,\n            onClick: () => o(!0),\n            children: \"Edit Link\"\n          }\n        ),\n        /* @__PURE__ */ r.jsx(\n          P,\n          {\n            mainTooltip: \"Open in new tab\",\n            isSelected: !1,\n            onClick: () => {\n              window.open(e.url, \"_blank\");\n            },\n            icon: Gr\n          }\n        ),\n        /* @__PURE__ */ r.jsx(\n          P,\n          {\n            mainTooltip: \"Remove link\",\n            isSelected: !1,\n            onClick: e.deleteHyperlink,\n            icon: $r\n          }\n        )\n      ]\n    }\n  );\n}, Cn = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [i, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), [c, d] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => e.editor.hyperlinkToolbar.on(\n    \"update\",\n    (x) => {\n      o(x.show), s(x.url), d(x.text), g.current = x.referencePos;\n    }\n  ), [e.editor]);\n  const a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => {\n      if (g.current)\n        return () => g.current;\n    },\n    [g.current]\n    // eslint-disable-line\n  ), y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!i || !c)\n      return null;\n    const x = e.hyperlinkToolbar || pn;\n    return /* @__PURE__ */ r.jsx(\n      x,\n      {\n        url: i,\n        text: c,\n        editHyperlink: e.editor.hyperlinkToolbar.editHyperlink,\n        deleteHyperlink: e.editor.hyperlinkToolbar.deleteHyperlink,\n        startHideTimer: e.editor.hyperlinkToolbar.startHideTimer,\n        stopHideTimer: e.editor.hyperlinkToolbar.stopHideTimer\n      }\n    );\n  }, [e.hyperlinkToolbar, e.editor, c, i]);\n  return /* @__PURE__ */ r.jsx(\n    _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n    {\n      appendTo: e.editor.domElement.parentElement,\n      content: y,\n      getReferenceClientRect: a,\n      interactive: !0,\n      visible: n,\n      animation: \"fade\",\n      placement: \"top-start\",\n      zIndex: 4e3\n    }\n  );\n}, jn = (e) => {\n  const { classes: n } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"SideMenu\"\n  });\n  return /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Group, { className: n.root, spacing: 0, children: e.children });\n};\nfunction Tn(e) {\n  return j({ tag: \"svg\", attr: { t: \"1551322312294\", style: \"\", viewBox: \"0 0 1024 1024\", version: \"1.1\" }, child: [{ tag: \"defs\", attr: {}, child: [] }, { tag: \"path\", attr: { d: \"M474 152m8 0l60 0q8 0 8 8l0 704q0 8-8 8l-60 0q-8 0-8-8l0-704q0-8 8-8Z\" } }, { tag: \"path\", attr: { d: \"M168 474m8 0l672 0q8 0 8 8l0 60q0 8-8 8l-672 0q-8 0-8-8l0-60q0-8 8-8Z\" } }] })(e);\n}\nconst zt = (e) => /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.ActionIcon, { size: 24, children: e.children }), wn = (e) => /* @__PURE__ */ r.jsx(zt, { children: /* @__PURE__ */ r.jsx(\n  Tn,\n  {\n    size: 24,\n    onClick: e.addBlock,\n    \"data-test\": \"dragHandleAdd\"\n  }\n) });\nfunction Sn(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0V0z\" } }, { tag: \"path\", attr: { d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" } }] })(e);\n}\nconst Mn = (e) => {\n  const { classes: n } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"DragHandleMenu\"\n  });\n  return /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Dropdown, { className: n.root, style: { overflow: \"visible\" }, children: e.children });\n}, Ht = (e) => {\n  const { children: n, ...o } = e;\n  return /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Item, { ...o, children: n });\n}, Rn = (e) => /* @__PURE__ */ r.jsx(\n  Ht,\n  {\n    onClick: () => e.editor.removeBlocks([e.block]),\n    children: e.children\n  }\n), En = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), { ref: i, updateMaxHeight: s } = xe(), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(), d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    c.current && clearTimeout(c.current), c.current = setTimeout(() => {\n      o(!1);\n    }, 250);\n  }, []), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    c.current && clearTimeout(c.current), n || s(), o(!0);\n  }, [n, s]);\n  return !(\"textColor\" in e.block.props) && !(\"backgroundColor\" in e.block.props) ? null : /* @__PURE__ */ r.jsx(\n    Ht,\n    {\n      onMouseLeave: d,\n      onMouseOver: g,\n      children: /* @__PURE__ */ r.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu, { opened: n, position: \"right\", children: [\n        /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Target, { children: /* @__PURE__ */ r.jsxs(\"div\", { style: { display: \"flex\", alignItems: \"center\" }, children: [\n          /* @__PURE__ */ r.jsx(\"div\", { style: { flex: 1 }, children: e.children }),\n          /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Box, { style: { display: \"flex\", alignItems: \"center\" }, children: /* @__PURE__ */ r.jsx(Zr, { size: 15 }) })\n        ] }) }),\n        /* @__PURE__ */ r.jsx(\"div\", { ref: i, children: /* @__PURE__ */ r.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Dropdown,\n          {\n            onMouseLeave: d,\n            onMouseOver: g,\n            style: { marginLeft: \"5px\" },\n            children: /* @__PURE__ */ r.jsx(\n              wt,\n              {\n                iconSize: 18,\n                text: \"textColor\" in e.block.props && typeof e.block.props.textColor == \"string\" ? {\n                  color: e.block.props.textColor,\n                  setColor: (a) => e.editor.updateBlock(e.block, {\n                    props: { textColor: a }\n                  })\n                } : void 0,\n                background: \"backgroundColor\" in e.block.props && typeof e.block.props.backgroundColor == \"string\" ? {\n                  color: e.block.props.backgroundColor,\n                  setColor: (a) => e.editor.updateBlock(e.block, {\n                    props: { backgroundColor: a }\n                  })\n                } : void 0\n              }\n            )\n          }\n        ) })\n      ] })\n    }\n  );\n}, zn = (e) => /* @__PURE__ */ r.jsxs(Mn, { children: [\n  /* @__PURE__ */ r.jsx(Rn, { ...e, children: \"Delete\" }),\n  /* @__PURE__ */ r.jsx(En, { ...e, children: \"Colors\" })\n] }), Hn = (e) => {\n  const n = e.dragHandleMenu || zn;\n  return /* @__PURE__ */ r.jsxs(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu,\n    {\n      trigger: \"click\",\n      onOpen: e.freezeMenu,\n      onClose: e.unfreezeMenu,\n      width: 100,\n      position: \"left\",\n      children: [\n        /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Target, { children: /* @__PURE__ */ r.jsx(\n          \"div\",\n          {\n            draggable: \"true\",\n            onDragStart: e.blockDragStart,\n            onDragEnd: e.blockDragEnd,\n            children: /* @__PURE__ */ r.jsx(zt, { children: /* @__PURE__ */ r.jsx(Sn, { size: 24, \"data-test\": \"dragHandle\" }) })\n          }\n        ) }),\n        /* @__PURE__ */ r.jsx(n, { editor: e.editor, block: e.block })\n      ]\n    }\n  );\n}, In = (e) => /* @__PURE__ */ r.jsxs(jn, { children: [\n  /* @__PURE__ */ r.jsx(wn, { ...e }),\n  /* @__PURE__ */ r.jsx(Hn, { ...e })\n] }), Bn = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [i, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => e.editor.sideMenu.onUpdate((a) => {\n    o(a.show), s(a.block), c.current = a.referencePos;\n  }), [e.editor]);\n  const d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => {\n      if (c.current)\n        return () => c.current;\n    },\n    [c.current]\n    // eslint-disable-line\n  ), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!i)\n      return null;\n    const a = e.sideMenu || In;\n    return /* @__PURE__ */ r.jsx(\n      a,\n      {\n        block: i,\n        editor: e.editor,\n        blockDragStart: e.editor.sideMenu.blockDragStart,\n        blockDragEnd: e.editor.sideMenu.blockDragEnd,\n        addBlock: e.editor.sideMenu.addBlock,\n        freezeMenu: e.editor.sideMenu.freezeMenu,\n        unfreezeMenu: e.editor.sideMenu.unfreezeMenu\n      }\n    );\n  }, [i, e.editor, e.sideMenu]);\n  return /* @__PURE__ */ r.jsx(\n    _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n    {\n      appendTo: e.editor.domElement.parentElement,\n      content: g,\n      getReferenceClientRect: d,\n      interactive: !0,\n      visible: n,\n      animation: \"fade\",\n      offset: _n,\n      placement: \"left\",\n      popperOptions: Dn,\n      zIndex: 1e3\n    }\n  );\n}, _n = [0, 0], Dn = {\n  modifiers: [\n    {\n      name: \"flip\",\n      options: {\n        fallbackPlacements: []\n      }\n    },\n    {\n      name: \"preventOverflow\",\n      options: {\n        mainAxis: !1,\n        altAxis: !1\n      }\n    }\n  ]\n}, Pn = 5;\nfunction On(e) {\n  const n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), { classes: o } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"SuggestionListItem\"\n  });\n  function i() {\n    var g;\n    const c = e.isSelected, d = (g = n.current) == null ? void 0 : g.matches(\":hover\");\n    return c || d;\n  }\n  function s() {\n    var c, d;\n    i() ? (c = n.current) == null || c.setAttribute(\"data-hovered\", \"true\") : (d = n.current) == null || d.removeAttribute(\"data-hovered\");\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    s(), i() && n.current && n.current.getBoundingClientRect().left > Pn && n.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\"\n    });\n  }), /* @__PURE__ */ r.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Item,\n    {\n      className: o.root,\n      icon: e.icon,\n      onClick: e.set,\n      closeMenuOnClick: !1,\n      onMouseLeave: () => {\n        setTimeout(() => {\n          s();\n        }, 1);\n      },\n      ref: n,\n      rightSection: e.shortcut && /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Badge, { size: \"xs\", children: e.shortcut }),\n      children: /* @__PURE__ */ r.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Stack, { children: [\n        /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Text, { size: 14, weight: 500, children: e.name }),\n        /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Text, { size: 10, children: e.hint })\n      ] })\n    }\n  );\n}\nfunction Fn(e) {\n  const { classes: n } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"SlashMenu\"\n  }), o = [];\n  let i = 0;\n  const s = lodash__WEBPACK_IMPORTED_MODULE_3__.groupBy(e.filteredItems, (c) => c.group);\n  return lodash__WEBPACK_IMPORTED_MODULE_3__.forEach(s, (c) => {\n    o.push(\n      /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Label, { children: c[0].group }, c[0].group)\n    );\n    for (const d of c)\n      o.push(\n        /* @__PURE__ */ r.jsx(\n          On,\n          {\n            name: d.name,\n            icon: d.icon,\n            hint: d.hint,\n            shortcut: d.shortcut,\n            isSelected: e.keyboardHoveredItemIndex === i,\n            set: () => e.itemCallback(d)\n          },\n          d.name\n        )\n      ), i++;\n  }), /* @__PURE__ */ r.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu,\n    {\n      defaultOpened: !0,\n      trigger: \"hover\",\n      closeDelay: 1e7,\n      children: /* @__PURE__ */ r.jsx(\n        _mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Dropdown,\n        {\n          onMouseDown: (c) => c.preventDefault(),\n          className: n.root,\n          children: o.length > 0 ? o : /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Menu.Item, { children: \"No match found\" })\n        }\n      )\n    }\n  );\n}\nconst An = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [i, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), [c, d] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => e.editor.slashMenu.onUpdate((S) => {\n    o(S.show), s(S.filteredItems), d(S.keyboardHoveredItemIndex), g.current = S.referencePos;\n  }), [e.editor]);\n  const a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => {\n      if (g.current)\n        return () => g.current;\n    },\n    [g.current]\n    // eslint-disable-line\n  ), { ref: y, updateMaxHeight: x } = xe(), p = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!i || c === void 0)\n      return null;\n    const S = e.slashMenu || Fn;\n    return /* @__PURE__ */ r.jsx(\"div\", { ref: y, children: /* @__PURE__ */ r.jsx(\n      S,\n      {\n        filteredItems: i,\n        itemCallback: (T) => e.editor.slashMenu.itemCallback(T),\n        keyboardHoveredItemIndex: c\n      }\n    ) });\n  }, [\n    i,\n    c,\n    e.editor.slashMenu,\n    e.slashMenu,\n    y\n  ]);\n  return /* @__PURE__ */ r.jsx(\n    _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n    {\n      onShow: x,\n      appendTo: e.editor.domElement.parentElement,\n      content: p,\n      getReferenceClientRect: a,\n      interactive: !0,\n      visible: n,\n      animation: \"fade\",\n      placement: \"bottom-start\",\n      zIndex: 2e3\n    }\n  );\n}, k = [\n  \"#FFFFFF\",\n  \"#EFEFEF\",\n  \"#CFCFCF\",\n  \"#AFAFAF\",\n  \"#7F7F7F\",\n  \"#3F3F3F\",\n  \"#1F1F1F\",\n  \"#161616\",\n  \"#0F0F0F\",\n  \"#000000\"\n], ve = {\n  colors: {\n    editor: {\n      text: k[5],\n      background: k[0]\n    },\n    menu: {\n      text: k[5],\n      background: k[0]\n    },\n    tooltip: {\n      text: k[5],\n      background: k[1]\n    },\n    hovered: {\n      text: k[5],\n      background: k[1]\n    },\n    selected: {\n      text: k[0],\n      background: k[5]\n    },\n    disabled: {\n      text: k[3],\n      background: k[1]\n    },\n    shadow: k[2],\n    border: k[1],\n    sideMenu: k[2],\n    highlightColors: {\n      gray: {\n        text: \"#9b9a97\",\n        background: \"#ebeced\"\n      },\n      brown: {\n        text: \"#64473a\",\n        background: \"#e9e5e3\"\n      },\n      red: {\n        text: \"#e03e3e\",\n        background: \"#fbe4e4\"\n      },\n      orange: {\n        text: \"#d9730d\",\n        background: \"#f6e9d9\"\n      },\n      yellow: {\n        text: \"#dfab01\",\n        background: \"#fbf3db\"\n      },\n      green: {\n        text: \"#4d6461\",\n        background: \"#ddedea\"\n      },\n      blue: {\n        text: \"#0b6e99\",\n        background: \"#ddebf1\"\n      },\n      purple: {\n        text: \"#6940a5\",\n        background: \"#eae4f2\"\n      },\n      pink: {\n        text: \"#ad1a72\",\n        background: \"#f4dfeb\"\n      }\n    }\n  },\n  borderRadius: 6,\n  fontFamily: '\"Inter\", \"SF Pro Display\", -apple-system, BlinkMacSystemFont, \"Open Sans\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif'\n}, dt = {\n  colors: {\n    editor: {\n      text: k[2],\n      background: k[6]\n    },\n    menu: {\n      text: k[2],\n      background: k[6]\n    },\n    tooltip: {\n      text: k[2],\n      background: k[7]\n    },\n    hovered: {\n      text: k[2],\n      background: k[7]\n    },\n    selected: {\n      text: k[2],\n      background: k[8]\n    },\n    disabled: {\n      text: k[5],\n      background: k[7]\n    },\n    shadow: k[8],\n    border: k[7],\n    sideMenu: k[4],\n    highlightColors: {\n      gray: {\n        text: \"#bebdb8\",\n        background: \"#9b9a97\"\n      },\n      brown: {\n        text: \"#8e6552\",\n        background: \"#64473a\"\n      },\n      red: {\n        text: \"#ec4040\",\n        background: \"#be3434\"\n      },\n      orange: {\n        text: \"#e3790d\",\n        background: \"#b7600a\"\n      },\n      yellow: {\n        text: \"#dfab01\",\n        background: \"#b58b00\"\n      },\n      green: {\n        text: \"#6b8b87\",\n        background: \"#4d6461\"\n      },\n      blue: {\n        text: \"#0e87bc\",\n        background: \"#0b6e99\"\n      },\n      purple: {\n        text: \"#8552d7\",\n        background: \"#6940a5\"\n      },\n      pink: {\n        text: \"#da208f\",\n        background: \"#ad1a72\"\n      }\n    }\n  },\n  borderRadius: ve.borderRadius,\n  fontFamily: ve.fontFamily\n}, Ln = (e) => {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [i, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (_tippyjs_react__WEBPACK_IMPORTED_MODULE_5__.tippy.setDefaultProps({ maxWidth: \"\" }), e.editor.imageToolbar.onUpdate((a) => {\n    o(a.show), s(a.block), c.current = a.referencePos;\n  })), [e.editor]);\n  const d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => {\n      if (c)\n        return () => c.current;\n    },\n    [c.current]\n    // eslint-disable-line\n  ), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const a = e.imageToolbar || Et;\n    return /* @__PURE__ */ r.jsx(a, { editor: e.editor, block: i });\n  }, [i, e.editor, e.imageToolbar]);\n  return /* @__PURE__ */ r.jsx(\n    _tippyjs_react__WEBPACK_IMPORTED_MODULE_5__,\n    {\n      appendTo: e.editor.domElement.parentElement,\n      content: g,\n      getReferenceClientRect: d,\n      interactive: !0,\n      visible: n,\n      animation: \"fade\",\n      placement: \"bottom\",\n      zIndex: 5e3\n    }\n  );\n};\nfunction Vn(e) {\n  var d;\n  const { classes: n } = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_4__.createStyles)({ root: {} })(void 0, {\n    name: \"Editor\"\n  }), { editor: o, children: i, className: s, ...c } = e;\n  return /* @__PURE__ */ r.jsx(\n    _tiptap_react__WEBPACK_IMPORTED_MODULE_7__.EditorContent,\n    {\n      editor: (d = e.editor) == null ? void 0 : d._tiptapEditor,\n      className: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.mergeCSSClasses)(n.root, e.className || \"\"),\n      ...c,\n      children: e.children || /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n        /* @__PURE__ */ r.jsx(kn, { editor: e.editor }),\n        /* @__PURE__ */ r.jsx(Cn, { editor: e.editor }),\n        /* @__PURE__ */ r.jsx(An, { editor: e.editor }),\n        /* @__PURE__ */ r.jsx(Bn, { editor: e.editor }),\n        /* @__PURE__ */ r.jsx(Ln, { editor: e.editor })\n      ] })\n    }\n  );\n}\nfunction eo(e) {\n  const {\n    theme: n = { light: ve, dark: dt },\n    ...o\n  } = e, i = use_prefers_color_scheme__WEBPACK_IMPORTED_MODULE_2__(), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => n === \"light\" ? fe(ve) : n === \"dark\" ? fe(dt) : \"light\" in n && \"dark\" in n ? fe(\n    n[i === \"dark\" ? \"dark\" : \"light\"]\n  ) : fe(n), [i, n]);\n  return /* @__PURE__ */ r.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.MantineProvider, { theme: s, children: /* @__PURE__ */ r.jsx(Vn, { ...o }) });\n}\nconst Un = {\n  Heading: {\n    group: \"Headings\",\n    icon: /* @__PURE__ */ r.jsx(kt, { size: 18 }),\n    hint: \"Used for a top-level heading\",\n    shortcut: F(\"Mod-Alt-1\")\n  },\n  \"Heading 2\": {\n    group: \"Headings\",\n    icon: /* @__PURE__ */ r.jsx(yt, { size: 18 }),\n    hint: \"Used for key sections\",\n    shortcut: F(\"Mod-Alt-2\")\n  },\n  \"Heading 3\": {\n    group: \"Headings\",\n    icon: /* @__PURE__ */ r.jsx(pt, { size: 18 }),\n    hint: \"Used for subsections and group headings\",\n    shortcut: F(\"Mod-Alt-3\")\n  },\n  \"Numbered List\": {\n    group: \"Basic blocks\",\n    icon: /* @__PURE__ */ r.jsx(jt, { size: 18 }),\n    hint: \"Used to display a numbered list\",\n    shortcut: F(\"Mod-Alt-7\")\n  },\n  \"Bullet List\": {\n    group: \"Basic blocks\",\n    icon: /* @__PURE__ */ r.jsx(Tt, { size: 18 }),\n    hint: \"Used to display an unordered list\",\n    shortcut: F(\"Mod-Alt-9\")\n  },\n  Paragraph: {\n    group: \"Basic blocks\",\n    icon: /* @__PURE__ */ r.jsx(ie, { size: 18 }),\n    hint: \"Used for the body of your document\",\n    shortcut: F(\"Mod-Alt-0\")\n  },\n  Image: {\n    group: \"Media\",\n    icon: /* @__PURE__ */ r.jsx(qr, {}),\n    hint: \"Insert an image\"\n  }\n};\nfunction Nn(e = _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.defaultBlockSchema) {\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.getDefaultSlashMenuItems)(e).map((o) => ({\n    ...o,\n    ...Un[o.name]\n  }));\n}\nconst $n = (e) => new _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.BlockNoteEditor({\n  slashMenuItems: Nn(\n    e.blockSchema || _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.defaultBlockSchema\n  ),\n  ...e\n}), to = (e = {}, n = []) => {\n  const o = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (o.current && o.current._tiptapEditor.destroy(), o.current = $n(e), o.current), n);\n};\nfunction Wn() {\n  const [, e] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  return () => e((n) => n + 1);\n}\nconst ro = (e) => {\n  const n = Wn();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const o = () => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          n();\n        });\n      });\n    };\n    return e.on(\"transaction\", o), () => {\n      e.off(\"transaction\", o);\n    };\n  }, [e]);\n}, It = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({}), no = (e) => {\n  const n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(It).inlineContent || {}, o = (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.mergeCSSClasses)(\n    e.className || \"\",\n    _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.inlineContent,\n    n.class\n  );\n  return /* @__PURE__ */ r.jsx(\n    _tiptap_react__WEBPACK_IMPORTED_MODULE_7__.NodeViewContent,\n    {\n      ...Object.fromEntries(\n        Object.entries(n).filter(\n          ([i]) => i !== \"class\"\n        )\n      ),\n      ...e,\n      className: o\n    }\n  );\n};\nfunction oo(e) {\n  return {\n    node: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.createTipTapBlock)({\n      name: e.type,\n      content: e.containsInlineContent ? \"inline*\" : \"\",\n      selectable: !0,\n      addAttributes() {\n        return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.propsToAttributes)(e);\n      },\n      parseHTML() {\n        return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.parse)(e);\n      },\n      renderHTML({ HTMLAttributes: o }) {\n        return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.render)(e, o);\n      },\n      addNodeView() {\n        return (0,_tiptap_react__WEBPACK_IMPORTED_MODULE_7__.ReactNodeViewRenderer)((i) => {\n          var T;\n          const s = e.render, c = ((T = this.options.domAttributes) == null ? void 0 : T.blockContent) || {}, d = {};\n          for (const [D, le] of Object.entries(i.node.attrs))\n            D in e.propSchema && le !== e.propSchema[D].default && (d[(0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.camelToDataKebab)(D)] = le);\n          const g = this.options.editor, a = typeof i.getPos == \"function\" ? i.getPos() : void 0, p = g._tiptapEditor.state.doc.resolve(a).node().attrs.id, S = g.getBlock(p);\n          if (S.type !== e.type)\n            throw new Error(\"Block type does not match\");\n          return /* @__PURE__ */ r.jsx(\n            _tiptap_react__WEBPACK_IMPORTED_MODULE_7__.NodeViewWrapper,\n            {\n              ...Object.fromEntries(\n                Object.entries(c).filter(\n                  ([D]) => D !== \"class\"\n                )\n              ),\n              className: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.mergeCSSClasses)(\n                _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.blockContent,\n                c.class\n              ),\n              \"data-content-type\": e.type,\n              ...d,\n              children: /* @__PURE__ */ r.jsx(\n                It.Provider,\n                {\n                  value: this.options.domAttributes || {},\n                  children: /* @__PURE__ */ r.jsx(s, { block: S, editor: g })\n                }\n              )\n            }\n          );\n        }, {\n          className: _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.blockStyles.reactNodeViewRenderer\n        });\n      }\n    }),\n    propSchema: e.propSchema\n  };\n}\n\n//# sourceMappingURL=blocknote-react.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/react/dist/blocknote-react.js\n");

/***/ })

};
;